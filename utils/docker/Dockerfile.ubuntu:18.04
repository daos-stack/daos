#
# Copyright 2018, Intel Corporation
#
# 'recipe' for Docker to build an image of Ubuntu-based
# environment for building the DAOS project.
#

# Pull base image
FROM ubuntu:18.04
MAINTAINER Johann Lombardi <johann.lombardi@intel.com>

# Build arguments can be set via -build-arg
# set NOBUILD to disable git clone & build
ARG NOBUILD
# use same UID as host and default value of 1000 if not specified
ARG UID=1000

# Update distribution
RUN apt-get update

# Install basic tools
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y git gcc golang-go make  \
                       cmake libtool-bin scons autoconf libboost-dev uuid-dev \
                       libssl-dev libevent-dev libltdl-dev librdmacm-dev      \
                       libcmocka0 libcmocka-dev libreadline6-dev curl doxygen \
                       pandoc flex patch nasm yasm graphviz doxygen           \
                       libibverbs-dev librdmacm-dev libcunit1-dev libnuma-dev \
                       libaio-dev sg3-utils libiscsi-dev python-dev mscgen    \
                       ninja-build meson pylint bash
# hack the default shell to bash instead of dash
RUN rm /bin/sh && ln -s bash /bin/sh

# Dependencies

# Add DAOS user
ENV USER daos
ENV PASSWD daos
RUN useradd -u $UID -ms /bin/bash $USER
RUN echo "$USER:$PASSWD" | chpasswd

# Create directory for DAOS backend storage
RUN mkdir /mnt/daos
RUN chown daos.daos /mnt/daos

# Switch to new user
USER $USER
WORKDIR /home/$USER

# Fetch DAOS code
RUN if [ "x$NOBUILD" = "x" ] ; then git clone https://github.com/daos-stack/daos.git; fi
WORKDIR /home/$USER/daos

# Build DAOS & dependencies
RUN if [ "x$NOBUILD" = "x" ] ; then git submodule init && git submodule update; fi
RUN if [ "x$NOBUILD" = "x" ] ; then scons --build-deps=yes USE_INSTALLED=all install; fi

# Set environment variables
ENV PATH=/home/daos/daos/install/bin:$PATH
ENV LD_LIBRARY_PATH=/home/daos/daos/install/lib:/home/daos/daos/install/lib/daos_srv:$LD_LIBRARY_PATH
ENV CPATH=/home/daos/daos/install/include:$CPATH
ENV CRT_PHY_ADDR_STR="ofi+sockets"
ENV OFI_INTERFACE=eth0
