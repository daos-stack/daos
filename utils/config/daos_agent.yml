# DAOS agent configuration file.
#
# Location of this configuration file is determined by first checking for the
# path specified through the -o option of the daos_agent command line.
# Otherwise, /etc/daos/daos_agent.yml is used.
#
# Section describing the daos_agent configuration
#
# Although not supported for now, one might want to connect to multiple
# DAOS installations from the same node in the future.
#
# Specify the associated DAOS systems.
# Name must match name specified in the daos_server.yml file on the server.
#
# NOTE: changing the name is not supported yet, it must be daos_server
#
# default: daos_server
#name: daos_server

# Management server access points
# Must have the same value for all agents and servers in a system.
# default: hostname of this node
#access_points: ['hostname1']

# Force different port number to connect to access points.
# default: 10001
#port: 10001

## Enable HTTP endpoint for remote telemetry collection.
# Note that enabling the endpoint automatically enables
# client telemetry collection.
#
## default endpoint state: disabled
## default endpoint port: 9192
#telemetry_port: 9192

## Enable client telemetry for all DAOS clients.
# If false, clients will need to optionally enable telemetry by setting
# the D_CLIENT_METRICS_ENABLE environment variable to true.
#
## default: false
#telemetry_enabled: true

## Retain client telemetry for a period of time after the client
# process exits.
#
## default 0 (do not retain telemetry after client exit)
#telemetry_retain: 1m

## Configuration for user credential management.
#credential_config:
#  # If the agent should be able to resolve unknown client uids and gids
#  # (e.g. when running in a container) into ACL principal names, then a
#  # client user map may be defined. The optional "default" uid is a special
#  # case and applies if no other matches are found.
#  client_user_map:
#    default:
#      user: nobody
#      group: nobody
#    1000:
#      user: ralph
#      group: stanley
#
#  # Optionally cache generated credentials with the specified cache
#  # lifetime. By default, a credential is generated for every client
#  # process that connects to a pool. If the credential cache is
#  # enabled, then local client processes connecting with stable
#  # uid:gid associations may take advantage of the cached credential
#  # and reduce some agent overhead. For heavily-loaded client nodes
#  # with many frequent (e.g. hundreds per minute) client connections,
#  # a lifetime of 1-5 minutes may be a reasonable tradeoff between
#  # performance and responsiveness to user/group database updates.
#  # If no expiration is set, credential caching is not enabled.
#  cache_expiration: 1m
#
## Configuration for SSL certificates used to secure management traffic
# and authenticate/authorize management components.
#transport_config:
#  # In order to disable transport security, uncomment and set allow_insecure
#  # to true. Not recommended for production configurations.
#  allow_insecure: false
#
#  # Custom CA Root certificate for generated certs
#  ca_cert: /etc/daos/certs/daosCA.crt
#  # Agent certificate for use in TLS handshakes
#  cert: /etc/daos/certs/agent.crt
#  # Key portion of Agent Certificate
#  key: /etc/daos/certs/agent.key
#

# Use the given directory for creating unix domain sockets
#
# NOTE: Do not change this when running under systemd control. If it needs to
#       be changed, then make sure that it matches the RuntimeDirectory setting
#       in /usr/lib/systemd/system/daos_agent.service
#
# default: /var/run/daos_agent
#runtime_dir: /var/run/daos_agent

# Full path and name of the DAOS agent logfile.
## default: print to stderr
#log_file: /var/log/daos/daos_agent.log

## Force specific debug mask for daos_agent (control plane).
## Mask specifies minimum level of message significance to pass to logger.
## Currently supported values are DISABLED, TRACE, DEBUG, INFO, NOTICE and ERROR.
#
## default: INFO
#control_log_mask: DEBUG

## Disable automatic eviction of open pool handles on agent shutdown. By default,
## the agent will evict all open pool handles for local processes on shutdown.
## Note that this implies that stopping or restarting the agent will result
## in interruption of DAOS I/O for any local DAOS client processes that have
## an open pool handle.
## default: false
#disable_auto_evict: true

## If enabled, the agent will evict any open pool handles associated with this machine on agent
## startup. This allows the servers to reclaim resources that may not have been properly cleaned
## up in the event of an agent or machine crash.
## default: false
#enable_evict_on_start: true

## Disable the agent's internal caches. If set to true, the agent will query the
## server access point and local hardware data every time a client requests
## rank connection information.
#
## default: false
#disable_caching: true

## Automatically expire the agent's remote cache after a period of time defined in
## minutes. It will refresh the data the next time it is requested.
#
## default: 0 (never expires)
#cache_expiration: 30

## Ignore a subset of fabric interfaces when selecting an interface for client
## applications. (Mutually exclusive with include).
#
#exclude_fabric_ifaces: ["lo", "eth1"]

## Conversely, only consider a specific set of fabric interfaces when selecting
## an interface for client applications. (Mutually exclusive with exclude).
#
#include_fabric_ifaces: ["eth0"]

# Manually define the fabric interfaces and domains to be used by the agent,
# organized by NUMA node.
# If not defined, the agent will automatically detect all fabric interfaces and
# select appropriate ones based on the server preferences.
#
#fabric_ifaces:
#-
#  numa_node: 0
#  devices:
#  -
#    iface: ib0
#    domain: mlx5_0
#  -
#    iface: ib1
#    domain: mlx5_1
#-
#  numa_node: 1
#  devices:
#  -
#    iface: ib2
#    domain: mlx5_2
#  -
#    iface: ib3
#    domain: mlx5_3
