# Example configuration file for Metadata on SSD.

name: daos_server           # sys group daos_server
access_points: ['example']  # management service leader (bootstrap)
# port: 10001               # control listen port, default 10001
provider: ofi+tcp
control_log_mask: INFO
control_log_file: /tmp/daos_server.log
control_metadata:
  path: /var/daos/config # Location to store control-plane metadata in MD-on-SSD mode.

## Transport Credentials Specifying certificates to secure communications
##
#transport_config:
#  # Specify to bypass loading certificates and use insecure communications channels.
#  # allow_insecure: true is not suitable for production environments and should only
#  # be used for experimental purposes.
#  allow_insecure: false
#  # Location where daos_server will look for Client certificates
#  client_cert_dir: .daos/clients
#  client_cert_dir: /etc/daos/certs/clients
#  # Custom CA Root certificate for generated certs
#  ca_cert: /etc/daos/certs/daosCA.crt
#  # Server certificate for use in TLS handshakes
#  cert: /etc/daos/certs/server.crt
#  # Key portion of Server Certificate
#  key: /etc/daos/certs/server.key

telemetry_port: 9191

engines:
  -
    pinned_numa_node: 0
    targets: 4              # number of I/O service threads per-engine
    nr_xs_helpers: 1        # count of I/O offload threads per engine
    fabric_iface: ib0
    fabric_iface_port: 31316
    log_file: /tmp/daos_engine.0.log
    log_mask: INFO

    env_vars:
      - FI_SOCKETS_MAX_CONN_RETRY=1
      - FI_SOCKETS_CONN_TIMEOUT=2000

    # Storage definitions for Metadata on SSD.

    # Without persistent SCM storage, the first tier uses RAM to hold metadata.
    # Metadata updates are persisted to a write-ahead log (wal) in NVMe, which
    # is checkpointed (meta) to NVME.  Each of the (bdev) tiers specified after
    # the first ram class has a combination of the following roles:
    # wal, meta, data

    # bdev_roles must be specified on each NVMe storage tier to use MD-on-SSD mode
    # and these roles can only be applied when the first storage tier is of class "ram".
    # If the first storage tier is of class "dcpm", no bdev_roles can be specified.

    # MD-on-SSD roles must be assigned explicitly.  To do this, each of the roles
    # must be assigned to at least one bdev tier and each tier must have one or more
    # roles assigned.  The role configuration where wal and data are on same tier but
    # meta is on a dedicated tier is not supported.  Maximum number of bdev tiers is 3.

    storage:
      -
        class: ram
        scm_mount: /mnt/daos
      -
        class: nvme
        bdev_list: ["0000:81:00.0"]
        bdev_roles: [wal]
      -
        class: nvme
        bdev_list: ["0000:82:00.0"]
        bdev_roles: [meta]
      -
        class: nvme
        bdev_list: ["0000:83:00.0"]
        bdev_roles: [data]

        # Alternatively, the two bdev tiers could be defined this way.
        # -
        #   class: nvme
        #   bdev_list: ["0000:81:00.0"]
        #   bdev_roles: [wal]
        # -
        #   class: nvme
        #   bdev_list: ["0000:82:00.0"]
        #   bdev_roles: [meta,data]

        # To use emulated NVMe, use `class: file` instead of `class: nvme`, see
        # utils/config/daos_server.yml for details on AIO file class.
