# Example configuration file for Metadata on SSD.

name: daos_server           # sys group daos_server
access_points: ['example']  # management service leader (bootstrap)
# port: 10001               # control listen port, default 10001
provider: ofi+tcp
control_log_mask: INFO
control_log_file: /tmp/daos_server.log
transport_config:
  allow_insecure: true

telemetry_port: 9191

engines:
  -
    pinned_numa_node: 0
    targets: 4              # number of I/O service threads per-engine
    nr_xs_helpers: 1        # count of I/O offload threads per engine
    fabric_iface: eth0
    fabric_iface_port: 31316
    log_file: /tmp/daos_engine.0.log

    env_vars:
      - FI_SOCKETS_MAX_CONN_RETRY=1
      - FI_SOCKETS_CONN_TIMEOUT=2000

    # Storage definitions for Metadata on SSD.

    # Without persistent SCM storage, the first tier uses RAM to hold metadata.
    # Metadata updates are persisted to a write-ahead log (WAL) in NVMe, which
    # is checkpointed (meta) to NVME.  The second and subsequent (bdev) tiers
    # describe the NVMe storage for these two roles; with data there are three
    # roles: wal, meta, data.

    # If no roles are specified, the server will assignment them.  Otherwise,
    # all three roles must assigned to a bdev tier.  A tier may have multiple
    # roles assigned, but only the data role may be assigned to multiple tiers.
    storage:
      -
        # MD on SSD roles only apply when class: ram is specified.  For dcpm,
        # only one bdev tier is supported and and it must have the data role.
        # The RAM size must be sufficient to hold metadata to accommodate the
        # data tier.  Required data to metadata ratios vary by usage, but
        # typically metadata will be a few percent as big as data.
        class: ram
        scm_size: 50       # assuming 3% metadata, 50GB RAM for 1.6TB NVMe data
        scm_mount: /mnt/daos

      -
        # Omit all bdev_roles, to use the defaults.
        class: nvme
        bdev_list: ["0000:81:00.0"]
        bdev_roles: [wal]
      -
        class: nvme
        bdev_list: ["0000:82:00.0"]
        bdev_roles: [meta]
      -
        class: nvme
        bdev_list: ["0000:83:00.0"]
        bdev_roles: [data]
