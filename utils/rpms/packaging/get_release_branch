#!/usr/bin/env bash
#
# Copyright 2025 Hewlett Packard Enterprise Development LP
#
# SPDX-License-Identifier: BSD-2-Clause-Patent
#
# find the base branch of the current branch
# base branches can be master, release/2.4+, release/3+
# or optionally branches passed into $1
set -eu -o pipefail
IFS=' ' read -r -a add_bases <<< "${1:-}"
origin="${ORIGIN:-origin}"
all_bases=()
while IFS= read -r base; do
    all_bases+=("$base")
done < <(echo "master"
         git branch -r | sed -ne "/^  $origin\\/release\\/\(2.[6-9]\|[3-9]\)/s/^  $origin\\///p")
all_bases+=("${add_bases[@]}")

tmpfile=$(mktemp)
trap 'rm -f "$tmpfile"; exit 1' HUP INT QUIT TERM
echo "999999 master" > $tmpfile

function commits_ahead()
{
    local branch="$1"

    git rev-parse --verify "$origin/$base" &> /dev/null || continue
    commits_ahead=$(git log --oneline "$origin/$base..HEAD" | wc -l)
    echo "$commits_ahead $branch" >> $tmpfile
}

min_diff=-1
for base in "${all_bases[@]}"; do
    git rev-parse --verify "$origin/$base" &> /dev/null || continue
    commits_ahead $base &
done

wait
first_branch=($(cat $tmpfile | sort -g | head -n 1))
echo "${first_branch[1]}"
rm -f "$tmpfile"

exit 0
