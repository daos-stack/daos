name: Build

on:
   pull_request:

concurrency:
  group: ci2-${{ github.head_ref }}
  cancel-in-progress: true

jobs:

  # Re-use the cache from the landing-builds workflow if available, if not then build the images
  # from scratch, but do not save them.
  Build-and-test:
    name: Run DAOS/NLT tests
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        distro: [ubuntu.20.04]
    env:
      DEPS_JOBS: 10
      COMPILER: clang
      BASE_DISTRO: ${{ matrix.distro }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 100
    - name: Setup git hash
      run: ./ci/gha_helper.py
      id: commit-hash
    - name: Fetch docker images from cache.
      uses: satackey/action-docker-layer-caching@v0.0.11
      continue-on-error: true
      with:
        key: ${{ steps.commit-hash.outputs.key }}
        restore-keys: |
          ${{ steps.commit-hash.outputs.restore }}
          ${{ steps.commit-hash.outputs.restore_prev }}
        skip-save: true
    - name: Update dependencies in image.
      run: docker build . --file utils/docker/Dockerfile.${{ matrix.distro }}
                          --build-arg DAOS_BUILD=no
                          --build-arg DEPS_JOBS
                          --build-arg DAOS_KEEP_SRC=yes
                          --tag build-image
    - name: Build and Test
      run: ./utils/run_in_ga_wrapper.sh
    - name: Publish NLT test results
      if: always()
      uses: EnricoMi/publish-unit-test-result-action@v1.17
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: nlt-junit.xml
        comment_mode: off
        fail_on: nothing

  Build:
    name: Build DAOS
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        distro: [rocky, fedora, leap.15]
        compiler: [clang, gcc]
        include:
          - distro: rocky
            base: centos.8
            with: rockylinux/rockylinux:8
            java: yes
          - distro: fedora
            base: centos.8
            with: fedora:35
            java: no
          - distro: leap.15
            base: leap.15
            with: leap.15
            java: yes
    env:
      DEPS_JOBS: 10
      BASE_DISTRO: ${{ matrix.with }}
      DOCKER_BASE: ${{ matrix.base }}
      COMPILER: ${{ matrix.compiler }}
      DAOS_JAVA_BUILD: ${{ matrix.java }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 100
    - name: Setup git hash
      run: ./ci/gha_helper.py
      id: commit-hash
    - name: Fetch docker images from cache.
      uses: satackey/action-docker-layer-caching@v0.0.11
      continue-on-error: true
      with:
        key: ${{ steps.commit-hash.outputs.key }}
        restore-keys: |
          ${{ steps.commit-hash.outputs.restore }}
          ${{ steps.commit-hash.outputs.restore_prev }}
        skip-save: true
    - name: Build in docker.
      run: docker build . --file utils/docker/Dockerfile.${{ matrix.base }}
                          --build-arg DEPS_JOBS
                          --build-arg BASE_DISTRO
                          --build-arg DAOS_JAVA_BUILD=no
                          --build-arg COMPILER
    - name: Build Java in docker.
      run: docker build . --file utils/docker/Dockerfile.${{ matrix.base }}
                          --build-arg DEPS_JOBS
                          --build-arg BASE_DISTRO
                          --build-arg DAOS_JAVA_BUILD
                          --build-arg COMPILER
    - name: Build debug in docker.
      run: docker build . --file utils/docker/Dockerfile.${{ matrix.base }}
                          --build-arg DEPS_JOBS
                          --build-arg BASE_DISTRO
                          --build-arg DAOS_JAVA_BUILD=no
                          --build-arg DAOS_BUILD_TYPE=debug
                          --build-arg COMPILER
    - name: Build devel in docker.
      run: docker build . --file utils/docker/Dockerfile.${{ matrix.base }}
                          --build-arg DEPS_JOBS
                          --build-arg BASE_DISTRO
                          --build-arg DAOS_JAVA_BUILD=no
                          --build-arg DAOS_BUILD_TYPE=dev
                          --build-arg COMPILER
