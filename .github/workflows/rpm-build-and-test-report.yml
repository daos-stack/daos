name: 'RPM Build and Test Report'

# TODO: All of these values need to be passed from the workflow_run job
env:
  # TODO: we really need to define a list of supported versions (ideally it's no more than 2)
  #       build is done on the lowest version and test on the highest with a "sanity test"
  #       stage done on all versions in the list ecept the highest
  EL8_BUILD_VERSION: 8.6
  EL8_VERSION: 8.8
  EL9_BUILD_VERSION: 9
  EL9_VERSION: 9
  LEAP15_VERSION: 15.5

on:
  workflow_run:
    workflows: ['RPM Build and Test']
    types:
      - completed
  # for testing before landing
  workflow_dispatch:

permissions: {}

jobs:
  report-vm-1:
    runs-on: [self-hosted, docker]
    # https://github.com/dorny/test-reporter/issues/149
    permissions:
      checks: write
    strategy:
      matrix:
        # TODO: figure out how to determine this matrix
        distro: ['el8', 'el9', 'leap15']
    env:
      # keep VS Code's GHA linting happy
      STAGE_NAME:
      RESULTS_STAGE_NAME:
    steps:
      - name: Set variables
        run: |
            case ${{ matrix.distro }} in
                'el8')
                    # TODO: these values should be transferred from the calling workflow
                    #       probably through an artifact
                    DISTRO_NAME="EL"
                    DISTRO_VERSION="${{ env.EL8_VERSION }}"
                    ;;
                'el9')
                    DISTRO_NAME="EL"
                    DISTRO_VERSION="${{ env.EL9_VERSION }}"
                    ;;
                'leap15')
                    DISTRO_NAME="Leap"
                    DISTRO_VERSION="${{ env.LEAP15_VERSION }}"
                    ;;
            esac
            echo "STAGE_NAME=Build RPM on $DISTRO_NAME $DISTRO_VERSION" >> $GITHUB_ENV
            echo "RESULTS_STAGE_NAME=Functional on $DISTRO_NAME $DISTRO_VERSION" >> $GITHUB_ENV
      - name: Test Report
        uses: phoenix-actions/test-reporting@v10
        with:
          artifact: ${{ env.RESULTS_STAGE_NAME }} test-results
          name: ${{ env.RESULTS_STAGE_NAME }} Test Results (phoenix-actions)
          path: ${{ env.RESULTS_STAGE_NAME }}/**/results.xml
          reporter: java-junit        # Format of test results

  report-hw-1:
    runs-on: [self-hosted, docker]
    strategy:
      matrix:
        # TODO: figure out how to determine this matrix
        stage: ['Large', 'Medium', 'Medium UCX Provider']
    env:
      STAGE_NAME:
    steps:
      - name: Set variables
        run: echo "STAGE_NAME=Functional Hardware ${{ matrix.stage }}" >> $GITHUB_ENV
      - name: Test Report
        uses: phoenix-actions/test-reporting@v10
        with:
          artifact: ${{ env.STAGE_NAME }} test-results
          name: ${{ env.STAGE_NAME }} Test Results (phoenix-actions)
          path: ${{ env.STAGE_NAME }}/**/results.xml
          reporter: java-junit        # Format of test results

  report-vm-2:
    runs-on: [self-hosted, docker]
    strategy:
      matrix:
        distro: ['el8', 'el9', 'leap15']
    env:
      # keep VS Code's GHA linting happy
      STAGE_NAME:
      RESULTS_STAGE_NAME:
    steps:
      - name: Set variables
        run: |
            case ${{ matrix.distro }} in
                'el8')
                    DISTRO_NAME="EL"
                    DISTRO_VERSION="${{ env.EL8_VERSION }}"
                    ;;
                'el9')
                    DISTRO_NAME="EL"
                    DISTRO_VERSION="${{ env.EL9_VERSION }}"
                    ;;
                'leap15')
                    DISTRO_NAME="Leap"
                    DISTRO_VERSION="${{ env.LEAP15_VERSION }}"
                    ;;
            esac
            echo "STAGE_NAME=Build RPM on $DISTRO_NAME $DISTRO_VERSION" >> $GITHUB_ENV
            echo "RESULTS_STAGE_NAME=Functional on $DISTRO_NAME $DISTRO_VERSION" >> $GITHUB_ENV
      - name: Test Report
        uses: dorny/test-reporter@v1
        with:
          artifact: ${{ env.RESULTS_STAGE_NAME }} test-results
          name: ${{ env.RESULTS_STAGE_NAME }} Test Results (dorny)
          path: ${{ env.RESULTS_STAGE_NAME }}/**/results.xml
          reporter: jest-junit        # Format of test results

  report-hw-2:
    runs-on: [self-hosted, docker]
    strategy:
      matrix:
        # TODO: figure out how to determine this matrix
        stage: ['Large', 'Medium', 'Medium UCX Provider']
    env:
      STAGE_NAME:
    steps:
      - name: Set variables
        run: echo "STAGE_NAME=Functional Hardware ${{ matrix.stage }}" >> $GITHUB_ENV
      - name: Test Report
        uses: dorny/test-reporter@v1
        with:
          artifact: ${{ env.STAGE_NAME }} test-results
          name: ${{ env.STAGE_NAME }} Test Results (dorny)
          path: ${{ env.STAGE_NAME }}/**/results.xml
          reporter: java-junit        # Format of test results
