name: Flake

# Run flake on all PRs.  This ignores many pre-existing errors however should catch
# regressions and allows us to remove ignores and results issues iteratively.

on:
  pull_request:
    paths:
      - '**/*.py'
      - .github/workflows/flake.yml

jobs:
  flake8-lint:
    runs-on: ubuntu-22.04
    name: Flake8 check
    steps:
      - name: Check out source repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3'
      - name: Add parser
        run: echo -n "::add-matcher::ci/daos-flake-matcher.json"
      - name: Add whitespace parser
        run: echo -n "::add-matcher::ci/daos-flakew-matcher.json"
      - name: Add error parser
        run: echo -n "::add-matcher::ci/daos-flakee-matcher.json"
      - name: flake8 Lint
        uses: py-actions/flake8@v2
        with:
          # W503 and W504 are related as they conflict.  W503 is the preferred style and all code
          # should be using it now.
          ignore: 'F841,W503,E402,F841'
          exclude: 'src/control/vendor,src/client/pydaos/raw,src/vos/storage_estimator'
          max-line-length: '100'
      - name: flake8 Lint
        uses: py-actions/flake8@v2
        with:
          # W503 and W504 are related as they conflict.  W503 is the preferred style and all code
          # should be using it now.
          ignore: 'F841,W503,E402,F841,E261'
          exclude: 'src/control/vendor,src/client/pydaos/raw'
          # Max line length is 100, and pylint will warn about lines longer than this, but some
          # existing lines are longer so allow them here.
          max-line-length: '133'
      - name: flake8 Lint on SCons files.
        uses: py-actions/flake8@v2
        with:
          ignore: 'F821,W503,F841'
          max-line-length: '100'
          args: '--filename */SConscript, SConstruct'
