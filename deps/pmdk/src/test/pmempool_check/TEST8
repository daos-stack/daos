#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-3-Clause
# Copyright 2014-2023, Intel Corporation
#
#
# pmempool_check/TEST8 -- test for checking pools
#

. ../unittest/unittest.sh

require_test_type medium

require_fs_type pmem non-pmem

setup

POOLSET=$DIR/pool.set
POOL_P1=$DIR/pool.p1
POOL_P2=$DIR/pool.p2
POOL_P3=$DIR/pool.p3
POOL_P4=$DIR/pool.p4
POOLS="$POOL_P1 $POOL_P2 $POOL_P3 $POOL_P4"

LOG=out${UNITTEST_NUM}.log
rm -f $LOG && touch $LOG

create_poolset $POOLSET\
	32M:$POOL_P1:z\
	32M:$POOL_P2:z\
	32M:$POOL_P3:z\
	32M:$POOL_P4:z

check_file $POOLSET

rm -f $POOLS
expect_normal_exit $PMEMPOOL$EXESUFFIX create obj $POOLSET
expect_normal_exit $PMEMPOOL$EXESUFFIX info $POOLSET > /dev/null
check_files $POOLS
$PMEMSPOIL -v $POOL_P1\
	pool_hdr.next_part_uuid=ERROR_NEXT\
	pool_hdr.prev_part_uuid=ERROR_PREV\
	pool_hdr.next_repl_uuid=ERROR_NEXT_REP\
	pool_hdr.prev_repl_uuid=ERROR_PREV_REP\
	pool_hdr.poolset_uuid=ERROR\
	>> $LOG

expect_abnormal_exit $PMEMPOOL$EXESUFFIX check $POOLSET >> $LOG
expect_abnormal_exit $PMEMPOOL$EXESUFFIX check -vyr $POOLSET >> $LOG
expect_abnormal_exit $PMEMPOOL$EXESUFFIX check $POOLSET >> $LOG
expect_abnormal_exit $PMEMPOOL$EXESUFFIX info $POOLSET &> /dev/null

check

pass
