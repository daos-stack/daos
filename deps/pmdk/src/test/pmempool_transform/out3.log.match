poolset_in
PMEMPOOLSET
20M $(nW)testfile00

poolset_out
PMEMPOOLSET
20M $(nW)testfile00
REPLICA
20M $(nW)testfile10
1M $(nW)testfile11

pr($(N)): off = $(nW) uuid = $(nW)
TestOK111
error: Invalid argument
error: failed to transform $(nW)poolset.in -> $(nW)poolset.out: part sizes check failed
TestOK111
Poolset structure:
Number of replicas       : 1
Replica 0 (master) - local, 1 part(s):
part 0:
path                     : $(nW)testfile00
type                     : regular file
size                     : $(nW)

POOL Header:
Signature                : PMEMOBJ
Major                    : $(nW)
Mandatory features       : $(*)
Not mandatory features   : $(*)
Forced RO                : $(*)
Pool set UUID            : $(nW)

PMEM OBJ Header:
Layout                   : OBJ_LAYOUT$(nW)
$(OPT)Lanes offset             : 0x2000
$(OPX)Lanes offset             : 0x20000
Number of lanes          : 1024
Heap offset              : $(nW)
Heap size                : $(nW)
Checksum                 : $(nW) [OK]
Root offset              : $(nW)
Part file:
path                     : $(nW)testfile00
type                     : regular file
size                     : $(nW)

POOL Header:
Signature                : PMEMOBJ
Major                    : $(nW)
Mandatory features       : $(*)
Not mandatory features   : $(*)
Forced RO                : $(*)
Pool set UUID            : $(nW)

PMEM OBJ Header:
Layout                   : OBJ_LAYOUT$(nW)
$(OPT)Lanes offset             : 0x2000
$(OPX)Lanes offset             : 0x20000
Number of lanes          : 1024
Heap offset              : $(nW)
Heap size                : $(nW)
Checksum                 : $(nW) [OK]
Root offset              : $(nW)
