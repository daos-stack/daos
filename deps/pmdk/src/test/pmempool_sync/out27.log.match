create($(nW)/testset1): allocating records in the pool ...
create($(nW)/testset1): allocated $(N) records (of size $(N))
verify($(nW)/testset1): pool file successfully verified ($(N) records of size $(N))
    "badblock_count":16,
        "offset":$(N),
        "length":16,
    "badblock_count":16,
        "offset":$(N),
        "length":16,
$(nW)/testset1: synchronized
replica 0: checking shutdown state
replica 0: shutdown state correct
replica 1: checking shutdown state
replica 1: shutdown state correct
replica 0 part 0: checking pool header
replica 0 part 0: pool header correct
replica 0 part 1: checking pool header
replica 0 part 1: pool header correct
replica 0 part 2: checking pool header
replica 0 part 2: pool header correct
replica 1 part 0: checking pool header
replica 1 part 0: pool header correct
$(nW)/testset1: consistent
Poolset structure:
Number of replicas       : 2
Replica 0 (master) - local, 3 part(s):
part 0:
path                     : $(nW)/testfile0
type                     : regular file
size                     : $(N)
part 1:
path                     : $(nW)/mnt-pmem/testfile1
type                     : regular file
size                     : $(N)
part 2:
path                     : $(nW)/testfile2
type                     : regular file
size                     : $(N)
Replica 1 - local, 1 part(s):
part 0:
path                     : $(nW)/testfile3
type                     : regular file
size                     : $(N)

POOL Header:
Signature                : PMEMOBJ
Major                    : $(nW)
Mandatory features       : $(*)
Not mandatory features   : $(*)
Forced RO                : 0x0
Pool set UUID            : $(nW)
UUID                     : $(nW)
Previous part UUID       : $(nW)
Next part UUID           : $(nW)
Previous replica UUID    : $(nW)
Next replica UUID        : $(nW)
Creation Time            : $(*)
Alignment Descriptor     : $(nW)
Class                    : 64
Data                     : 2's complement, little endian
Machine                  : $(*)
Last shutdown            : clean
Checksum                 : $(*)

PMEM OBJ Header:
Layout                   : pmempool$(*)
Lanes offset             : $(nW)
Number of lanes          : $(nW)
Heap offset              : $(nW)
Heap size                : $(nW)
Checksum                 : $(*)
Root offset              : $(nW)
verify($(nW)/testset1): pool file successfully verified ($(N) records of size $(N))
