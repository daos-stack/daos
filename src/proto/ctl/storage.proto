//
// (C) Copyright 2019-2022 Intel Corporation.
//
// SPDX-License-Identifier: BSD-2-Clause-Patent
//

syntax = "proto3";
package ctl;

option go_package = "github.com/daos-stack/daos/src/control/common/proto/ctl";

import "ctl/storage_nvme.proto";
import "ctl/storage_scm.proto";
import "ctl/common.proto";

// Management Service Protobuf Definitions related to interactions between
// DAOS control server and locally attached storage.

message StorageScanReq {
	ScanNvmeReq nvme = 1;
	ScanScmReq scm = 2;
}

message HugePageInfo {
	uint64 total = 1;
	uint64 free = 2;
	uint64 reserved = 3;
	uint64 surplus = 4;
	uint32 page_size_kb = 5;
}

message StorageScanResp {
	ScanNvmeResp nvme = 1;
	ScanScmResp scm = 2;
	HugePageInfo huge_page_info = 3;
}

message StorageFormatReq {
	FormatNvmeReq nvme = 1;
	FormatScmReq scm = 2;
	bool reformat = 3;
}

message StorageFormatResp {
	repeated NvmeControllerResult crets = 1;	// One per controller format attempt
	repeated ScmMountResult mrets = 2;		// One per scm format and mount attempt
}

message NvmeRebindReq {
	string pci_addr = 1;	// an NVMe controller PCI address
}

message NvmeRebindResp {
	ResponseState state = 1;
}

message NvmeAddDeviceReq {
	string pci_addr = 1;		// PCI address of NVMe controller to add
	uint32 engine_index = 2;	// Index of DAOS engine to add device to
	int32 storage_tier_index = 3;	// Index of storage tier to add device to
}

message NvmeAddDeviceResp {
	ResponseState state = 1;
}
