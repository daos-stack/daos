//
// (C) Copyright 2019-2021 Intel Corporation.
//
// SPDX-License-Identifier: BSD-2-Clause-Patent
//

syntax = "proto3";
package ctl;

option go_package = "github.com/daos-stack/daos/src/control/common/proto/ctl";

import "ctl/storage.proto";
import "ctl/network.proto";
import "ctl/firmware.proto";
import "ctl/smd.proto";
import "ctl/ranks.proto";
import "shared/ranks.proto";

// Service definitions for communications between gRPC management server and
// client regarding tasks related to DAOS system and server hardware.
//
// All Control service RPCs will terminate at gRPC server and do not interact
// with the Management Service.
service CtlSvc {
	// Prepare nonvolatile storage devices for use with DAOS
	rpc StoragePrepare(StoragePrepareReq) returns (StoragePrepareResp) {};
	// Retrieve details of nonvolatile storage on server, including health info
	rpc StorageScan(StorageScanReq) returns(StorageScanResp) {};
	// Format nonvolatile storage devices for use with DAOS
	rpc StorageFormat(StorageFormatReq) returns(StorageFormatResp) {};
	// Perform a fabric scan to determine the available provider, device, NUMA node combinations
	rpc NetworkScan (NetworkScanReq) returns (NetworkScanResp) {};
	// Retrieve firmware details from storage devices on server
	rpc FirmwareQuery(FirmwareQueryReq) returns (FirmwareQueryResp) {};
	// Update firmware on storage devices on server
	rpc FirmwareUpdate(FirmwareUpdateReq) returns (FirmwareUpdateResp) {};
	// Query the per-server metadata
	rpc SmdQuery(SmdQueryReq) returns (SmdQueryResp) {}
	// Prepare DAOS I/O Engines on a host for controlled shutdown. (gRPC fanout)
	rpc PrepShutdownRanks(RanksReq) returns (RanksResp) {}
	// Stop DAOS I/O Engines on a host. (gRPC fanout)
	rpc StopRanks(RanksReq) returns (RanksResp) {}
	// Ping DAOS I/O Engines on a host. (gRPC fanout)
	rpc PingRanks(RanksReq) returns (RanksResp) {}
	// ResetFormat DAOS I/O Engines on a host. (gRPC fanout)
	rpc ResetFormatRanks(RanksReq) returns (RanksResp) {}
	// Start DAOS I/O Engines on a host. (gRPC fanout)
	rpc StartRanks(RanksReq) returns (RanksResp) {}
}
