//
// (C) Copyright 2019-2022 Intel Corporation.
//
// SPDX-License-Identifier: BSD-2-Clause-Patent
//

syntax = "proto3";
package mgmt;

option go_package = "github.com/daos-stack/daos/src/control/common/proto/mgmt";

import "shared/event.proto";
import "mgmt/pool.proto";
import "mgmt/cont.proto";
import "mgmt/svc.proto";
import "mgmt/acl.proto"; // ACL-related requests
import "mgmt/system.proto";

// Management Service is replicated on a small number of servers in the system,
// these requests will be processed on a host that is a member of the management
// service.
//
// MgmtSvc RPCs will be forwarded over dRPC to be handled in data plane or
// forwarded over gRPC to be handled by the management service.
service MgmtSvc {
	// Join the server described by JoinReq to the system.
	rpc Join(JoinReq) returns (JoinResp) {}
	// ClusterEvent notify MS of a RAS event in the cluster.
	rpc ClusterEvent(shared.ClusterEventReq) returns (shared.ClusterEventResp) {}
	// LeaderQuery provides a mechanism for clients to discover
	// the system's current Management Service leader
	rpc LeaderQuery(LeaderQueryReq) returns (LeaderQueryResp) {}
	// Create a DAOS pool allocated across a number of ranks
	rpc PoolCreate(PoolCreateReq) returns (PoolCreateResp) {}
	// Destroy a DAOS pool allocated across a number of ranks.
	rpc PoolDestroy(PoolDestroyReq) returns (PoolDestroyResp) {}
	// Evict a DAOS pool's connections.
	rpc PoolEvict(PoolEvictReq) returns (PoolEvictResp) {}
	// Exclude a pool target.
	rpc PoolExclude(PoolExcludeReq) returns (PoolExcludeResp) {}
	// Drain a pool target.
	rpc PoolDrain(PoolDrainReq) returns (PoolDrainResp) {}
	// Extend a pool.
	rpc PoolExtend(PoolExtendReq) returns (PoolExtendResp) {}
	// Reintegrate a pool target.
	rpc PoolReintegrate(PoolReintegrateReq) returns (PoolReintegrateResp) {}
	// PoolQuery queries a DAOS pool.
	rpc PoolQuery(PoolQueryReq) returns (PoolQueryResp) {}
	// Set a DAOS pool property.
	rpc PoolSetProp(PoolSetPropReq) returns (PoolSetPropResp) {}
	// Get a DAOS pool property list.
	rpc PoolGetProp(PoolGetPropReq) returns (PoolGetPropResp) {}
	// Fetch the Access Control List for a DAOS pool.
	rpc PoolGetACL(GetACLReq) returns (ACLResp) {}
	// Overwrite the Access Control List for a DAOS pool with a new one.
	rpc PoolOverwriteACL(ModifyACLReq) returns (ACLResp) {}
	// Update existing the Access Control List for a DAOS pool with new entries.
	rpc PoolUpdateACL(ModifyACLReq) returns (ACLResp) {}
	// Delete an entry from a DAOS pool's Access Control List.
	rpc PoolDeleteACL(DeleteACLReq) returns (ACLResp) {}
	// Get the information required by libdaos to attach to the system.
	rpc GetAttachInfo(GetAttachInfoReq) returns (GetAttachInfoResp) {}
	// List all pools in a DAOS system: basic info: UUIDs, service ranks.
	rpc ListPools(ListPoolsReq) returns (ListPoolsResp) {}
	// List all containers in a pool
	rpc ListContainers(ListContReq) returns (ListContResp) {}
	// Change the owner of a DAOS container
	rpc ContSetOwner(ContSetOwnerReq) returns (ContSetOwnerResp) {}
	// Query DAOS system status
	rpc SystemQuery(SystemQueryReq) returns(SystemQueryResp) {}
	// Stop DAOS system (shutdown data-plane instances)
	rpc SystemStop(SystemStopReq) returns(SystemStopResp) {}
	// Start DAOS system (restart data-plane instances)
	rpc SystemStart(SystemStartReq) returns(SystemStartResp) {}
	// Erase DAOS system database prior to reformat
	rpc SystemErase(SystemEraseReq) returns(SystemEraseResp) {}
	// Clean up leaked resources for a given node
	rpc SystemCleanup(SystemCleanupReq) returns(SystemCleanupResp){}
	// PoolUpgrade queries a DAOS pool.
	rpc PoolUpgrade(PoolUpgradeReq) returns (PoolUpgradeResp) {}
}
