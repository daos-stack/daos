//
// (C) Copyright 2019 Intel Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// GOVERNMENT LICENSE RIGHTS-OPEN SOURCE SOFTWARE
// The Government's rights to use, modify, reproduce, release, perform, display,
// or disclose this software are subject to the terms of the Apache License as
// provided in Contract No. 8F-30005.
// Any reproduction of computer software, computer software documentation, or
// portions thereof marked with this legend must also reproduce the markings.
//

syntax = "proto3";
package mgmt;

import "common.proto";
import "storage.proto";
import "features.proto";
import "srv.proto";

// Service definitions for communications between gRPC management server and
// client regarding tasks related to DAOS storage server hardware.
service MgmtCtl {
	// Retrieve details of nonvolatile storage devices on server
	rpc ScanStorage(ScanStorageReq) returns (ScanStorageResp) {};
	// Format nonvolatile storage devices for use with DAOS
	rpc FormatStorage(FormatStorageReq) returns (stream FormatStorageResp) {};
	// Update nonvolatile storage device firmware
	rpc UpdateStorage(UpdateStorageReq) returns (stream UpdateStorageResp) {};
	// Perform burn-in testing to verify nonvolatile storage devices
	rpc BurninStorage(BurninStorageReq) returns (stream BurninStorageResp) {};
	// Fetch FIO configuration file specifying burn-in jobs/workloads
	rpc FetchFioConfigPaths(EmptyReq) returns (stream FilePath) {};
	// Kill a given rank associated with a given pool
	rpc KillRank(DaosRank) returns (DaosResponse) {};
	// List features supported on remote storage server/DAOS system
	rpc ListFeatures(EmptyReq) returns (stream Feature) {};
}
