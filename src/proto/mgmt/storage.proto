//
// (C) Copyright 2019 Intel Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// GOVERNMENT LICENSE RIGHTS-OPEN SOURCE SOFTWARE
// The Government's rights to use, modify, reproduce, release, perform, display,
// or disclose this software are subject to the terms of the Apache License as
// provided in Contract No. 8F-30005.
// Any reproduction of computer software, computer software documentation, or
// portions thereof marked with this legend must also reproduce the markings.
//

syntax = "proto3";
package mgmt;

import "common.proto";
import "storage_nvme.proto";
import "storage_scm.proto";

// Management Service Protobuf Definitions related to interactions between
// DAOS control server and locally attached storage.

message ScanStorageReq {}

// ScanStorageResp returns discovered storage devices.
message ScanStorageResp {
	repeated NvmeController ctrlrs = 1;
	ResponseState nvmestate = 2;		// Single non-ctrlr-specific state
	repeated ScmModule modules = 3;
	ResponseState scmstate = 4;		// Single non-module-specific state
	// TODO: add scan for scm regions/mount
}

message FormatStorageReq {}

message FormatStorageResp {
	repeated NvmeControllerResult crets = 1;	// One per controller format attempt
	repeated ScmMountResult mrets = 2;		// One per scm format and mount attempt
}

message UpdateStorageReq {
	UpdateNvmeReq nvme = 1;
	UpdateScmReq scm = 2;
}

message UpdateStorageResp {
	repeated NvmeControllerResult crets = 1;	// One per SSD firmware update attempt
	repeated ScmModuleResult mrets = 2;		// One per module firmware update attempt
}

message BurninStorageReq {
	BurninNvmeReq nvme = 1;
	BurninScmReq scm = 2;
}

message BurninStorageResp {
	repeated NvmeControllerResult crets = 1;	// One per SSD burnin test, report in state.info
	repeated ScmMountResult mrets = 2;		// One per SCM mount burnin test
}

