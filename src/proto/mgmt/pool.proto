//
// (C) Copyright 2019 Intel Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// GOVERNMENT LICENSE RIGHTS-OPEN SOURCE SOFTWARE
// The Government's rights to use, modify, reproduce, release, perform, display,
// or disclose this software are subject to the terms of the Apache License as
// provided in Contract No. 8F-30005.
// Any reproduction of computer software, computer software documentation, or
// portions thereof marked with this legend must also reproduce the markings.
//

syntax = "proto3";
package mgmt;

// Management Service Protobuf Definitions related to interactions between
// DAOS control server and DAOS pools.

// PoolCreateReq supplies new pool parameters.
message PoolCreateReq {
	uint64 scmbytes = 1; // SCM size in bytes
	uint64 nvmebytes = 2; // NVMe size in bytes
	repeated uint32 ranks = 3; // target ranks
	uint32 numsvcreps = 4; // desired number of pool service replicas
	string user = 5; // formatted user e.g. "bob@"
	string usergroup = 6; // formatted group e.g. "builders@"
	string uuid = 7; // UUID for new pool, generated on the client
	string sys = 8; // DAOS system identifier
	repeated string acl = 9; // Access Control Entries in short string format
}

// PoolCreateResp returns created pool uuid and ranks.
message PoolCreateResp {
	int32 status = 1; // DAOS error code
	repeated uint32 svcreps = 2; // pool service replica ranks
}

// PoolDestroyReq supplies pool identifier and force flag.
message PoolDestroyReq {
	string uuid = 1; // uuid of pool to destroy
	string sys = 2; // DAOS system identifier
	bool force = 3; // destroy regardless of active connections
}

// PoolDestroyResp returns resultant state of destroy operation.
message PoolDestroyResp {
	int32 status = 1; // DAOS error code
}

// ListPoolsReq represents a request to list pools on a given DAOS system.
message ListPoolsReq {
	string sys = 1; // DAOS system identifier
}

// ListPoolsResp returns the list of pools in the system.
message ListPoolsResp {
	message Pool {
		string uuid = 1; // uuid of pool
		repeated uint32 svcreps = 2; // pool service replica ranks
	}
	int32 status = 1; // DAOS error code
	repeated Pool pools = 2; // pools list
}
