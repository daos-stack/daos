//
// (C) Copyright 2018 Intel Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// GOVERNMENT LICENSE RIGHTS-OPEN SOURCE SOFTWARE
// The Government's rights to use, modify, reproduce, release, perform, display,
// or disclose this software are subject to the terms of the Apache License as
// provided in Contract No. B609815.
// Any reproduction of computer software, computer software documentation, or
// portions thereof marked with this legend must also reproduce the markings.
//
syntax = "proto3";
package drpc;

/**
 * Call is a structure outlining a function call to be executed
 * over a drpc channel.
 *
 * module is the numerical identifier for the drpc module to process the call
 * method is the specific method within the module
 * sequence is the internal sequence counter for matching calls to responses
 * body is the opaque data of the function call arguments
 */
message Call {
	int32 module = 1;
	int32 method = 2;
	int64 sequence = 3;
	bytes body = 4;
}

/**
 * Status represents the valid values for a response status.
 */
enum Status {
	SUCCESS = 0;
	SUBMITTED = 1;
	FAILURE = 2;
	UNKNOWN_MODULE = 3;
	UNKNOWN_METHOD = 4;
}

/**
 * Response is the data to the Call with a given sequence number.
 *
 * sequence is the sequence number of the drpc call for the response.
 * status represents the return/faulure value of the call
 * body represents the returned data if a call returns more than just a status.
 */
message Response {
	int64 sequence = 1;
	Status status = 2;
	bytes body = 3;
}
