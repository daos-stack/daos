# Copyright (C) 2016-2020 Intel Corporation
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted for any purpose (including commercial purposes)
# provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions, and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions, and the following disclaimer in the
#    documentation and/or materials provided with the distribution.
#
# 3. In addition, redistributions of modified forms of the source or binary
#    code must carry prominent notices stating that the original code was
#    changed and the date of the change.
#
#  4. All publications or advertising materials mentioning features or use of
#     this software are asked, but not required, to acknowledge that it was
#     developed by Intel Corporation and credit the contributors.
#
# 5. Neither the name of Intel Corporation, nor the name of any Contributor
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
"""install test scripts"""

def scons():
    """Run scons"""

    Import('env')

    # Build the unit tests
    SConscript('utest/SConscript')

    env.Replace(CRT_TSTDIR="$PREFIX/lib/cart/TESTING")

    # move the test files (.py) to the TESTING scripts directory
    env.Install("$CRT_TSTDIR", Glob("launch.py"))
    env.Install("$CRT_TSTDIR/util", Glob("util/*.py"))
    env.Install("$CRT_TSTDIR/util", Glob("util/*.yaml"))
    env.Install("$CRT_TSTDIR/rpc", Glob("rpc/*.py"))
    env.Install("$CRT_TSTDIR/rpc", Glob("rpc/*.yaml"))
    env.Install("$CRT_TSTDIR/ctl", Glob("ctl/*.py"))
    env.Install("$CRT_TSTDIR/ctl", Glob("ctl/*.yaml"))
    env.Install("$CRT_TSTDIR/corpc", Glob("corpc/*.py"))
    env.Install("$CRT_TSTDIR/corpc", Glob("corpc/*.yaml"))
    env.Install("$CRT_TSTDIR/iv", Glob("iv/*.py"))
    env.Install("$CRT_TSTDIR/iv", Glob("iv/*.yaml"))
    env.Install("$CRT_TSTDIR/singleton", Glob("singleton/*.py"))
    env.Install("$CRT_TSTDIR/singleton", Glob("singleton/*.yaml"))
    env.Install("$CRT_TSTDIR/no_pmix", Glob("no_pmix/*.py"))
    env.Install("$CRT_TSTDIR/no_pmix", Glob("no_pmix/*.yaml"))
    env.Install("$CRT_TSTDIR/selftest", Glob("selftest/*.py"))
    env.Install("$CRT_TSTDIR/selftest", Glob("selftest/*.yaml"))
    env.Install("$CRT_TSTDIR/group_tiers", Glob("group_tiers/*.py"))
    env.Install("$CRT_TSTDIR/group_tiers", Glob("group_tiers/*.yaml"))
    env.Install("$CRT_TSTDIR/nopmix_launcher", Glob("nopmix_launcher/*.py"))
    env.Install("$CRT_TSTDIR/nopmix_launcher", Glob("nopmix_launcher/*.yaml"))
    env.Install("$CRT_TSTDIR/group_test", Glob("group_test/*.yaml"))
    env.Install("$CRT_TSTDIR/group_test", Glob("group_test/*.py"))
    env.Install("$CRT_TSTDIR/group_test", Glob("ghost_rank_rpc/*.yaml"))
    env.Install("$CRT_TSTDIR/group_test", Glob("ghost_rank_rpc/*.py"))

if __name__ == 'SCons.Script':
    scons()
