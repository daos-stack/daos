This file lists the environment variables used in CaRT.

 . CRT_PHY_ADDR_STR
   It determines which mercury NA plugin to be used:
   1: set it as "ofi+sockets" to use OFI sockets provider
   2: set it as "ofi+verbs;ofi_rxm" to use OFI verbs;ofi_rxm provider
   3: set it as "ofi+psm2" to use OFI psm2 provider
   4: set it as "ofi+gni" to use OFI gni provider
   5: set it as "sm" to use SM plugin which only works within single node
   6: set it as "ofi+tcp;ofi_rxm" to use OFI tcp;ofi_rxm provider.
      NOTE: This provider is currently unstable
   7: by default (not set or set as any other value) it will use ofi sockets
      provider.

 . D_LOG_FILE
   Set it as a file path (for example "/tmp/crt.xxx.log") to make GURT log debug
   messages to that file. Or will log to stdout.

 . D_LOG_STDERR_IN_LOG
   For debugging purpose, it will allow to redirect stderr messages in log file.
   Thus, messages from external libs, like libfabric, will be merged in log
   in correct sequence.

 . D_LOG_FILE_APPEND_PID
   Set this to a non-zero value to create separate log files based upon the
   process id (pid). The pid number will be appended to the log file specified
   in D_LOG_FILE. If not defined or setting to zero value will result in this
   feature being disabled.

 . D_LOG_TRUNCATE
   Set this to truncate log file to size=0 before writing to it. Otherwise log
   file will be appended. Log file is specified by D_LOG_FILE envariable.

 . D_LOG_MASK
   Can set different log levels for different subsystem.
   GURT defined several debug subsystem(log facility): MISC, MEM, RPC, CORPC,
   BULK, GRP, LM, HG, etc.
   Can set different log level for different subsystems, for example:
   "export D_LOG_MASK=DEBUG" will set all subsystems' loglevel as DEBUG
   "export D_LOG_MASK=ERR,RPC=DEBUG,BULK=INFO" will set RPC's loglevel as
   DEBUG, BULK's log level as INFO, all other subsystems' loglevel as ERR.
   If neither above 2 or 3 ENVs set, the default loglevel is WARN and log device
   is stdout.

 . DD_MASK
   Can enable different debug streams for finer-grained debugging per subsystem,
   for example: "DD_MASK="trace"" will log only debug messages with the bit mask
   DB_TRACE associated with them. Muliple streams can be set as well, for
   example: "DD_MASK="io,mem"" will allow logging of a subset of debug messages
   related to io path (bit mask=DB_IO) and memory operations (bit mask=DB_MEM).
   Since these are debug masks, the subsystem/facility must have the debug log
   set ("D_LOG_MASK=DEBUG"), otherwise other priorities take precedence. The bit
   streams are passed as a parameter to D_DEBUG(mask, fmt, ...).

 . DD_STDERR
   User can specify the priority level to output to stderr, for example:
   "DD_STDERR="info"" will log all DLOG_INFO priority messages to stderr.
   The default for cart is DLOG_EMERG ("fatal"), and for daos is DLOG_CRIT
   ("critical"). Options include: "info/note/warn(ing)/err(or)/crit(ical)/fatal"

 . DD_SUBSYS
   User can specify which subsystems to enable. Gurt default subsystems which
   are always enabled are MEM, MISC, and CLOG. All CaRT facilities are enabled
   by default, and can be specified using DD_SUBSYS, for example:
   "DD_SUBSYS=RPC,BULK,CORPC,GRP,LM,HG,PMIX,ST,IV" or also "DD_SUBSYS=all".

 . CRT_TIMEOUT
   Set it as integer in the range of (0, 3600] to set the global timeout value
   of all RPCs (second). Without setting it or set it as any other value will
   take the default timeout value of 60 second.

.  CRT_ATTACH_INFO_PATH
   Set this environment variable in order to specify a custom prefix path for
   '.attach_info_tmp' file generated.
   When set to the "path" the file generated will have a form of:
       <path>/<cart group name>.attach_info_tmp
   When not set the file generated will have a form of:
      /tmp/<cart group name>.attach_info_tmp
   Calling crt_group_config_path_set() will overwrite the prefix path setting by
   CRT_ATTACH_INFO_PATH, however this ENV setting provides a method to control
   the prefix path without calling API which needs to change code.

 . OFI_PORT
   Set it as a port number, when creating NA classes it will use the consecutive
   port numbers start from it.
   When it is not set, then will use random port number.

 . OFI_INTERFACE
   Set it as the network device name to be used for OFI communication, for
   example "eth0", "ib0" or "ens33" etc.

 . OFI_DOMAIN
   Set it as the network domain name to be used for OFI communications. Domain
   name can be determined by running 'fi_info' app. If not set, OFI_DOMAIN is
   assumed to be the same as OFI_INTERFACE.

 . CRT_CREDIT_EP_CTX
   Set it as the max number of inflight RPCs to a target endpoint context, the
   valid range is [0, 256].
   If it is not set then will use the default value of 32.
   It its value exceed 256, then will use 256 for flow control.
   Set it to zero means disable the flow control in cart.

 . CRT_CTX_SHARE_ADDR
   Set it to non-zero to make all the contexts share one network address, in
   this case CaRT will create one SEP and each context maps to one tx/rx
   context pair.
   When the ENV not set or set to 0 each context will create one separate SEP.

 . CRT_CTX_NUM
   Set it to the number of contexts user wants to create. It is meaningful only
   when CRT_CTX_SHARE_ADDR is set to non-zero. If CRT_CTX_NUM exceeds the OFI
   provider capability, NA layer will fail to initialize. If user creates more
   contexts than CRT_CTX_NUM, context creation will fail.

 . D_FI_CONFIG
   Specifies the fault injection configuration file. If this variable is not set
   or set to empty, fault injection is disabled.

 . CRT_DISABLE_MEM_PIN
   Disables server-side memory pinning for CART-890 workaround
