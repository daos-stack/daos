/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: srv.proto */

#ifndef PROTOBUF_C_srv_2eproto__INCLUDED
#define PROTOBUF_C_srv_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Mgmt__DaosRank Mgmt__DaosRank;
typedef struct _Mgmt__DaosResponse Mgmt__DaosResponse;


/* --- enums --- */

typedef enum _Mgmt__DaosRequestStatus {
  MGMT__DAOS_REQUEST_STATUS__SUCCESS = 0,
  /*
   * Unknown error
   */
  MGMT__DAOS_REQUEST_STATUS__ERR_UNKNOWN = -1,
  /*
   * Rank requested is invalid
   */
  MGMT__DAOS_REQUEST_STATUS__ERR_INVALID_RANK = -2,
  /*
   * Pool UUID requested is invalid
   */
  MGMT__DAOS_REQUEST_STATUS__ERR_INVALID_UUID = -3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(MGMT__DAOS_REQUEST_STATUS)
} Mgmt__DaosRequestStatus;

/* --- messages --- */

/*
 * Identifier for server rank within DAOS pool
 */
struct  _Mgmt__DaosRank
{
  ProtobufCMessage base;
  /*
   * UUID of the pool
   */
  char *pool_uuid;
  /*
   * Server rank
   */
  uint32_t rank;
};
#define MGMT__DAOS_RANK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mgmt__daos_rank__descriptor) \
    , (char *)protobuf_c_empty_string, 0 }


struct  _Mgmt__DaosResponse
{
  ProtobufCMessage base;
  Mgmt__DaosRequestStatus status;
};
#define MGMT__DAOS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mgmt__daos_response__descriptor) \
    , MGMT__DAOS_REQUEST_STATUS__SUCCESS }


/* Mgmt__DaosRank methods */
void   mgmt__daos_rank__init
                     (Mgmt__DaosRank         *message);
size_t mgmt__daos_rank__get_packed_size
                     (const Mgmt__DaosRank   *message);
size_t mgmt__daos_rank__pack
                     (const Mgmt__DaosRank   *message,
                      uint8_t             *out);
size_t mgmt__daos_rank__pack_to_buffer
                     (const Mgmt__DaosRank   *message,
                      ProtobufCBuffer     *buffer);
Mgmt__DaosRank *
       mgmt__daos_rank__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mgmt__daos_rank__free_unpacked
                     (Mgmt__DaosRank *message,
                      ProtobufCAllocator *allocator);
/* Mgmt__DaosResponse methods */
void   mgmt__daos_response__init
                     (Mgmt__DaosResponse         *message);
size_t mgmt__daos_response__get_packed_size
                     (const Mgmt__DaosResponse   *message);
size_t mgmt__daos_response__pack
                     (const Mgmt__DaosResponse   *message,
                      uint8_t             *out);
size_t mgmt__daos_response__pack_to_buffer
                     (const Mgmt__DaosResponse   *message,
                      ProtobufCBuffer     *buffer);
Mgmt__DaosResponse *
       mgmt__daos_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mgmt__daos_response__free_unpacked
                     (Mgmt__DaosResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Mgmt__DaosRank_Closure)
                 (const Mgmt__DaosRank *message,
                  void *closure_data);
typedef void (*Mgmt__DaosResponse_Closure)
                 (const Mgmt__DaosResponse *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    mgmt__daos_request_status__descriptor;
extern const ProtobufCMessageDescriptor mgmt__daos_rank__descriptor;
extern const ProtobufCMessageDescriptor mgmt__daos_response__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_srv_2eproto__INCLUDED */
