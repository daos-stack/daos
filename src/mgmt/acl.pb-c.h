/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: acl.proto */

#ifndef PROTOBUF_C_acl_2eproto__INCLUDED
#define PROTOBUF_C_acl_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Mgmt__GetACLReq Mgmt__GetACLReq;
typedef struct _Mgmt__GetACLResp Mgmt__GetACLResp;


/* --- enums --- */


/* --- messages --- */

struct  _Mgmt__GetACLReq
{
  ProtobufCMessage base;
  /*
   * Target UUID
   */
  char *uuid;
};
#define MGMT__GET_ACLREQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mgmt__get_aclreq__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Mgmt__GetACLResp
{
  ProtobufCMessage base;
  /*
   * DAOS error code
   */
  int32_t status;
  /*
   * List of ACEs in short string format
   */
  size_t n_acl;
  char **acl;
};
#define MGMT__GET_ACLRESP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mgmt__get_aclresp__descriptor) \
    , 0, 0,NULL }


/* Mgmt__GetACLReq methods */
void   mgmt__get_aclreq__init
                     (Mgmt__GetACLReq         *message);
size_t mgmt__get_aclreq__get_packed_size
                     (const Mgmt__GetACLReq   *message);
size_t mgmt__get_aclreq__pack
                     (const Mgmt__GetACLReq   *message,
                      uint8_t             *out);
size_t mgmt__get_aclreq__pack_to_buffer
                     (const Mgmt__GetACLReq   *message,
                      ProtobufCBuffer     *buffer);
Mgmt__GetACLReq *
       mgmt__get_aclreq__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mgmt__get_aclreq__free_unpacked
                     (Mgmt__GetACLReq *message,
                      ProtobufCAllocator *allocator);
/* Mgmt__GetACLResp methods */
void   mgmt__get_aclresp__init
                     (Mgmt__GetACLResp         *message);
size_t mgmt__get_aclresp__get_packed_size
                     (const Mgmt__GetACLResp   *message);
size_t mgmt__get_aclresp__pack
                     (const Mgmt__GetACLResp   *message,
                      uint8_t             *out);
size_t mgmt__get_aclresp__pack_to_buffer
                     (const Mgmt__GetACLResp   *message,
                      ProtobufCBuffer     *buffer);
Mgmt__GetACLResp *
       mgmt__get_aclresp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mgmt__get_aclresp__free_unpacked
                     (Mgmt__GetACLResp *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Mgmt__GetACLReq_Closure)
                 (const Mgmt__GetACLReq *message,
                  void *closure_data);
typedef void (*Mgmt__GetACLResp_Closure)
                 (const Mgmt__GetACLResp *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor mgmt__get_aclreq__descriptor;
extern const ProtobufCMessageDescriptor mgmt__get_aclresp__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_acl_2eproto__INCLUDED */
