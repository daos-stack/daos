// Code generated by protoc-gen-go. DO NOT EDIT.
// source: storage_nvme.proto

package ctl

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// NvmeController represents an NVMe Controller (SSD).
type NvmeController struct {
	Model                string                      `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	Serial               string                      `protobuf:"bytes,2,opt,name=serial,proto3" json:"serial,omitempty"`
	Pciaddr              string                      `protobuf:"bytes,3,opt,name=pciaddr,proto3" json:"pciaddr,omitempty"`
	Fwrev                string                      `protobuf:"bytes,4,opt,name=fwrev,proto3" json:"fwrev,omitempty"`
	Socketid             int32                       `protobuf:"varint,5,opt,name=socketid,proto3" json:"socketid,omitempty"`
	Healthstats          *NvmeController_Health      `protobuf:"bytes,6,opt,name=healthstats,proto3" json:"healthstats,omitempty"`
	Namespaces           []*NvmeController_Namespace `protobuf:"bytes,7,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *NvmeController) Reset()         { *m = NvmeController{} }
func (m *NvmeController) String() string { return proto.CompactTextString(m) }
func (*NvmeController) ProtoMessage()    {}
func (*NvmeController) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4b1a62bc89112d2, []int{0}
}

func (m *NvmeController) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NvmeController.Unmarshal(m, b)
}
func (m *NvmeController) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NvmeController.Marshal(b, m, deterministic)
}
func (m *NvmeController) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NvmeController.Merge(m, src)
}
func (m *NvmeController) XXX_Size() int {
	return xxx_messageInfo_NvmeController.Size(m)
}
func (m *NvmeController) XXX_DiscardUnknown() {
	xxx_messageInfo_NvmeController.DiscardUnknown(m)
}

var xxx_messageInfo_NvmeController proto.InternalMessageInfo

func (m *NvmeController) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *NvmeController) GetSerial() string {
	if m != nil {
		return m.Serial
	}
	return ""
}

func (m *NvmeController) GetPciaddr() string {
	if m != nil {
		return m.Pciaddr
	}
	return ""
}

func (m *NvmeController) GetFwrev() string {
	if m != nil {
		return m.Fwrev
	}
	return ""
}

func (m *NvmeController) GetSocketid() int32 {
	if m != nil {
		return m.Socketid
	}
	return 0
}

func (m *NvmeController) GetHealthstats() *NvmeController_Health {
	if m != nil {
		return m.Healthstats
	}
	return nil
}

func (m *NvmeController) GetNamespaces() []*NvmeController_Namespace {
	if m != nil {
		return m.Namespaces
	}
	return nil
}

// Namespace represents a namespace created on an NvmeController.
type NvmeController_Namespace struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Size                 uint64   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Ctrlrpciaddr         string   `protobuf:"bytes,3,opt,name=ctrlrpciaddr,proto3" json:"ctrlrpciaddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NvmeController_Namespace) Reset()         { *m = NvmeController_Namespace{} }
func (m *NvmeController_Namespace) String() string { return proto.CompactTextString(m) }
func (*NvmeController_Namespace) ProtoMessage()    {}
func (*NvmeController_Namespace) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4b1a62bc89112d2, []int{0, 0}
}

func (m *NvmeController_Namespace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NvmeController_Namespace.Unmarshal(m, b)
}
func (m *NvmeController_Namespace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NvmeController_Namespace.Marshal(b, m, deterministic)
}
func (m *NvmeController_Namespace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NvmeController_Namespace.Merge(m, src)
}
func (m *NvmeController_Namespace) XXX_Size() int {
	return xxx_messageInfo_NvmeController_Namespace.Size(m)
}
func (m *NvmeController_Namespace) XXX_DiscardUnknown() {
	xxx_messageInfo_NvmeController_Namespace.DiscardUnknown(m)
}

var xxx_messageInfo_NvmeController_Namespace proto.InternalMessageInfo

func (m *NvmeController_Namespace) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *NvmeController_Namespace) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *NvmeController_Namespace) GetCtrlrpciaddr() string {
	if m != nil {
		return m.Ctrlrpciaddr
	}
	return ""
}

type NvmeController_Health struct {
	Temp            uint32 `protobuf:"varint,1,opt,name=temp,proto3" json:"temp,omitempty"`
	Tempwarntime    uint32 `protobuf:"varint,2,opt,name=tempwarntime,proto3" json:"tempwarntime,omitempty"`
	Tempcrittime    uint32 `protobuf:"varint,3,opt,name=tempcrittime,proto3" json:"tempcrittime,omitempty"`
	Ctrlbusytime    uint64 `protobuf:"varint,4,opt,name=ctrlbusytime,proto3" json:"ctrlbusytime,omitempty"`
	Powercycles     uint64 `protobuf:"varint,5,opt,name=powercycles,proto3" json:"powercycles,omitempty"`
	Poweronhours    uint64 `protobuf:"varint,6,opt,name=poweronhours,proto3" json:"poweronhours,omitempty"`
	Unsafeshutdowns uint64 `protobuf:"varint,7,opt,name=unsafeshutdowns,proto3" json:"unsafeshutdowns,omitempty"`
	Mediaerrors     uint64 `protobuf:"varint,8,opt,name=mediaerrors,proto3" json:"mediaerrors,omitempty"`
	Errorlogentries uint64 `protobuf:"varint,9,opt,name=errorlogentries,proto3" json:"errorlogentries,omitempty"`
	// critical warnings
	Tempwarn             bool     `protobuf:"varint,10,opt,name=tempwarn,proto3" json:"tempwarn,omitempty"`
	Availsparewarn       bool     `protobuf:"varint,11,opt,name=availsparewarn,proto3" json:"availsparewarn,omitempty"`
	Reliabilitywarn      bool     `protobuf:"varint,12,opt,name=reliabilitywarn,proto3" json:"reliabilitywarn,omitempty"`
	Readonlywarn         bool     `protobuf:"varint,13,opt,name=readonlywarn,proto3" json:"readonlywarn,omitempty"`
	Volatilewarn         bool     `protobuf:"varint,14,opt,name=volatilewarn,proto3" json:"volatilewarn,omitempty"`
	Ctrlrpciaddr         string   `protobuf:"bytes,15,opt,name=ctrlrpciaddr,proto3" json:"ctrlrpciaddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NvmeController_Health) Reset()         { *m = NvmeController_Health{} }
func (m *NvmeController_Health) String() string { return proto.CompactTextString(m) }
func (*NvmeController_Health) ProtoMessage()    {}
func (*NvmeController_Health) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4b1a62bc89112d2, []int{0, 1}
}

func (m *NvmeController_Health) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NvmeController_Health.Unmarshal(m, b)
}
func (m *NvmeController_Health) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NvmeController_Health.Marshal(b, m, deterministic)
}
func (m *NvmeController_Health) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NvmeController_Health.Merge(m, src)
}
func (m *NvmeController_Health) XXX_Size() int {
	return xxx_messageInfo_NvmeController_Health.Size(m)
}
func (m *NvmeController_Health) XXX_DiscardUnknown() {
	xxx_messageInfo_NvmeController_Health.DiscardUnknown(m)
}

var xxx_messageInfo_NvmeController_Health proto.InternalMessageInfo

func (m *NvmeController_Health) GetTemp() uint32 {
	if m != nil {
		return m.Temp
	}
	return 0
}

func (m *NvmeController_Health) GetTempwarntime() uint32 {
	if m != nil {
		return m.Tempwarntime
	}
	return 0
}

func (m *NvmeController_Health) GetTempcrittime() uint32 {
	if m != nil {
		return m.Tempcrittime
	}
	return 0
}

func (m *NvmeController_Health) GetCtrlbusytime() uint64 {
	if m != nil {
		return m.Ctrlbusytime
	}
	return 0
}

func (m *NvmeController_Health) GetPowercycles() uint64 {
	if m != nil {
		return m.Powercycles
	}
	return 0
}

func (m *NvmeController_Health) GetPoweronhours() uint64 {
	if m != nil {
		return m.Poweronhours
	}
	return 0
}

func (m *NvmeController_Health) GetUnsafeshutdowns() uint64 {
	if m != nil {
		return m.Unsafeshutdowns
	}
	return 0
}

func (m *NvmeController_Health) GetMediaerrors() uint64 {
	if m != nil {
		return m.Mediaerrors
	}
	return 0
}

func (m *NvmeController_Health) GetErrorlogentries() uint64 {
	if m != nil {
		return m.Errorlogentries
	}
	return 0
}

func (m *NvmeController_Health) GetTempwarn() bool {
	if m != nil {
		return m.Tempwarn
	}
	return false
}

func (m *NvmeController_Health) GetAvailsparewarn() bool {
	if m != nil {
		return m.Availsparewarn
	}
	return false
}

func (m *NvmeController_Health) GetReliabilitywarn() bool {
	if m != nil {
		return m.Reliabilitywarn
	}
	return false
}

func (m *NvmeController_Health) GetReadonlywarn() bool {
	if m != nil {
		return m.Readonlywarn
	}
	return false
}

func (m *NvmeController_Health) GetVolatilewarn() bool {
	if m != nil {
		return m.Volatilewarn
	}
	return false
}

func (m *NvmeController_Health) GetCtrlrpciaddr() string {
	if m != nil {
		return m.Ctrlrpciaddr
	}
	return ""
}

// NvmeControllerResult represents state of operation performed on controller.
type NvmeControllerResult struct {
	Pciaddr              string         `protobuf:"bytes,1,opt,name=pciaddr,proto3" json:"pciaddr,omitempty"`
	State                *ResponseState `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *NvmeControllerResult) Reset()         { *m = NvmeControllerResult{} }
func (m *NvmeControllerResult) String() string { return proto.CompactTextString(m) }
func (*NvmeControllerResult) ProtoMessage()    {}
func (*NvmeControllerResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4b1a62bc89112d2, []int{1}
}

func (m *NvmeControllerResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NvmeControllerResult.Unmarshal(m, b)
}
func (m *NvmeControllerResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NvmeControllerResult.Marshal(b, m, deterministic)
}
func (m *NvmeControllerResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NvmeControllerResult.Merge(m, src)
}
func (m *NvmeControllerResult) XXX_Size() int {
	return xxx_messageInfo_NvmeControllerResult.Size(m)
}
func (m *NvmeControllerResult) XXX_DiscardUnknown() {
	xxx_messageInfo_NvmeControllerResult.DiscardUnknown(m)
}

var xxx_messageInfo_NvmeControllerResult proto.InternalMessageInfo

func (m *NvmeControllerResult) GetPciaddr() string {
	if m != nil {
		return m.Pciaddr
	}
	return ""
}

func (m *NvmeControllerResult) GetState() *ResponseState {
	if m != nil {
		return m.State
	}
	return nil
}

type PrepareNvmeReq struct {
	Pciwhitelist         string   `protobuf:"bytes,1,opt,name=pciwhitelist,proto3" json:"pciwhitelist,omitempty"`
	Nrhugepages          int32    `protobuf:"varint,2,opt,name=nrhugepages,proto3" json:"nrhugepages,omitempty"`
	Targetuser           string   `protobuf:"bytes,3,opt,name=targetuser,proto3" json:"targetuser,omitempty"`
	Reset_               bool     `protobuf:"varint,4,opt,name=reset,proto3" json:"reset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrepareNvmeReq) Reset()         { *m = PrepareNvmeReq{} }
func (m *PrepareNvmeReq) String() string { return proto.CompactTextString(m) }
func (*PrepareNvmeReq) ProtoMessage()    {}
func (*PrepareNvmeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4b1a62bc89112d2, []int{2}
}

func (m *PrepareNvmeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareNvmeReq.Unmarshal(m, b)
}
func (m *PrepareNvmeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareNvmeReq.Marshal(b, m, deterministic)
}
func (m *PrepareNvmeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareNvmeReq.Merge(m, src)
}
func (m *PrepareNvmeReq) XXX_Size() int {
	return xxx_messageInfo_PrepareNvmeReq.Size(m)
}
func (m *PrepareNvmeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareNvmeReq.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareNvmeReq proto.InternalMessageInfo

func (m *PrepareNvmeReq) GetPciwhitelist() string {
	if m != nil {
		return m.Pciwhitelist
	}
	return ""
}

func (m *PrepareNvmeReq) GetNrhugepages() int32 {
	if m != nil {
		return m.Nrhugepages
	}
	return 0
}

func (m *PrepareNvmeReq) GetTargetuser() string {
	if m != nil {
		return m.Targetuser
	}
	return ""
}

func (m *PrepareNvmeReq) GetReset_() bool {
	if m != nil {
		return m.Reset_
	}
	return false
}

type PrepareNvmeResp struct {
	State                *ResponseState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PrepareNvmeResp) Reset()         { *m = PrepareNvmeResp{} }
func (m *PrepareNvmeResp) String() string { return proto.CompactTextString(m) }
func (*PrepareNvmeResp) ProtoMessage()    {}
func (*PrepareNvmeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4b1a62bc89112d2, []int{3}
}

func (m *PrepareNvmeResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareNvmeResp.Unmarshal(m, b)
}
func (m *PrepareNvmeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareNvmeResp.Marshal(b, m, deterministic)
}
func (m *PrepareNvmeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareNvmeResp.Merge(m, src)
}
func (m *PrepareNvmeResp) XXX_Size() int {
	return xxx_messageInfo_PrepareNvmeResp.Size(m)
}
func (m *PrepareNvmeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareNvmeResp.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareNvmeResp proto.InternalMessageInfo

func (m *PrepareNvmeResp) GetState() *ResponseState {
	if m != nil {
		return m.State
	}
	return nil
}

type ScanNvmeReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScanNvmeReq) Reset()         { *m = ScanNvmeReq{} }
func (m *ScanNvmeReq) String() string { return proto.CompactTextString(m) }
func (*ScanNvmeReq) ProtoMessage()    {}
func (*ScanNvmeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4b1a62bc89112d2, []int{4}
}

func (m *ScanNvmeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanNvmeReq.Unmarshal(m, b)
}
func (m *ScanNvmeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanNvmeReq.Marshal(b, m, deterministic)
}
func (m *ScanNvmeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanNvmeReq.Merge(m, src)
}
func (m *ScanNvmeReq) XXX_Size() int {
	return xxx_messageInfo_ScanNvmeReq.Size(m)
}
func (m *ScanNvmeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanNvmeReq.DiscardUnknown(m)
}

var xxx_messageInfo_ScanNvmeReq proto.InternalMessageInfo

type ScanNvmeResp struct {
	Ctrlrs               []*NvmeController `protobuf:"bytes,1,rep,name=ctrlrs,proto3" json:"ctrlrs,omitempty"`
	State                *ResponseState    `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ScanNvmeResp) Reset()         { *m = ScanNvmeResp{} }
func (m *ScanNvmeResp) String() string { return proto.CompactTextString(m) }
func (*ScanNvmeResp) ProtoMessage()    {}
func (*ScanNvmeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4b1a62bc89112d2, []int{5}
}

func (m *ScanNvmeResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanNvmeResp.Unmarshal(m, b)
}
func (m *ScanNvmeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanNvmeResp.Marshal(b, m, deterministic)
}
func (m *ScanNvmeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanNvmeResp.Merge(m, src)
}
func (m *ScanNvmeResp) XXX_Size() int {
	return xxx_messageInfo_ScanNvmeResp.Size(m)
}
func (m *ScanNvmeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanNvmeResp.DiscardUnknown(m)
}

var xxx_messageInfo_ScanNvmeResp proto.InternalMessageInfo

func (m *ScanNvmeResp) GetCtrlrs() []*NvmeController {
	if m != nil {
		return m.Ctrlrs
	}
	return nil
}

func (m *ScanNvmeResp) GetState() *ResponseState {
	if m != nil {
		return m.State
	}
	return nil
}

type FormatNvmeReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FormatNvmeReq) Reset()         { *m = FormatNvmeReq{} }
func (m *FormatNvmeReq) String() string { return proto.CompactTextString(m) }
func (*FormatNvmeReq) ProtoMessage()    {}
func (*FormatNvmeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4b1a62bc89112d2, []int{6}
}

func (m *FormatNvmeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormatNvmeReq.Unmarshal(m, b)
}
func (m *FormatNvmeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormatNvmeReq.Marshal(b, m, deterministic)
}
func (m *FormatNvmeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormatNvmeReq.Merge(m, src)
}
func (m *FormatNvmeReq) XXX_Size() int {
	return xxx_messageInfo_FormatNvmeReq.Size(m)
}
func (m *FormatNvmeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FormatNvmeReq.DiscardUnknown(m)
}

var xxx_messageInfo_FormatNvmeReq proto.InternalMessageInfo

func init() {
	proto.RegisterType((*NvmeController)(nil), "ctl.NvmeController")
	proto.RegisterType((*NvmeController_Namespace)(nil), "ctl.NvmeController.Namespace")
	proto.RegisterType((*NvmeController_Health)(nil), "ctl.NvmeController.Health")
	proto.RegisterType((*NvmeControllerResult)(nil), "ctl.NvmeControllerResult")
	proto.RegisterType((*PrepareNvmeReq)(nil), "ctl.PrepareNvmeReq")
	proto.RegisterType((*PrepareNvmeResp)(nil), "ctl.PrepareNvmeResp")
	proto.RegisterType((*ScanNvmeReq)(nil), "ctl.ScanNvmeReq")
	proto.RegisterType((*ScanNvmeResp)(nil), "ctl.ScanNvmeResp")
	proto.RegisterType((*FormatNvmeReq)(nil), "ctl.FormatNvmeReq")
}

func init() {
	proto.RegisterFile("storage_nvme.proto", fileDescriptor_b4b1a62bc89112d2)
}

var fileDescriptor_b4b1a62bc89112d2 = []byte{
	// 627 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xcd, 0x6a, 0x1b, 0x3d,
	0x14, 0x65, 0xe2, 0x9f, 0x38, 0x77, 0xfc, 0x03, 0xfa, 0xc2, 0xc7, 0x60, 0x68, 0x31, 0x5e, 0x94,
	0x81, 0x82, 0x17, 0xe9, 0xb2, 0xed, 0xaa, 0x50, 0xba, 0x0a, 0x45, 0xd9, 0x75, 0x53, 0x94, 0x99,
	0x1b, 0x5b, 0x54, 0x23, 0x4d, 0x25, 0x8d, 0x4d, 0xfa, 0x0c, 0x7d, 0x86, 0xbe, 0x69, 0xa1, 0xe8,
	0xca, 0x93, 0xcc, 0x38, 0x81, 0xd2, 0x95, 0x75, 0x8f, 0xce, 0x9c, 0xfb, 0xa3, 0x73, 0x0d, 0xcc,
	0x79, 0x63, 0xc5, 0x16, 0xbf, 0xea, 0x7d, 0x85, 0x9b, 0xda, 0x1a, 0x6f, 0xd8, 0xa0, 0xf0, 0x6a,
	0x39, 0x2d, 0x4c, 0x55, 0x19, 0x1d, 0xa1, 0xf5, 0xef, 0x31, 0xcc, 0xaf, 0xf7, 0x15, 0x7e, 0x30,
	0xda, 0x5b, 0xa3, 0x14, 0x5a, 0x76, 0x09, 0xa3, 0xca, 0x94, 0xa8, 0xb2, 0x64, 0x95, 0xe4, 0x17,
	0x3c, 0x06, 0xec, 0x7f, 0x18, 0x3b, 0xb4, 0x52, 0xa8, 0xec, 0x8c, 0xe0, 0x63, 0xc4, 0x32, 0x38,
	0xaf, 0x0b, 0x29, 0xca, 0xd2, 0x66, 0x03, 0xba, 0x68, 0xc3, 0xa0, 0x73, 0x77, 0xb0, 0xb8, 0xcf,
	0x86, 0x51, 0x87, 0x02, 0xb6, 0x84, 0x89, 0x33, 0xc5, 0x37, 0xf4, 0xb2, 0xcc, 0x46, 0xab, 0x24,
	0x1f, 0xf1, 0x87, 0x98, 0xbd, 0x83, 0x74, 0x87, 0x42, 0xf9, 0x9d, 0xf3, 0xc2, 0xbb, 0x6c, 0xbc,
	0x4a, 0xf2, 0xf4, 0x6a, 0xb9, 0x29, 0xbc, 0xda, 0xf4, 0x6b, 0xdc, 0x7c, 0x22, 0x1a, 0xef, 0xd2,
	0xd9, 0x7b, 0x00, 0x2d, 0x2a, 0x74, 0xb5, 0x28, 0xd0, 0x65, 0xe7, 0xab, 0x41, 0x9e, 0x5e, 0xbd,
	0x78, 0xee, 0xe3, 0xeb, 0x96, 0xc5, 0x3b, 0x1f, 0x2c, 0x6f, 0xe0, 0xe2, 0xe1, 0x82, 0xcd, 0xe1,
	0x4c, 0x96, 0x34, 0x80, 0x19, 0x3f, 0x93, 0x25, 0x63, 0x30, 0x74, 0xf2, 0x07, 0x52, 0xef, 0x43,
	0x4e, 0x67, 0xb6, 0x86, 0x69, 0xe1, 0xad, 0xb2, 0xfd, 0xf6, 0x7b, 0xd8, 0xf2, 0xd7, 0x10, 0xc6,
	0xb1, 0xd6, 0x20, 0xe1, 0xb1, 0xaa, 0x8f, 0xa2, 0x74, 0x0e, 0x12, 0xe1, 0xf7, 0x20, 0xac, 0xf6,
	0xb2, 0x8a, 0xf2, 0x33, 0xde, 0xc3, 0x5a, 0x4e, 0x61, 0xa5, 0x27, 0xce, 0xe0, 0x91, 0xd3, 0x62,
	0x6d, 0x29, 0xb7, 0x8d, 0xbb, 0x27, 0xce, 0x90, 0xca, 0xec, 0x61, 0x6c, 0x05, 0x69, 0x6d, 0x0e,
	0x68, 0x8b, 0xfb, 0x42, 0xa1, 0xa3, 0xd9, 0x0f, 0x79, 0x17, 0x0a, 0x2a, 0x14, 0x1a, 0xbd, 0x33,
	0x8d, 0x8d, 0xf3, 0x1f, 0xf2, 0x1e, 0xc6, 0x72, 0x58, 0x34, 0xda, 0x89, 0x3b, 0x74, 0xbb, 0xc6,
	0x97, 0xe6, 0xa0, 0xc3, 0xa4, 0x03, 0xed, 0x14, 0x0e, 0xf9, 0x2a, 0x2c, 0xa5, 0x40, 0x6b, 0x8d,
	0x75, 0xd9, 0x24, 0xe6, 0xeb, 0x40, 0x41, 0x8b, 0x4e, 0xca, 0x6c, 0x51, 0x7b, 0x2b, 0xd1, 0x65,
	0x17, 0x51, 0xeb, 0x04, 0x0e, 0xa6, 0x69, 0x67, 0x92, 0xc1, 0x2a, 0xc9, 0x27, 0xfc, 0x21, 0x66,
	0xaf, 0x60, 0x2e, 0xf6, 0x42, 0x2a, 0x57, 0x0b, 0x8b, 0xc4, 0x48, 0x89, 0x71, 0x82, 0x86, 0x6c,
	0x16, 0x95, 0x14, 0xb7, 0x52, 0x49, 0x7f, 0x4f, 0xc4, 0x29, 0x11, 0x4f, 0xe1, 0x30, 0x07, 0x8b,
	0xa2, 0x34, 0x5a, 0x45, 0xda, 0x8c, 0x68, 0x3d, 0x2c, 0x70, 0xf6, 0x46, 0x09, 0x2f, 0x55, 0xcc,
	0x39, 0x8f, 0x9c, 0x2e, 0xf6, 0xc4, 0x20, 0x8b, 0xa7, 0x06, 0x59, 0x7f, 0x81, 0xcb, 0xbe, 0x3b,
	0x39, 0xba, 0x46, 0xf9, 0xee, 0x5a, 0x25, 0xfd, 0xb5, 0xca, 0x61, 0x14, 0xfc, 0x1e, 0xcd, 0x92,
	0x5e, 0x31, 0x72, 0x38, 0x47, 0x57, 0x1b, 0xed, 0xf0, 0x26, 0xdc, 0xf0, 0x48, 0x58, 0xff, 0x4c,
	0x60, 0xfe, 0xd9, 0x62, 0x98, 0x40, 0xc8, 0xc1, 0xf1, 0x3b, 0x3d, 0x71, 0x21, 0x0f, 0x3b, 0xe9,
	0x51, 0x49, 0xe7, 0x8f, 0xda, 0x3d, 0x2c, 0x3c, 0x9c, 0xb6, 0xbb, 0x66, 0x8b, 0xb5, 0xd8, 0xa2,
	0xa3, 0x34, 0x23, 0xde, 0x85, 0xd8, 0x4b, 0x00, 0x2f, 0xec, 0x16, 0x7d, 0xe3, 0xb0, 0xf5, 0x7d,
	0x07, 0x09, 0x9b, 0x6f, 0xd1, 0xa1, 0x27, 0x1f, 0x4e, 0x78, 0x0c, 0xd6, 0x6f, 0x61, 0xd1, 0xab,
	0xc6, 0xd5, 0x8f, 0xbd, 0x24, 0x7f, 0xeb, 0x65, 0x06, 0xe9, 0x4d, 0x21, 0xf4, 0xb1, 0x8f, 0x35,
	0xc2, 0xf4, 0x31, 0x74, 0x35, 0x7b, 0x0d, 0x63, 0x1a, 0xab, 0xcb, 0x12, 0xda, 0xfb, 0xff, 0x9e,
	0xd9, 0x7b, 0x7e, 0xa4, 0xfc, 0xc3, 0x04, 0x17, 0x30, 0xfb, 0x68, 0x6c, 0x25, 0xfc, 0x31, 0xef,
	0xed, 0x98, 0xfe, 0x35, 0xdf, 0xfc, 0x09, 0x00, 0x00, 0xff, 0xff, 0x76, 0xc7, 0xb4, 0x31, 0x5e,
	0x05, 0x00, 0x00,
}
