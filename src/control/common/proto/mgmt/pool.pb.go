//
// (C) Copyright 2019-2022 Intel Corporation.
//
// SPDX-License-Identifier: BSD-2-Clause-Patent
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.5.0
// source: mgmt/pool.proto

package mgmt

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PoolRebuildStatus_State int32

const (
	PoolRebuildStatus_IDLE PoolRebuildStatus_State = 0
	PoolRebuildStatus_DONE PoolRebuildStatus_State = 1
	PoolRebuildStatus_BUSY PoolRebuildStatus_State = 2
)

// Enum value maps for PoolRebuildStatus_State.
var (
	PoolRebuildStatus_State_name = map[int32]string{
		0: "IDLE",
		1: "DONE",
		2: "BUSY",
	}
	PoolRebuildStatus_State_value = map[string]int32{
		"IDLE": 0,
		"DONE": 1,
		"BUSY": 2,
	}
)

func (x PoolRebuildStatus_State) Enum() *PoolRebuildStatus_State {
	p := new(PoolRebuildStatus_State)
	*p = x
	return p
}

func (x PoolRebuildStatus_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PoolRebuildStatus_State) Descriptor() protoreflect.EnumDescriptor {
	return file_mgmt_pool_proto_enumTypes[0].Descriptor()
}

func (PoolRebuildStatus_State) Type() protoreflect.EnumType {
	return &file_mgmt_pool_proto_enumTypes[0]
}

func (x PoolRebuildStatus_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PoolRebuildStatus_State.Descriptor instead.
func (PoolRebuildStatus_State) EnumDescriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{20, 0}
}

// PoolCreateReq supplies new pool parameters.
type PoolCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string          `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`             // UUID for new pool, generated on the client
	Sys        string          `protobuf:"bytes,2,opt,name=sys,proto3" json:"sys,omitempty"`               // DAOS system identifier
	User       string          `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`             // formatted user e.g. "bob@"
	Usergroup  string          `protobuf:"bytes,4,opt,name=usergroup,proto3" json:"usergroup,omitempty"`   // formatted group e.g. "builders@"
	Acl        []string        `protobuf:"bytes,5,rep,name=acl,proto3" json:"acl,omitempty"`               // Access Control Entries in short string format
	Properties []*PoolProperty `protobuf:"bytes,6,rep,name=properties,proto3" json:"properties,omitempty"` // Pool properties to be set
	// The minimal fault domain tree format consists of a set of tuples
	// representing members of the tree in a breadth-first traversal order.
	// Each domain above rank consists of: (level, id, num children)
	// Each rank consists of: (rank number)
	FaultDomains []uint32  `protobuf:"varint,7,rep,packed,name=faultDomains,proto3" json:"faultDomains,omitempty"` // Fault domain tree, minimal format
	Numsvcreps   uint32    `protobuf:"varint,8,opt,name=numsvcreps,proto3" json:"numsvcreps,omitempty"`            // desired number of pool service replicas
	Totalbytes   uint64    `protobuf:"varint,9,opt,name=totalbytes,proto3" json:"totalbytes,omitempty"`            // Total pool size in bytes (auto config)
	Tierratio    []float64 `protobuf:"fixed64,10,rep,packed,name=tierratio,proto3" json:"tierratio,omitempty"`     // Ratio of storage tiers expressed as % of totalbytes (auto config)
	Numranks     uint32    `protobuf:"varint,11,opt,name=numranks,proto3" json:"numranks,omitempty"`               // Number of target ranks to use (auto config)
	Ranks        []uint32  `protobuf:"varint,12,rep,packed,name=ranks,proto3" json:"ranks,omitempty"`              // target ranks (manual config)
	Tierbytes    []uint64  `protobuf:"varint,13,rep,packed,name=tierbytes,proto3" json:"tierbytes,omitempty"`      // Size in bytes of storage tiers (manual config)
}

func (x *PoolCreateReq) Reset() {
	*x = PoolCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolCreateReq) ProtoMessage() {}

func (x *PoolCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolCreateReq.ProtoReflect.Descriptor instead.
func (*PoolCreateReq) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{0}
}

func (x *PoolCreateReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *PoolCreateReq) GetSys() string {
	if x != nil {
		return x.Sys
	}
	return ""
}

func (x *PoolCreateReq) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *PoolCreateReq) GetUsergroup() string {
	if x != nil {
		return x.Usergroup
	}
	return ""
}

func (x *PoolCreateReq) GetAcl() []string {
	if x != nil {
		return x.Acl
	}
	return nil
}

func (x *PoolCreateReq) GetProperties() []*PoolProperty {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *PoolCreateReq) GetFaultDomains() []uint32 {
	if x != nil {
		return x.FaultDomains
	}
	return nil
}

func (x *PoolCreateReq) GetNumsvcreps() uint32 {
	if x != nil {
		return x.Numsvcreps
	}
	return 0
}

func (x *PoolCreateReq) GetTotalbytes() uint64 {
	if x != nil {
		return x.Totalbytes
	}
	return 0
}

func (x *PoolCreateReq) GetTierratio() []float64 {
	if x != nil {
		return x.Tierratio
	}
	return nil
}

func (x *PoolCreateReq) GetNumranks() uint32 {
	if x != nil {
		return x.Numranks
	}
	return 0
}

func (x *PoolCreateReq) GetRanks() []uint32 {
	if x != nil {
		return x.Ranks
	}
	return nil
}

func (x *PoolCreateReq) GetTierbytes() []uint64 {
	if x != nil {
		return x.Tierbytes
	}
	return nil
}

// PoolCreateResp returns created pool uuid and ranks.
type PoolCreateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`                               // DAOS error code
	SvcReps   []uint32 `protobuf:"varint,2,rep,packed,name=svc_reps,json=svcReps,proto3" json:"svc_reps,omitempty"`       // pool service replica ranks
	TgtRanks  []uint32 `protobuf:"varint,3,rep,packed,name=tgt_ranks,json=tgtRanks,proto3" json:"tgt_ranks,omitempty"`    // pool target ranks
	TierBytes []uint64 `protobuf:"varint,4,rep,packed,name=tier_bytes,json=tierBytes,proto3" json:"tier_bytes,omitempty"` // storage tiers allocated to pool
}

func (x *PoolCreateResp) Reset() {
	*x = PoolCreateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolCreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolCreateResp) ProtoMessage() {}

func (x *PoolCreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolCreateResp.ProtoReflect.Descriptor instead.
func (*PoolCreateResp) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{1}
}

func (x *PoolCreateResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PoolCreateResp) GetSvcReps() []uint32 {
	if x != nil {
		return x.SvcReps
	}
	return nil
}

func (x *PoolCreateResp) GetTgtRanks() []uint32 {
	if x != nil {
		return x.TgtRanks
	}
	return nil
}

func (x *PoolCreateResp) GetTierBytes() []uint64 {
	if x != nil {
		return x.TierBytes
	}
	return nil
}

// PoolDestroyReq supplies pool identifier and force flag.
type PoolDestroyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sys      string   `protobuf:"bytes,1,opt,name=sys,proto3" json:"sys,omitempty"`                                   // DAOS system identifier
	Id       string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`                                     // uuid or label of pool to destroy
	Force    bool     `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`                              // destroy regardless of active connections
	SvcRanks []uint32 `protobuf:"varint,4,rep,packed,name=svc_ranks,json=svcRanks,proto3" json:"svc_ranks,omitempty"` // List of pool service ranks
}

func (x *PoolDestroyReq) Reset() {
	*x = PoolDestroyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolDestroyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolDestroyReq) ProtoMessage() {}

func (x *PoolDestroyReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolDestroyReq.ProtoReflect.Descriptor instead.
func (*PoolDestroyReq) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{2}
}

func (x *PoolDestroyReq) GetSys() string {
	if x != nil {
		return x.Sys
	}
	return ""
}

func (x *PoolDestroyReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PoolDestroyReq) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *PoolDestroyReq) GetSvcRanks() []uint32 {
	if x != nil {
		return x.SvcRanks
	}
	return nil
}

// PoolDestroyResp returns resultant state of destroy operation.
type PoolDestroyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"` // DAOS error code
}

func (x *PoolDestroyResp) Reset() {
	*x = PoolDestroyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolDestroyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolDestroyResp) ProtoMessage() {}

func (x *PoolDestroyResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolDestroyResp.ProtoReflect.Descriptor instead.
func (*PoolDestroyResp) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{3}
}

func (x *PoolDestroyResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// PoolEvictReq supplies pool identifier.
type PoolEvictReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sys          string   `protobuf:"bytes,1,opt,name=sys,proto3" json:"sys,omitempty"`                                        // DAOS system identifier
	Id           string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`                                          // uuid or label of pool to evict
	SvcRanks     []uint32 `protobuf:"varint,3,rep,packed,name=svc_ranks,json=svcRanks,proto3" json:"svc_ranks,omitempty"`      // List of pool service ranks
	Handles      []string `protobuf:"bytes,4,rep,name=handles,proto3" json:"handles,omitempty"`                                // Optional list of handles to evict (Mutually exclusive with destroy/force_destroy)
	Destroy      bool     `protobuf:"varint,5,opt,name=destroy,proto3" json:"destroy,omitempty"`                               // If true, evict is first step of a pool destroy operation
	ForceDestroy bool     `protobuf:"varint,6,opt,name=force_destroy,json=forceDestroy,proto3" json:"force_destroy,omitempty"` // If true and destroy=true, forcibly closes open pool handles
	Machine      string   `protobuf:"bytes,7,opt,name=machine,proto3" json:"machine,omitempty"`                                // Optional machine name to evict handles for (Mutually exclusive with handles)
}

func (x *PoolEvictReq) Reset() {
	*x = PoolEvictReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolEvictReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolEvictReq) ProtoMessage() {}

func (x *PoolEvictReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolEvictReq.ProtoReflect.Descriptor instead.
func (*PoolEvictReq) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{4}
}

func (x *PoolEvictReq) GetSys() string {
	if x != nil {
		return x.Sys
	}
	return ""
}

func (x *PoolEvictReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PoolEvictReq) GetSvcRanks() []uint32 {
	if x != nil {
		return x.SvcRanks
	}
	return nil
}

func (x *PoolEvictReq) GetHandles() []string {
	if x != nil {
		return x.Handles
	}
	return nil
}

func (x *PoolEvictReq) GetDestroy() bool {
	if x != nil {
		return x.Destroy
	}
	return false
}

func (x *PoolEvictReq) GetForceDestroy() bool {
	if x != nil {
		return x.ForceDestroy
	}
	return false
}

func (x *PoolEvictReq) GetMachine() string {
	if x != nil {
		return x.Machine
	}
	return ""
}

// PoolEvictResp returns resultant state of evict operation.
type PoolEvictResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"` // DAOS error code
	Count  int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`   // Count of handles evicted
}

func (x *PoolEvictResp) Reset() {
	*x = PoolEvictResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolEvictResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolEvictResp) ProtoMessage() {}

func (x *PoolEvictResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolEvictResp.ProtoReflect.Descriptor instead.
func (*PoolEvictResp) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{5}
}

func (x *PoolEvictResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PoolEvictResp) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// PoolExcludeReq supplies pool identifier, rank, and target_idxs.
type PoolExcludeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sys       string   `protobuf:"bytes,1,opt,name=sys,proto3" json:"sys,omitempty"`                                   // DAOS system identifier
	Id        string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`                                     // uuid or label of pool to add target up to
	Rank      uint32   `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`                                // target to move to the up state
	Targetidx []uint32 `protobuf:"varint,4,rep,packed,name=targetidx,proto3" json:"targetidx,omitempty"`               // target ranks
	SvcRanks  []uint32 `protobuf:"varint,5,rep,packed,name=svc_ranks,json=svcRanks,proto3" json:"svc_ranks,omitempty"` // List of pool service ranks
}

func (x *PoolExcludeReq) Reset() {
	*x = PoolExcludeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolExcludeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolExcludeReq) ProtoMessage() {}

func (x *PoolExcludeReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolExcludeReq.ProtoReflect.Descriptor instead.
func (*PoolExcludeReq) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{6}
}

func (x *PoolExcludeReq) GetSys() string {
	if x != nil {
		return x.Sys
	}
	return ""
}

func (x *PoolExcludeReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PoolExcludeReq) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *PoolExcludeReq) GetTargetidx() []uint32 {
	if x != nil {
		return x.Targetidx
	}
	return nil
}

func (x *PoolExcludeReq) GetSvcRanks() []uint32 {
	if x != nil {
		return x.SvcRanks
	}
	return nil
}

// PoolExcludeResp returns resultant state of Exclude operation.
type PoolExcludeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"` // DAOS error code
}

func (x *PoolExcludeResp) Reset() {
	*x = PoolExcludeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolExcludeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolExcludeResp) ProtoMessage() {}

func (x *PoolExcludeResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolExcludeResp.ProtoReflect.Descriptor instead.
func (*PoolExcludeResp) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{7}
}

func (x *PoolExcludeResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// PoolDrainReq supplies pool identifier, rank, and target_idxs.
type PoolDrainReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sys       string   `protobuf:"bytes,1,opt,name=sys,proto3" json:"sys,omitempty"`                                   // DAOS system identifier
	Id        string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`                                     // uuid or label of pool to add target up to
	Rank      uint32   `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`                                // rank to move to the up state
	Targetidx []uint32 `protobuf:"varint,4,rep,packed,name=targetidx,proto3" json:"targetidx,omitempty"`               // rank targets
	SvcRanks  []uint32 `protobuf:"varint,5,rep,packed,name=svc_ranks,json=svcRanks,proto3" json:"svc_ranks,omitempty"` // List of pool service ranks
}

func (x *PoolDrainReq) Reset() {
	*x = PoolDrainReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolDrainReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolDrainReq) ProtoMessage() {}

func (x *PoolDrainReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolDrainReq.ProtoReflect.Descriptor instead.
func (*PoolDrainReq) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{8}
}

func (x *PoolDrainReq) GetSys() string {
	if x != nil {
		return x.Sys
	}
	return ""
}

func (x *PoolDrainReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PoolDrainReq) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *PoolDrainReq) GetTargetidx() []uint32 {
	if x != nil {
		return x.Targetidx
	}
	return nil
}

func (x *PoolDrainReq) GetSvcRanks() []uint32 {
	if x != nil {
		return x.SvcRanks
	}
	return nil
}

// PoolDrainResp returns resultant state of Drain operation.
type PoolDrainResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"` // DAOS error code
}

func (x *PoolDrainResp) Reset() {
	*x = PoolDrainResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolDrainResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolDrainResp) ProtoMessage() {}

func (x *PoolDrainResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolDrainResp.ProtoReflect.Descriptor instead.
func (*PoolDrainResp) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{9}
}

func (x *PoolDrainResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// PoolExtendReq supplies pool identifier and rank list.
type PoolExtendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sys          string   `protobuf:"bytes,1,opt,name=sys,proto3" json:"sys,omitempty"`                                   // DAOS system identifier
	Id           string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`                                     // uuid or label of pool to add target up to
	Ranks        []uint32 `protobuf:"varint,3,rep,packed,name=ranks,proto3" json:"ranks,omitempty"`                       // ranks
	SvcRanks     []uint32 `protobuf:"varint,4,rep,packed,name=svc_ranks,json=svcRanks,proto3" json:"svc_ranks,omitempty"` // List of pool service ranks
	Tierbytes    []uint64 `protobuf:"varint,5,rep,packed,name=tierbytes,proto3" json:"tierbytes,omitempty"`               // Size in bytes of storage tiers
	FaultDomains []uint32 `protobuf:"varint,6,rep,packed,name=faultDomains,proto3" json:"faultDomains,omitempty"`         // fault domain tree, minimal format
}

func (x *PoolExtendReq) Reset() {
	*x = PoolExtendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolExtendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolExtendReq) ProtoMessage() {}

func (x *PoolExtendReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolExtendReq.ProtoReflect.Descriptor instead.
func (*PoolExtendReq) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{10}
}

func (x *PoolExtendReq) GetSys() string {
	if x != nil {
		return x.Sys
	}
	return ""
}

func (x *PoolExtendReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PoolExtendReq) GetRanks() []uint32 {
	if x != nil {
		return x.Ranks
	}
	return nil
}

func (x *PoolExtendReq) GetSvcRanks() []uint32 {
	if x != nil {
		return x.SvcRanks
	}
	return nil
}

func (x *PoolExtendReq) GetTierbytes() []uint64 {
	if x != nil {
		return x.Tierbytes
	}
	return nil
}

func (x *PoolExtendReq) GetFaultDomains() []uint32 {
	if x != nil {
		return x.FaultDomains
	}
	return nil
}

// PoolExtendResp returns resultant state of Extend operation.
type PoolExtendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`                               // DAOS error code
	TierBytes []uint64 `protobuf:"varint,2,rep,packed,name=tier_bytes,json=tierBytes,proto3" json:"tier_bytes,omitempty"` // storage tiers allocated to pool
}

func (x *PoolExtendResp) Reset() {
	*x = PoolExtendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolExtendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolExtendResp) ProtoMessage() {}

func (x *PoolExtendResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolExtendResp.ProtoReflect.Descriptor instead.
func (*PoolExtendResp) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{11}
}

func (x *PoolExtendResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PoolExtendResp) GetTierBytes() []uint64 {
	if x != nil {
		return x.TierBytes
	}
	return nil
}

// PoolReintegrateReq supplies pool identifier, rank, and target_idxs.
type PoolReintegrateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sys       string   `protobuf:"bytes,1,opt,name=sys,proto3" json:"sys,omitempty"`                                   // DAOS system identifier
	Id        string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`                                     // uuid or label of pool to add target up to
	Rank      uint32   `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`                                // target to move to the up state
	Targetidx []uint32 `protobuf:"varint,4,rep,packed,name=targetidx,proto3" json:"targetidx,omitempty"`               // target ranks
	SvcRanks  []uint32 `protobuf:"varint,5,rep,packed,name=svc_ranks,json=svcRanks,proto3" json:"svc_ranks,omitempty"` // List of pool service ranks
}

func (x *PoolReintegrateReq) Reset() {
	*x = PoolReintegrateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolReintegrateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolReintegrateReq) ProtoMessage() {}

func (x *PoolReintegrateReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolReintegrateReq.ProtoReflect.Descriptor instead.
func (*PoolReintegrateReq) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{12}
}

func (x *PoolReintegrateReq) GetSys() string {
	if x != nil {
		return x.Sys
	}
	return ""
}

func (x *PoolReintegrateReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PoolReintegrateReq) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *PoolReintegrateReq) GetTargetidx() []uint32 {
	if x != nil {
		return x.Targetidx
	}
	return nil
}

func (x *PoolReintegrateReq) GetSvcRanks() []uint32 {
	if x != nil {
		return x.SvcRanks
	}
	return nil
}

// PoolReintegrateResp returns resultant state of Reintegrate operation.
type PoolReintegrateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"` // DAOS error code
}

func (x *PoolReintegrateResp) Reset() {
	*x = PoolReintegrateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolReintegrateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolReintegrateResp) ProtoMessage() {}

func (x *PoolReintegrateResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolReintegrateResp.ProtoReflect.Descriptor instead.
func (*PoolReintegrateResp) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{13}
}

func (x *PoolReintegrateResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// ListPoolsReq represents a request to list pools on a given DAOS system.
type ListPoolsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sys string `protobuf:"bytes,1,opt,name=sys,proto3" json:"sys,omitempty"` // DAOS system identifier
}

func (x *ListPoolsReq) Reset() {
	*x = ListPoolsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPoolsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoolsReq) ProtoMessage() {}

func (x *ListPoolsReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPoolsReq.ProtoReflect.Descriptor instead.
func (*ListPoolsReq) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{14}
}

func (x *ListPoolsReq) GetSys() string {
	if x != nil {
		return x.Sys
	}
	return ""
}

// ListPoolsResp returns the list of pools in the system.
type ListPoolsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      int32                 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`                              // DAOS error code
	Pools       []*ListPoolsResp_Pool `protobuf:"bytes,2,rep,name=pools,proto3" json:"pools,omitempty"`                                 // pools list
	DataVersion uint64                `protobuf:"varint,3,opt,name=data_version,json=dataVersion,proto3" json:"data_version,omitempty"` // Version of the system database.
}

func (x *ListPoolsResp) Reset() {
	*x = ListPoolsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPoolsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoolsResp) ProtoMessage() {}

func (x *ListPoolsResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPoolsResp.ProtoReflect.Descriptor instead.
func (*ListPoolsResp) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{15}
}

func (x *ListPoolsResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListPoolsResp) GetPools() []*ListPoolsResp_Pool {
	if x != nil {
		return x.Pools
	}
	return nil
}

func (x *ListPoolsResp) GetDataVersion() uint64 {
	if x != nil {
		return x.DataVersion
	}
	return 0
}

// ListContainers
// Initial implementation differs from C API
// (numContainers not provided in request - get whole list)
type ListContReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sys      string   `protobuf:"bytes,1,opt,name=sys,proto3" json:"sys,omitempty"`                                   // DAOS system identifier
	Id       string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`                                     // uuid or label of pool
	SvcRanks []uint32 `protobuf:"varint,3,rep,packed,name=svc_ranks,json=svcRanks,proto3" json:"svc_ranks,omitempty"` // List of pool service ranks
}

func (x *ListContReq) Reset() {
	*x = ListContReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContReq) ProtoMessage() {}

func (x *ListContReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContReq.ProtoReflect.Descriptor instead.
func (*ListContReq) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{16}
}

func (x *ListContReq) GetSys() string {
	if x != nil {
		return x.Sys
	}
	return ""
}

func (x *ListContReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListContReq) GetSvcRanks() []uint32 {
	if x != nil {
		return x.SvcRanks
	}
	return nil
}

type ListContResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     int32                `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`        // DAOS error code
	Containers []*ListContResp_Cont `protobuf:"bytes,2,rep,name=containers,proto3" json:"containers,omitempty"` // containers
}

func (x *ListContResp) Reset() {
	*x = ListContResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContResp) ProtoMessage() {}

func (x *ListContResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContResp.ProtoReflect.Descriptor instead.
func (*ListContResp) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{17}
}

func (x *ListContResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListContResp) GetContainers() []*ListContResp_Cont {
	if x != nil {
		return x.Containers
	}
	return nil
}

// PoolQueryReq represents a pool query request.
type PoolQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sys                  string   `protobuf:"bytes,1,opt,name=sys,proto3" json:"sys,omitempty"` // DAOS system identifier
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	SvcRanks             []uint32 `protobuf:"varint,3,rep,packed,name=svc_ranks,json=svcRanks,proto3" json:"svc_ranks,omitempty"`                                // List of pool service ranks
	IncludeEnabledRanks  bool     `protobuf:"varint,4,opt,name=include_enabled_ranks,json=includeEnabledRanks,proto3" json:"include_enabled_ranks,omitempty"`    // True if the list of enabled ranks shall be returned
	IncludeDisabledRanks bool     `protobuf:"varint,5,opt,name=include_disabled_ranks,json=includeDisabledRanks,proto3" json:"include_disabled_ranks,omitempty"` // True if the list of disabled ranks shall be returned
}

func (x *PoolQueryReq) Reset() {
	*x = PoolQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolQueryReq) ProtoMessage() {}

func (x *PoolQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolQueryReq.ProtoReflect.Descriptor instead.
func (*PoolQueryReq) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{18}
}

func (x *PoolQueryReq) GetSys() string {
	if x != nil {
		return x.Sys
	}
	return ""
}

func (x *PoolQueryReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PoolQueryReq) GetSvcRanks() []uint32 {
	if x != nil {
		return x.SvcRanks
	}
	return nil
}

func (x *PoolQueryReq) GetIncludeEnabledRanks() bool {
	if x != nil {
		return x.IncludeEnabledRanks
	}
	return false
}

func (x *PoolQueryReq) GetIncludeDisabledRanks() bool {
	if x != nil {
		return x.IncludeDisabledRanks
	}
	return false
}

// StorageUsageStats represents usage statistics for a storage subsystem.
type StorageUsageStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total     uint64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Free      uint64 `protobuf:"varint,2,opt,name=free,proto3" json:"free,omitempty"`
	Min       uint64 `protobuf:"varint,3,opt,name=min,proto3" json:"min,omitempty"`
	Max       uint64 `protobuf:"varint,4,opt,name=max,proto3" json:"max,omitempty"`
	Mean      uint64 `protobuf:"varint,5,opt,name=mean,proto3" json:"mean,omitempty"`
	MediaType uint32 `protobuf:"varint,6,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`
}

func (x *StorageUsageStats) Reset() {
	*x = StorageUsageStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageUsageStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageUsageStats) ProtoMessage() {}

func (x *StorageUsageStats) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageUsageStats.ProtoReflect.Descriptor instead.
func (*StorageUsageStats) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{19}
}

func (x *StorageUsageStats) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *StorageUsageStats) GetFree() uint64 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *StorageUsageStats) GetMin() uint64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *StorageUsageStats) GetMax() uint64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *StorageUsageStats) GetMean() uint64 {
	if x != nil {
		return x.Mean
	}
	return 0
}

func (x *StorageUsageStats) GetMediaType() uint32 {
	if x != nil {
		return x.MediaType
	}
	return 0
}

// PoolRebuildStatus represents a pool's rebuild status.
type PoolRebuildStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"` // DAOS error code
	State   PoolRebuildStatus_State `protobuf:"varint,2,opt,name=state,proto3,enum=mgmt.PoolRebuildStatus_State" json:"state,omitempty"`
	Objects uint64                  `protobuf:"varint,3,opt,name=objects,proto3" json:"objects,omitempty"`
	Records uint64                  `protobuf:"varint,4,opt,name=records,proto3" json:"records,omitempty"`
}

func (x *PoolRebuildStatus) Reset() {
	*x = PoolRebuildStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolRebuildStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolRebuildStatus) ProtoMessage() {}

func (x *PoolRebuildStatus) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolRebuildStatus.ProtoReflect.Descriptor instead.
func (*PoolRebuildStatus) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{20}
}

func (x *PoolRebuildStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PoolRebuildStatus) GetState() PoolRebuildStatus_State {
	if x != nil {
		return x.State
	}
	return PoolRebuildStatus_IDLE
}

func (x *PoolRebuildStatus) GetObjects() uint64 {
	if x != nil {
		return x.Objects
	}
	return 0
}

func (x *PoolRebuildStatus) GetRecords() uint64 {
	if x != nil {
		return x.Records
	}
	return 0
}

// PoolQueryResp represents a pool query response.
type PoolQueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status           int32                `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`                                                // DAOS error code
	Uuid             string               `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`                                                     // pool uuid
	Label            string               `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`                                                   // pool label
	TotalTargets     uint32               `protobuf:"varint,4,opt,name=total_targets,json=totalTargets,proto3" json:"total_targets,omitempty"`                // total targets in pool
	ActiveTargets    uint32               `protobuf:"varint,5,opt,name=active_targets,json=activeTargets,proto3" json:"active_targets,omitempty"`             // active targets in pool
	DisabledTargets  uint32               `protobuf:"varint,6,opt,name=disabled_targets,json=disabledTargets,proto3" json:"disabled_targets,omitempty"`       // number of disabled targets in pool
	Rebuild          *PoolRebuildStatus   `protobuf:"bytes,7,opt,name=rebuild,proto3" json:"rebuild,omitempty"`                                               // pool rebuild status
	TierStats        []*StorageUsageStats `protobuf:"bytes,8,rep,name=tier_stats,json=tierStats,proto3" json:"tier_stats,omitempty"`                          // storage tiers usage stats
	Version          uint32               `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`                                             // latest pool map version
	Leader           uint32               `protobuf:"varint,11,opt,name=leader,proto3" json:"leader,omitempty"`                                               // current raft leader
	EnabledRanks     string               `protobuf:"bytes,12,opt,name=enabled_ranks,json=enabledRanks,proto3" json:"enabled_ranks,omitempty"`                // optional set of ranks enabled
	DisabledRanks    string               `protobuf:"bytes,13,opt,name=disabled_ranks,json=disabledRanks,proto3" json:"disabled_ranks,omitempty"`             // optional set of ranks disabled
	TotalEngines     uint32               `protobuf:"varint,14,opt,name=total_engines,json=totalEngines,proto3" json:"total_engines,omitempty"`               // total engines in pool
	PoolLayoutVer    uint32               `protobuf:"varint,15,opt,name=pool_layout_ver,json=poolLayoutVer,proto3" json:"pool_layout_ver,omitempty"`          // current pool global version
	UpgradeLayoutVer uint32               `protobuf:"varint,16,opt,name=upgrade_layout_ver,json=upgradeLayoutVer,proto3" json:"upgrade_layout_ver,omitempty"` // latest pool global version to upgrade
}

func (x *PoolQueryResp) Reset() {
	*x = PoolQueryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolQueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolQueryResp) ProtoMessage() {}

func (x *PoolQueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolQueryResp.ProtoReflect.Descriptor instead.
func (*PoolQueryResp) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{21}
}

func (x *PoolQueryResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PoolQueryResp) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *PoolQueryResp) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *PoolQueryResp) GetTotalTargets() uint32 {
	if x != nil {
		return x.TotalTargets
	}
	return 0
}

func (x *PoolQueryResp) GetActiveTargets() uint32 {
	if x != nil {
		return x.ActiveTargets
	}
	return 0
}

func (x *PoolQueryResp) GetDisabledTargets() uint32 {
	if x != nil {
		return x.DisabledTargets
	}
	return 0
}

func (x *PoolQueryResp) GetRebuild() *PoolRebuildStatus {
	if x != nil {
		return x.Rebuild
	}
	return nil
}

func (x *PoolQueryResp) GetTierStats() []*StorageUsageStats {
	if x != nil {
		return x.TierStats
	}
	return nil
}

func (x *PoolQueryResp) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *PoolQueryResp) GetLeader() uint32 {
	if x != nil {
		return x.Leader
	}
	return 0
}

func (x *PoolQueryResp) GetEnabledRanks() string {
	if x != nil {
		return x.EnabledRanks
	}
	return ""
}

func (x *PoolQueryResp) GetDisabledRanks() string {
	if x != nil {
		return x.DisabledRanks
	}
	return ""
}

func (x *PoolQueryResp) GetTotalEngines() uint32 {
	if x != nil {
		return x.TotalEngines
	}
	return 0
}

func (x *PoolQueryResp) GetPoolLayoutVer() uint32 {
	if x != nil {
		return x.PoolLayoutVer
	}
	return 0
}

func (x *PoolQueryResp) GetUpgradeLayoutVer() uint32 {
	if x != nil {
		return x.UpgradeLayoutVer
	}
	return 0
}

type PoolProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number uint32 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"` // pool property number
	// Types that are assignable to Value:
	//
	//	*PoolProperty_Strval
	//	*PoolProperty_Numval
	Value isPoolProperty_Value `protobuf_oneof:"value"`
}

func (x *PoolProperty) Reset() {
	*x = PoolProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolProperty) ProtoMessage() {}

func (x *PoolProperty) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolProperty.ProtoReflect.Descriptor instead.
func (*PoolProperty) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{22}
}

func (x *PoolProperty) GetNumber() uint32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (m *PoolProperty) GetValue() isPoolProperty_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *PoolProperty) GetStrval() string {
	if x, ok := x.GetValue().(*PoolProperty_Strval); ok {
		return x.Strval
	}
	return ""
}

func (x *PoolProperty) GetNumval() uint64 {
	if x, ok := x.GetValue().(*PoolProperty_Numval); ok {
		return x.Numval
	}
	return 0
}

type isPoolProperty_Value interface {
	isPoolProperty_Value()
}

type PoolProperty_Strval struct {
	Strval string `protobuf:"bytes,2,opt,name=strval,proto3,oneof"` // pool property string value
}

type PoolProperty_Numval struct {
	Numval uint64 `protobuf:"varint,3,opt,name=numval,proto3,oneof"` // pool property numeric value
}

func (*PoolProperty_Strval) isPoolProperty_Value() {}

func (*PoolProperty_Numval) isPoolProperty_Value() {}

// PoolSetPropReq represents a request to set pool properties.
type PoolSetPropReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sys        string          `protobuf:"bytes,1,opt,name=sys,proto3" json:"sys,omitempty"` // DAOS system identifier
	Id         string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`   // uuid or label of pool to modify
	Properties []*PoolProperty `protobuf:"bytes,3,rep,name=properties,proto3" json:"properties,omitempty"`
	SvcRanks   []uint32        `protobuf:"varint,4,rep,packed,name=svc_ranks,json=svcRanks,proto3" json:"svc_ranks,omitempty"` // List of pool service ranks
}

func (x *PoolSetPropReq) Reset() {
	*x = PoolSetPropReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolSetPropReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolSetPropReq) ProtoMessage() {}

func (x *PoolSetPropReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolSetPropReq.ProtoReflect.Descriptor instead.
func (*PoolSetPropReq) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{23}
}

func (x *PoolSetPropReq) GetSys() string {
	if x != nil {
		return x.Sys
	}
	return ""
}

func (x *PoolSetPropReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PoolSetPropReq) GetProperties() []*PoolProperty {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *PoolSetPropReq) GetSvcRanks() []uint32 {
	if x != nil {
		return x.SvcRanks
	}
	return nil
}

// PoolSetPropResp represents the result of setting pool properties.
type PoolSetPropResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"` // DAOS error code
}

func (x *PoolSetPropResp) Reset() {
	*x = PoolSetPropResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolSetPropResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolSetPropResp) ProtoMessage() {}

func (x *PoolSetPropResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolSetPropResp.ProtoReflect.Descriptor instead.
func (*PoolSetPropResp) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{24}
}

func (x *PoolSetPropResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// PoolGetPropReq represents a request to get pool properties.
type PoolGetPropReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sys        string          `protobuf:"bytes,1,opt,name=sys,proto3" json:"sys,omitempty"` // DAOS system identifier
	Id         string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`   // uuid or label of pool to query
	Properties []*PoolProperty `protobuf:"bytes,3,rep,name=properties,proto3" json:"properties,omitempty"`
	SvcRanks   []uint32        `protobuf:"varint,4,rep,packed,name=svc_ranks,json=svcRanks,proto3" json:"svc_ranks,omitempty"` // List of pool service ranks
}

func (x *PoolGetPropReq) Reset() {
	*x = PoolGetPropReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolGetPropReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolGetPropReq) ProtoMessage() {}

func (x *PoolGetPropReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolGetPropReq.ProtoReflect.Descriptor instead.
func (*PoolGetPropReq) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{25}
}

func (x *PoolGetPropReq) GetSys() string {
	if x != nil {
		return x.Sys
	}
	return ""
}

func (x *PoolGetPropReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PoolGetPropReq) GetProperties() []*PoolProperty {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *PoolGetPropReq) GetSvcRanks() []uint32 {
	if x != nil {
		return x.SvcRanks
	}
	return nil
}

// PoolGetPropResp represents the result of getting pool properties.
type PoolGetPropResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     int32           `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"` // DAOS error code
	Properties []*PoolProperty `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *PoolGetPropResp) Reset() {
	*x = PoolGetPropResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolGetPropResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolGetPropResp) ProtoMessage() {}

func (x *PoolGetPropResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolGetPropResp.ProtoReflect.Descriptor instead.
func (*PoolGetPropResp) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{26}
}

func (x *PoolGetPropResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PoolGetPropResp) GetProperties() []*PoolProperty {
	if x != nil {
		return x.Properties
	}
	return nil
}

// PoolUpgradeReq upgrades the disk format of an existing pool to the
// latest version.
type PoolUpgradeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sys      string   `protobuf:"bytes,1,opt,name=sys,proto3" json:"sys,omitempty"` // DAOS system identifier
	Id       string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	SvcRanks []uint32 `protobuf:"varint,3,rep,packed,name=svc_ranks,json=svcRanks,proto3" json:"svc_ranks,omitempty"` // List of pool service ranks
}

func (x *PoolUpgradeReq) Reset() {
	*x = PoolUpgradeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolUpgradeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolUpgradeReq) ProtoMessage() {}

func (x *PoolUpgradeReq) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolUpgradeReq.ProtoReflect.Descriptor instead.
func (*PoolUpgradeReq) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{27}
}

func (x *PoolUpgradeReq) GetSys() string {
	if x != nil {
		return x.Sys
	}
	return ""
}

func (x *PoolUpgradeReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PoolUpgradeReq) GetSvcRanks() []uint32 {
	if x != nil {
		return x.SvcRanks
	}
	return nil
}

// PoolUpgradeResp returns resultant state of upgrade operation.
type PoolUpgradeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"` // DAOS error code
}

func (x *PoolUpgradeResp) Reset() {
	*x = PoolUpgradeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolUpgradeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolUpgradeResp) ProtoMessage() {}

func (x *PoolUpgradeResp) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolUpgradeResp.ProtoReflect.Descriptor instead.
func (*PoolUpgradeResp) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{28}
}

func (x *PoolUpgradeResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ListPoolsResp_Pool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid    string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`                              // uuid of pool
	Label   string   `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`                            // pool label
	SvcReps []uint32 `protobuf:"varint,3,rep,packed,name=svc_reps,json=svcReps,proto3" json:"svc_reps,omitempty"` // pool service replica ranks
	State   string   `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`                            // pool state
}

func (x *ListPoolsResp_Pool) Reset() {
	*x = ListPoolsResp_Pool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPoolsResp_Pool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoolsResp_Pool) ProtoMessage() {}

func (x *ListPoolsResp_Pool) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPoolsResp_Pool.ProtoReflect.Descriptor instead.
func (*ListPoolsResp_Pool) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{15, 0}
}

func (x *ListPoolsResp_Pool) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ListPoolsResp_Pool) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ListPoolsResp_Pool) GetSvcReps() []uint32 {
	if x != nil {
		return x.SvcReps
	}
	return nil
}

func (x *ListPoolsResp_Pool) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type ListContResp_Cont struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // uuid of container
}

func (x *ListContResp_Cont) Reset() {
	*x = ListContResp_Cont{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mgmt_pool_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContResp_Cont) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContResp_Cont) ProtoMessage() {}

func (x *ListContResp_Cont) ProtoReflect() protoreflect.Message {
	mi := &file_mgmt_pool_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContResp_Cont.ProtoReflect.Descriptor instead.
func (*ListContResp_Cont) Descriptor() ([]byte, []int) {
	return file_mgmt_pool_proto_rawDescGZIP(), []int{17, 0}
}

func (x *ListContResp_Cont) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

var File_mgmt_pool_proto protoreflect.FileDescriptor

var file_mgmt_pool_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x6d, 0x67, 0x6d, 0x74, 0x22, 0xff, 0x02, 0x0a, 0x0d, 0x50, 0x6f, 0x6f, 0x6c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x79, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x6c, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03,
	0x61, 0x63, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x50,
	0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6e,
	0x75, 0x6d, 0x73, 0x76, 0x63, 0x72, 0x65, 0x70, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x6e, 0x75, 0x6d, 0x73, 0x76, 0x63, 0x72, 0x65, 0x70, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x65, 0x72, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x01, 0x52, 0x09,
	0x74, 0x69, 0x65, 0x72, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x75, 0x6d,
	0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6e, 0x75, 0x6d,
	0x72, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x65, 0x72, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x04, 0x52, 0x09,
	0x74, 0x69, 0x65, 0x72, 0x62, 0x79, 0x74, 0x65, 0x73, 0x22, 0x7f, 0x0a, 0x0e, 0x50, 0x6f, 0x6f,
	0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x76, 0x63, 0x5f, 0x72, 0x65, 0x70, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x76, 0x63, 0x52, 0x65, 0x70, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x67, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x08, 0x74, 0x67, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x69, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x09, 0x74, 0x69, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x65, 0x0a, 0x0e, 0x50, 0x6f,
	0x6f, 0x6c, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x79, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x76, 0x63, 0x5f, 0x72, 0x61, 0x6e, 0x6b,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x76, 0x63, 0x52, 0x61, 0x6e, 0x6b,
	0x73, 0x22, 0x29, 0x0a, 0x0f, 0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc0, 0x01, 0x0a,
	0x0c, 0x50, 0x6f, 0x6f, 0x6c, 0x45, 0x76, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x79, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x76, 0x63, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x08, 0x73, 0x76, 0x63, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x12, 0x23, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x22,
	0x3d, 0x0a, 0x0d, 0x50, 0x6f, 0x6f, 0x6c, 0x45, 0x76, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x81,
	0x01, 0x0a, 0x0e, 0x50, 0x6f, 0x6f, 0x6c, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x73, 0x79, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x69, 0x64, 0x78, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x69, 0x64, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x76, 0x63, 0x5f, 0x72, 0x61, 0x6e,
	0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x76, 0x63, 0x52, 0x61, 0x6e,
	0x6b, 0x73, 0x22, 0x29, 0x0a, 0x0f, 0x50, 0x6f, 0x6f, 0x6c, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7f, 0x0a,
	0x0c, 0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x79, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72,
	0x61, 0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x64, 0x78,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x64,
	0x78, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x76, 0x63, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x76, 0x63, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x22, 0x27,
	0x0a, 0x0d, 0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x0d, 0x50, 0x6f, 0x6f, 0x6c,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x79, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x79, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x61, 0x6e, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x6b,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x76, 0x63, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x76, 0x63, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x65, 0x72, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x09, 0x74, 0x69, 0x65, 0x72, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0c, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73,
	0x22, 0x47, 0x0a, 0x0e, 0x50, 0x6f, 0x6f, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69,
	0x65, 0x72, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x09,
	0x74, 0x69, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x12, 0x50, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x79, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x69, 0x64, 0x78, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x69, 0x64, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x76, 0x63, 0x5f, 0x72, 0x61, 0x6e, 0x6b,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x76, 0x63, 0x52, 0x61, 0x6e, 0x6b,
	0x73, 0x22, 0x2d, 0x0a, 0x13, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x20, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x79, 0x73, 0x22, 0xdd, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x05,
	0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x67,
	0x6d, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x05, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a,
	0x61, 0x0a, 0x04, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x76, 0x63, 0x5f, 0x72, 0x65, 0x70, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x76, 0x63, 0x52, 0x65, 0x70, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x4c, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x73, 0x79, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x76, 0x63, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x76, 0x63, 0x52, 0x61, 0x6e, 0x6b, 0x73,
	0x22, 0x7b, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x1a, 0x1a, 0x0a, 0x04, 0x43, 0x6f, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0xb7, 0x01,
	0x0a, 0x0c, 0x50, 0x6f, 0x6f, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x79, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x76, 0x63, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x76, 0x63, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x32, 0x0a,
	0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x61, 0x6e, 0x6b,
	0x73, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x14, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x66, 0x72, 0x65, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x65, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x6d, 0x65, 0x61, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x22, 0xbb,
	0x01, 0x0a, 0x11, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6d, 0x67,
	0x6d, 0x74, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x25, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f, 0x4e, 0x45,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x55, 0x53, 0x59, 0x10, 0x02, 0x22, 0xbf, 0x04, 0x0a,
	0x0d, 0x50, 0x6f, 0x6f, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x10,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x72, 0x65, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x07, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x74, 0x69,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x09, 0x74, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f,
	0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x61, 0x6e, 0x6b, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6c, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x70, 0x6f, 0x6f, 0x6c, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x56, 0x65, 0x72, 0x12, 0x2c, 0x0a,
	0x12, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x5f,
	0x76, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x75, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x56, 0x65, 0x72, 0x4a, 0x04, 0x08, 0x09, 0x10,
	0x0a, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x63,
	0x0a, 0x0c, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x76, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x18, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x00, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x76, 0x61, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x0e, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x79, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x79, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x76, 0x63, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x08, 0x73, 0x76, 0x63, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x22, 0x29, 0x0a, 0x0f, 0x50, 0x6f, 0x6f,
	0x6c, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x0e, 0x50, 0x6f, 0x6f, 0x6c, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x79, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x79, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x76, 0x63, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x08, 0x73, 0x76, 0x63, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x22, 0x5d, 0x0a, 0x0f, 0x50, 0x6f,
	0x6f, 0x6c, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x4f, 0x0a, 0x0e, 0x50, 0x6f, 0x6f,
	0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x79, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x76, 0x63, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x08, 0x73, 0x76, 0x63, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x22, 0x29, 0x0a, 0x0f, 0x50, 0x6f,
	0x6f, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61, 0x6f, 0x73, 0x2d, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x64,
	0x61, 0x6f, 0x73, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x67, 0x6d,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mgmt_pool_proto_rawDescOnce sync.Once
	file_mgmt_pool_proto_rawDescData = file_mgmt_pool_proto_rawDesc
)

func file_mgmt_pool_proto_rawDescGZIP() []byte {
	file_mgmt_pool_proto_rawDescOnce.Do(func() {
		file_mgmt_pool_proto_rawDescData = protoimpl.X.CompressGZIP(file_mgmt_pool_proto_rawDescData)
	})
	return file_mgmt_pool_proto_rawDescData
}

var file_mgmt_pool_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mgmt_pool_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_mgmt_pool_proto_goTypes = []interface{}{
	(PoolRebuildStatus_State)(0), // 0: mgmt.PoolRebuildStatus.State
	(*PoolCreateReq)(nil),        // 1: mgmt.PoolCreateReq
	(*PoolCreateResp)(nil),       // 2: mgmt.PoolCreateResp
	(*PoolDestroyReq)(nil),       // 3: mgmt.PoolDestroyReq
	(*PoolDestroyResp)(nil),      // 4: mgmt.PoolDestroyResp
	(*PoolEvictReq)(nil),         // 5: mgmt.PoolEvictReq
	(*PoolEvictResp)(nil),        // 6: mgmt.PoolEvictResp
	(*PoolExcludeReq)(nil),       // 7: mgmt.PoolExcludeReq
	(*PoolExcludeResp)(nil),      // 8: mgmt.PoolExcludeResp
	(*PoolDrainReq)(nil),         // 9: mgmt.PoolDrainReq
	(*PoolDrainResp)(nil),        // 10: mgmt.PoolDrainResp
	(*PoolExtendReq)(nil),        // 11: mgmt.PoolExtendReq
	(*PoolExtendResp)(nil),       // 12: mgmt.PoolExtendResp
	(*PoolReintegrateReq)(nil),   // 13: mgmt.PoolReintegrateReq
	(*PoolReintegrateResp)(nil),  // 14: mgmt.PoolReintegrateResp
	(*ListPoolsReq)(nil),         // 15: mgmt.ListPoolsReq
	(*ListPoolsResp)(nil),        // 16: mgmt.ListPoolsResp
	(*ListContReq)(nil),          // 17: mgmt.ListContReq
	(*ListContResp)(nil),         // 18: mgmt.ListContResp
	(*PoolQueryReq)(nil),         // 19: mgmt.PoolQueryReq
	(*StorageUsageStats)(nil),    // 20: mgmt.StorageUsageStats
	(*PoolRebuildStatus)(nil),    // 21: mgmt.PoolRebuildStatus
	(*PoolQueryResp)(nil),        // 22: mgmt.PoolQueryResp
	(*PoolProperty)(nil),         // 23: mgmt.PoolProperty
	(*PoolSetPropReq)(nil),       // 24: mgmt.PoolSetPropReq
	(*PoolSetPropResp)(nil),      // 25: mgmt.PoolSetPropResp
	(*PoolGetPropReq)(nil),       // 26: mgmt.PoolGetPropReq
	(*PoolGetPropResp)(nil),      // 27: mgmt.PoolGetPropResp
	(*PoolUpgradeReq)(nil),       // 28: mgmt.PoolUpgradeReq
	(*PoolUpgradeResp)(nil),      // 29: mgmt.PoolUpgradeResp
	(*ListPoolsResp_Pool)(nil),   // 30: mgmt.ListPoolsResp.Pool
	(*ListContResp_Cont)(nil),    // 31: mgmt.ListContResp.Cont
}
var file_mgmt_pool_proto_depIdxs = []int32{
	23, // 0: mgmt.PoolCreateReq.properties:type_name -> mgmt.PoolProperty
	30, // 1: mgmt.ListPoolsResp.pools:type_name -> mgmt.ListPoolsResp.Pool
	31, // 2: mgmt.ListContResp.containers:type_name -> mgmt.ListContResp.Cont
	0,  // 3: mgmt.PoolRebuildStatus.state:type_name -> mgmt.PoolRebuildStatus.State
	21, // 4: mgmt.PoolQueryResp.rebuild:type_name -> mgmt.PoolRebuildStatus
	20, // 5: mgmt.PoolQueryResp.tier_stats:type_name -> mgmt.StorageUsageStats
	23, // 6: mgmt.PoolSetPropReq.properties:type_name -> mgmt.PoolProperty
	23, // 7: mgmt.PoolGetPropReq.properties:type_name -> mgmt.PoolProperty
	23, // 8: mgmt.PoolGetPropResp.properties:type_name -> mgmt.PoolProperty
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_mgmt_pool_proto_init() }
func file_mgmt_pool_proto_init() {
	if File_mgmt_pool_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mgmt_pool_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolCreateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolDestroyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolDestroyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolEvictReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolEvictResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolExcludeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolExcludeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolDrainReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolDrainResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolExtendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolExtendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolReintegrateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolReintegrateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPoolsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPoolsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageUsageStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolRebuildStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolQueryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolSetPropReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolSetPropResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolGetPropReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolGetPropResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolUpgradeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolUpgradeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPoolsResp_Pool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mgmt_pool_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContResp_Cont); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mgmt_pool_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*PoolProperty_Strval)(nil),
		(*PoolProperty_Numval)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mgmt_pool_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mgmt_pool_proto_goTypes,
		DependencyIndexes: file_mgmt_pool_proto_depIdxs,
		EnumInfos:         file_mgmt_pool_proto_enumTypes,
		MessageInfos:      file_mgmt_pool_proto_msgTypes,
	}.Build()
	File_mgmt_pool_proto = out.File
	file_mgmt_pool_proto_rawDesc = nil
	file_mgmt_pool_proto_goTypes = nil
	file_mgmt_pool_proto_depIdxs = nil
}
