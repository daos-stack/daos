// Code generated by protoc-gen-go. DO NOT EDIT.
// source: acl.proto

package mgmt

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetACLReq struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetACLReq) Reset()         { *m = GetACLReq{} }
func (m *GetACLReq) String() string { return proto.CompactTextString(m) }
func (*GetACLReq) ProtoMessage()    {}
func (*GetACLReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_acl_0d5d9c26e3f1e88c, []int{0}
}
func (m *GetACLReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetACLReq.Unmarshal(m, b)
}
func (m *GetACLReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetACLReq.Marshal(b, m, deterministic)
}
func (dst *GetACLReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetACLReq.Merge(dst, src)
}
func (m *GetACLReq) XXX_Size() int {
	return xxx_messageInfo_GetACLReq.Size(m)
}
func (m *GetACLReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetACLReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetACLReq proto.InternalMessageInfo

func (m *GetACLReq) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type GetACLResp struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	ACL                  []string `protobuf:"bytes,2,rep,name=ACL,proto3" json:"ACL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetACLResp) Reset()         { *m = GetACLResp{} }
func (m *GetACLResp) String() string { return proto.CompactTextString(m) }
func (*GetACLResp) ProtoMessage()    {}
func (*GetACLResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_acl_0d5d9c26e3f1e88c, []int{1}
}
func (m *GetACLResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetACLResp.Unmarshal(m, b)
}
func (m *GetACLResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetACLResp.Marshal(b, m, deterministic)
}
func (dst *GetACLResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetACLResp.Merge(dst, src)
}
func (m *GetACLResp) XXX_Size() int {
	return xxx_messageInfo_GetACLResp.Size(m)
}
func (m *GetACLResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetACLResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetACLResp proto.InternalMessageInfo

func (m *GetACLResp) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetACLResp) GetACL() []string {
	if m != nil {
		return m.ACL
	}
	return nil
}

func init() {
	proto.RegisterType((*GetACLReq)(nil), "mgmt.GetACLReq")
	proto.RegisterType((*GetACLResp)(nil), "mgmt.GetACLResp")
}

func init() { proto.RegisterFile("acl.proto", fileDescriptor_acl_0d5d9c26e3f1e88c) }

var fileDescriptor_acl_0d5d9c26e3f1e88c = []byte{
	// 115 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x4c, 0xce, 0xd1,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9, 0x4d, 0xcf, 0x2d, 0x51, 0x92, 0xe7, 0xe2, 0x74,
	0x4f, 0x2d, 0x71, 0x74, 0xf6, 0x09, 0x4a, 0x2d, 0x14, 0x12, 0xe2, 0x62, 0x29, 0x2d, 0xcd, 0x4c,
	0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95, 0xcc, 0xb8, 0xb8, 0x60, 0x0a, 0x8a,
	0x0b, 0x84, 0xc4, 0xb8, 0xd8, 0x8a, 0x4b, 0x12, 0x4b, 0x4a, 0x8b, 0xc1, 0x6a, 0x58, 0x83, 0xa0,
	0x3c, 0x21, 0x01, 0x2e, 0x66, 0x47, 0x67, 0x1f, 0x09, 0x26, 0x05, 0x66, 0x0d, 0xce, 0x20, 0x10,
	0x33, 0x89, 0x0d, 0x6c, 0x8b, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xfb, 0xb5, 0x77, 0x83, 0x72,
	0x00, 0x00, 0x00,
}
