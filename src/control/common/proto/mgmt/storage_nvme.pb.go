// Code generated by protoc-gen-go. DO NOT EDIT.
// source: storage_nvme.proto

package mgmt

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// NvmeController represents an NVMe Controller (SSD).
type NvmeController struct {
	Model                string                      `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	Serial               string                      `protobuf:"bytes,2,opt,name=serial,proto3" json:"serial,omitempty"`
	Pciaddr              string                      `protobuf:"bytes,3,opt,name=pciaddr,proto3" json:"pciaddr,omitempty"`
	Fwrev                string                      `protobuf:"bytes,4,opt,name=fwrev,proto3" json:"fwrev,omitempty"`
	Namespaces           []*NvmeController_Namespace `protobuf:"bytes,5,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *NvmeController) Reset()         { *m = NvmeController{} }
func (m *NvmeController) String() string { return proto.CompactTextString(m) }
func (*NvmeController) ProtoMessage()    {}
func (*NvmeController) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_nvme_e989b96f94bc5fc5, []int{0}
}
func (m *NvmeController) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NvmeController.Unmarshal(m, b)
}
func (m *NvmeController) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NvmeController.Marshal(b, m, deterministic)
}
func (dst *NvmeController) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NvmeController.Merge(dst, src)
}
func (m *NvmeController) XXX_Size() int {
	return xxx_messageInfo_NvmeController.Size(m)
}
func (m *NvmeController) XXX_DiscardUnknown() {
	xxx_messageInfo_NvmeController.DiscardUnknown(m)
}

var xxx_messageInfo_NvmeController proto.InternalMessageInfo

func (m *NvmeController) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *NvmeController) GetSerial() string {
	if m != nil {
		return m.Serial
	}
	return ""
}

func (m *NvmeController) GetPciaddr() string {
	if m != nil {
		return m.Pciaddr
	}
	return ""
}

func (m *NvmeController) GetFwrev() string {
	if m != nil {
		return m.Fwrev
	}
	return ""
}

func (m *NvmeController) GetNamespaces() []*NvmeController_Namespace {
	if m != nil {
		return m.Namespaces
	}
	return nil
}

// Namespace represents a namespace created on an NvmeController.
type NvmeController_Namespace struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Capacity             int32    `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NvmeController_Namespace) Reset()         { *m = NvmeController_Namespace{} }
func (m *NvmeController_Namespace) String() string { return proto.CompactTextString(m) }
func (*NvmeController_Namespace) ProtoMessage()    {}
func (*NvmeController_Namespace) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_nvme_e989b96f94bc5fc5, []int{0, 0}
}
func (m *NvmeController_Namespace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NvmeController_Namespace.Unmarshal(m, b)
}
func (m *NvmeController_Namespace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NvmeController_Namespace.Marshal(b, m, deterministic)
}
func (dst *NvmeController_Namespace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NvmeController_Namespace.Merge(dst, src)
}
func (m *NvmeController_Namespace) XXX_Size() int {
	return xxx_messageInfo_NvmeController_Namespace.Size(m)
}
func (m *NvmeController_Namespace) XXX_DiscardUnknown() {
	xxx_messageInfo_NvmeController_Namespace.DiscardUnknown(m)
}

var xxx_messageInfo_NvmeController_Namespace proto.InternalMessageInfo

func (m *NvmeController_Namespace) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *NvmeController_Namespace) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

// NvmeControllerResult represents state of operation performed on controller.
type NvmeControllerResult struct {
	Pciaddr              string         `protobuf:"bytes,1,opt,name=pciaddr,proto3" json:"pciaddr,omitempty"`
	State                *ResponseState `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *NvmeControllerResult) Reset()         { *m = NvmeControllerResult{} }
func (m *NvmeControllerResult) String() string { return proto.CompactTextString(m) }
func (*NvmeControllerResult) ProtoMessage()    {}
func (*NvmeControllerResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_nvme_e989b96f94bc5fc5, []int{1}
}
func (m *NvmeControllerResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NvmeControllerResult.Unmarshal(m, b)
}
func (m *NvmeControllerResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NvmeControllerResult.Marshal(b, m, deterministic)
}
func (dst *NvmeControllerResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NvmeControllerResult.Merge(dst, src)
}
func (m *NvmeControllerResult) XXX_Size() int {
	return xxx_messageInfo_NvmeControllerResult.Size(m)
}
func (m *NvmeControllerResult) XXX_DiscardUnknown() {
	xxx_messageInfo_NvmeControllerResult.DiscardUnknown(m)
}

var xxx_messageInfo_NvmeControllerResult proto.InternalMessageInfo

func (m *NvmeControllerResult) GetPciaddr() string {
	if m != nil {
		return m.Pciaddr
	}
	return ""
}

func (m *NvmeControllerResult) GetState() *ResponseState {
	if m != nil {
		return m.State
	}
	return nil
}

type ScanNvmeReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScanNvmeReq) Reset()         { *m = ScanNvmeReq{} }
func (m *ScanNvmeReq) String() string { return proto.CompactTextString(m) }
func (*ScanNvmeReq) ProtoMessage()    {}
func (*ScanNvmeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_nvme_e989b96f94bc5fc5, []int{2}
}
func (m *ScanNvmeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanNvmeReq.Unmarshal(m, b)
}
func (m *ScanNvmeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanNvmeReq.Marshal(b, m, deterministic)
}
func (dst *ScanNvmeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanNvmeReq.Merge(dst, src)
}
func (m *ScanNvmeReq) XXX_Size() int {
	return xxx_messageInfo_ScanNvmeReq.Size(m)
}
func (m *ScanNvmeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanNvmeReq.DiscardUnknown(m)
}

var xxx_messageInfo_ScanNvmeReq proto.InternalMessageInfo

type FormatNvmeReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FormatNvmeReq) Reset()         { *m = FormatNvmeReq{} }
func (m *FormatNvmeReq) String() string { return proto.CompactTextString(m) }
func (*FormatNvmeReq) ProtoMessage()    {}
func (*FormatNvmeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_nvme_e989b96f94bc5fc5, []int{3}
}
func (m *FormatNvmeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormatNvmeReq.Unmarshal(m, b)
}
func (m *FormatNvmeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormatNvmeReq.Marshal(b, m, deterministic)
}
func (dst *FormatNvmeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormatNvmeReq.Merge(dst, src)
}
func (m *FormatNvmeReq) XXX_Size() int {
	return xxx_messageInfo_FormatNvmeReq.Size(m)
}
func (m *FormatNvmeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FormatNvmeReq.DiscardUnknown(m)
}

var xxx_messageInfo_FormatNvmeReq proto.InternalMessageInfo

type UpdateNvmeReq struct {
	Model                string   `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	Startrev             string   `protobuf:"bytes,2,opt,name=startrev,proto3" json:"startrev,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Slot                 int32    `protobuf:"varint,4,opt,name=slot,proto3" json:"slot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateNvmeReq) Reset()         { *m = UpdateNvmeReq{} }
func (m *UpdateNvmeReq) String() string { return proto.CompactTextString(m) }
func (*UpdateNvmeReq) ProtoMessage()    {}
func (*UpdateNvmeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_nvme_e989b96f94bc5fc5, []int{4}
}
func (m *UpdateNvmeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNvmeReq.Unmarshal(m, b)
}
func (m *UpdateNvmeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNvmeReq.Marshal(b, m, deterministic)
}
func (dst *UpdateNvmeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNvmeReq.Merge(dst, src)
}
func (m *UpdateNvmeReq) XXX_Size() int {
	return xxx_messageInfo_UpdateNvmeReq.Size(m)
}
func (m *UpdateNvmeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNvmeReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNvmeReq proto.InternalMessageInfo

func (m *UpdateNvmeReq) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *UpdateNvmeReq) GetStartrev() string {
	if m != nil {
		return m.Startrev
	}
	return ""
}

func (m *UpdateNvmeReq) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *UpdateNvmeReq) GetSlot() int32 {
	if m != nil {
		return m.Slot
	}
	return 0
}

// TODO: provide facility to supply FIO config in params
type BurninNvmeReq struct {
	Fioconfig            *FilePath `protobuf:"bytes,1,opt,name=fioconfig,proto3" json:"fioconfig,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BurninNvmeReq) Reset()         { *m = BurninNvmeReq{} }
func (m *BurninNvmeReq) String() string { return proto.CompactTextString(m) }
func (*BurninNvmeReq) ProtoMessage()    {}
func (*BurninNvmeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_nvme_e989b96f94bc5fc5, []int{5}
}
func (m *BurninNvmeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BurninNvmeReq.Unmarshal(m, b)
}
func (m *BurninNvmeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BurninNvmeReq.Marshal(b, m, deterministic)
}
func (dst *BurninNvmeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BurninNvmeReq.Merge(dst, src)
}
func (m *BurninNvmeReq) XXX_Size() int {
	return xxx_messageInfo_BurninNvmeReq.Size(m)
}
func (m *BurninNvmeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BurninNvmeReq.DiscardUnknown(m)
}

var xxx_messageInfo_BurninNvmeReq proto.InternalMessageInfo

func (m *BurninNvmeReq) GetFioconfig() *FilePath {
	if m != nil {
		return m.Fioconfig
	}
	return nil
}

func init() {
	proto.RegisterType((*NvmeController)(nil), "mgmt.NvmeController")
	proto.RegisterType((*NvmeController_Namespace)(nil), "mgmt.NvmeController.Namespace")
	proto.RegisterType((*NvmeControllerResult)(nil), "mgmt.NvmeControllerResult")
	proto.RegisterType((*ScanNvmeReq)(nil), "mgmt.ScanNvmeReq")
	proto.RegisterType((*FormatNvmeReq)(nil), "mgmt.FormatNvmeReq")
	proto.RegisterType((*UpdateNvmeReq)(nil), "mgmt.UpdateNvmeReq")
	proto.RegisterType((*BurninNvmeReq)(nil), "mgmt.BurninNvmeReq")
}

func init() { proto.RegisterFile("storage_nvme.proto", fileDescriptor_storage_nvme_e989b96f94bc5fc5) }

var fileDescriptor_storage_nvme_e989b96f94bc5fc5 = []byte{
	// 355 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0xc1, 0x6e, 0xe2, 0x30,
	0x10, 0x55, 0x80, 0xb0, 0x30, 0xd9, 0xb0, 0x92, 0x17, 0xad, 0xa2, 0x1c, 0x56, 0x28, 0x27, 0x56,
	0x5a, 0xe5, 0x40, 0x0f, 0x3d, 0xb5, 0x87, 0x56, 0xe2, 0x88, 0x2a, 0xa3, 0x9e, 0x7a, 0xa8, 0xdc,
	0x64, 0x00, 0x4b, 0xb1, 0x9d, 0xda, 0x03, 0x55, 0xbf, 0xb8, 0xbf, 0x51, 0xc5, 0x21, 0x14, 0x0e,
	0xbd, 0xcd, 0x7b, 0x33, 0x9e, 0x79, 0xef, 0xc9, 0xc0, 0x1c, 0x19, 0x2b, 0xb6, 0xf8, 0xac, 0x0f,
	0x0a, 0xf3, 0xda, 0x1a, 0x32, 0x6c, 0xa0, 0xb6, 0x8a, 0xd2, 0x9f, 0x85, 0x51, 0xca, 0xe8, 0x96,
	0xcb, 0x3e, 0x02, 0x98, 0xac, 0x0e, 0x0a, 0xef, 0x8d, 0x26, 0x6b, 0xaa, 0x0a, 0x2d, 0x9b, 0x42,
	0xa8, 0x4c, 0x89, 0x55, 0x12, 0xcc, 0x82, 0xf9, 0x98, 0xb7, 0x80, 0xfd, 0x81, 0xa1, 0x43, 0x2b,
	0x45, 0x95, 0xf4, 0x3c, 0x7d, 0x44, 0x2c, 0x81, 0x1f, 0x75, 0x21, 0x45, 0x59, 0xda, 0xa4, 0xef,
	0x1b, 0x1d, 0x6c, 0xf6, 0x6c, 0xde, 0x2c, 0x1e, 0x92, 0x41, 0xbb, 0xc7, 0x03, 0x76, 0x0b, 0xa0,
	0x85, 0x42, 0x57, 0x8b, 0x02, 0x5d, 0x12, 0xce, 0xfa, 0xf3, 0x68, 0xf1, 0x37, 0x6f, 0x94, 0xe5,
	0x97, 0x3a, 0xf2, 0x55, 0x37, 0xc6, 0xcf, 0x5e, 0xa4, 0xd7, 0x30, 0x3e, 0x35, 0xd8, 0x04, 0x7a,
	0xb2, 0xf4, 0x3a, 0x43, 0xde, 0x93, 0x25, 0x4b, 0x61, 0x54, 0x88, 0x5a, 0x14, 0x92, 0xde, 0xbd,
	0xcc, 0x90, 0x9f, 0x70, 0xf6, 0x04, 0xd3, 0xcb, 0x03, 0x1c, 0xdd, 0xbe, 0xa2, 0x73, 0x03, 0xc1,
	0xa5, 0x81, 0x7f, 0x10, 0x3a, 0x12, 0x84, 0x7e, 0x55, 0xb4, 0xf8, 0xdd, 0xaa, 0xe4, 0xe8, 0x6a,
	0xa3, 0x1d, 0xae, 0x9b, 0x16, 0x6f, 0x27, 0xb2, 0x18, 0xa2, 0x75, 0x21, 0x74, 0x73, 0x80, 0xe3,
	0x6b, 0xf6, 0x0b, 0xe2, 0xa5, 0xb1, 0x4a, 0x50, 0x47, 0x48, 0x88, 0x1f, 0xeb, 0x52, 0x10, 0x1e,
	0x89, 0x6f, 0x42, 0x4e, 0x61, 0xe4, 0x48, 0x58, 0x6a, 0x52, 0x6b, 0x63, 0x3e, 0x61, 0xc6, 0x60,
	0x50, 0x0b, 0xda, 0x1d, 0x53, 0xf6, 0x75, 0xc3, 0xb9, 0xca, 0x90, 0x4f, 0x38, 0xe4, 0xbe, 0xce,
	0x6e, 0x20, 0xbe, 0xdb, 0x5b, 0x2d, 0x3b, 0x31, 0xec, 0x3f, 0x8c, 0x37, 0xd2, 0x14, 0x46, 0x6f,
	0xe4, 0xd6, 0x9f, 0x8b, 0x16, 0x93, 0xd6, 0xca, 0x52, 0x56, 0xf8, 0x20, 0x68, 0xc7, 0xbf, 0x06,
	0x5e, 0x86, 0xfe, 0x5f, 0x5c, 0x7d, 0x06, 0x00, 0x00, 0xff, 0xff, 0xe6, 0xb7, 0x7b, 0x99, 0x41,
	0x02, 0x00, 0x00,
}
