// Code generated by MockGen. DO NOT EDIT.
// Source: pool_query.go

// Package main is a generated GoMock package.
package main

import (
	reflect "reflect"
	unsafe "unsafe"

	gomock "github.com/golang/mock/gomock"
)

/*
#include <gurt/common.h>
#include <daos_pool.h>
*/
import "C"

// MockMockDAOSInterface is a mock of MockDAOSInterface interface.
type MockMockDAOSInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMockDAOSInterfaceMockRecorder
}

// MockMockDAOSInterfaceMockRecorder is the mock recorder for MockMockDAOSInterface.
type MockMockDAOSInterfaceMockRecorder struct {
	mock *MockMockDAOSInterface
}

// NewMockMockDAOSInterface creates a new mock instance.
func NewMockMockDAOSInterface(ctrl *gomock.Controller) *MockMockDAOSInterface {
	mock := &MockMockDAOSInterface{ctrl: ctrl}
	mock.recorder = &MockMockDAOSInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMockDAOSInterface) EXPECT() *MockMockDAOSInterfaceMockRecorder {
	return m.recorder
}

// d_rank_list_free mocks base method.
func (m *MockMockDAOSInterface) d_rank_list_free(rl *C.d_rank_list_t) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "d_rank_list_free", rl)
}

// d_rank_list_free indicates an expected call of d_rank_list_free.
func (mr *MockMockDAOSInterfaceMockRecorder) d_rank_list_free(rl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "d_rank_list_free", reflect.TypeOf((*MockMockDAOSInterface)(nil).d_rank_list_free), rl)
}

// daos_pool_query mocks base method.
func (m *MockMockDAOSInterface) daos_pool_query(poolHdl C.daos_handle_t, rlPtr *C.d_rank_list_t, poolInfo C.daos_pool_info_t, arg3, arg4 unsafe.Pointer) C.int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "daos_pool_query", poolHdl, rlPtr, poolInfo, arg3, arg4)
	ret0, _ := ret[0].(C.int)
	return ret0
}

// daos_pool_query indicates an expected call of daos_pool_query.
func (mr *MockMockDAOSInterfaceMockRecorder) daos_pool_query(poolHdl, rlPtr, poolInfo, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "daos_pool_query", reflect.TypeOf((*MockMockDAOSInterface)(nil).daos_pool_query), poolHdl, rlPtr, poolInfo, arg3, arg4)
}
