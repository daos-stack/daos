// Code generated by protoc-gen-go. DO NOT EDIT.
// source: drpc.proto

package drpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// *
// Status represents the valid values for a response status.
type Status int32

const (
	Status_SUCCESS         Status = 0
	Status_SUBMITTED       Status = 1
	Status_FAILURE         Status = 2
	Status_UNKNOWN_MODULE  Status = 3
	Status_UNKNOWN_METHOD  Status = 4
	Status_INVALID_MESSAGE Status = 5
	Status_INVALID_PAYLOAD Status = 6
	Status_FAILED_MARSHAL  Status = 7
)

var Status_name = map[int32]string{
	0: "SUCCESS",
	1: "SUBMITTED",
	2: "FAILURE",
	3: "UNKNOWN_MODULE",
	4: "UNKNOWN_METHOD",
	5: "INVALID_MESSAGE",
	6: "INVALID_PAYLOAD",
	7: "FAILED_MARSHAL",
}
var Status_value = map[string]int32{
	"SUCCESS":         0,
	"SUBMITTED":       1,
	"FAILURE":         2,
	"UNKNOWN_MODULE":  3,
	"UNKNOWN_METHOD":  4,
	"INVALID_MESSAGE": 5,
	"INVALID_PAYLOAD": 6,
	"FAILED_MARSHAL":  7,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_drpc_f8879a841151fe85, []int{0}
}

// *
// Call describes a function call to be executed over the dRPC channel.
type Call struct {
	Module               int32    `protobuf:"varint,1,opt,name=module,proto3" json:"module,omitempty"`
	Method               int32    `protobuf:"varint,2,opt,name=method,proto3" json:"method,omitempty"`
	Sequence             int64    `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Body                 []byte   `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Call) Reset()         { *m = Call{} }
func (m *Call) String() string { return proto.CompactTextString(m) }
func (*Call) ProtoMessage()    {}
func (*Call) Descriptor() ([]byte, []int) {
	return fileDescriptor_drpc_f8879a841151fe85, []int{0}
}
func (m *Call) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Call.Unmarshal(m, b)
}
func (m *Call) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Call.Marshal(b, m, deterministic)
}
func (dst *Call) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Call.Merge(dst, src)
}
func (m *Call) XXX_Size() int {
	return xxx_messageInfo_Call.Size(m)
}
func (m *Call) XXX_DiscardUnknown() {
	xxx_messageInfo_Call.DiscardUnknown(m)
}

var xxx_messageInfo_Call proto.InternalMessageInfo

func (m *Call) GetModule() int32 {
	if m != nil {
		return m.Module
	}
	return 0
}

func (m *Call) GetMethod() int32 {
	if m != nil {
		return m.Method
	}
	return 0
}

func (m *Call) GetSequence() int64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *Call) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

// *
// Response describes the result of a dRPC call.
type Response struct {
	Sequence             int64    `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Status               Status   `protobuf:"varint,2,opt,name=status,proto3,enum=drpc.Status" json:"status,omitempty"`
	Body                 []byte   `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_drpc_f8879a841151fe85, []int{1}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetSequence() int64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *Response) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_SUCCESS
}

func (m *Response) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func init() {
	proto.RegisterType((*Call)(nil), "drpc.Call")
	proto.RegisterType((*Response)(nil), "drpc.Response")
	proto.RegisterEnum("drpc.Status", Status_name, Status_value)
}

func init() { proto.RegisterFile("drpc.proto", fileDescriptor_drpc_f8879a841151fe85) }

var fileDescriptor_drpc_f8879a841151fe85 = []byte{
	// 282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xbd, 0x4e, 0xc3, 0x30,
	0x1c, 0xc4, 0x71, 0x93, 0xa6, 0xe5, 0x4f, 0x29, 0x96, 0x91, 0x50, 0xc4, 0x54, 0x55, 0x0c, 0x15,
	0x43, 0x07, 0x78, 0x02, 0x13, 0x1b, 0x1a, 0x91, 0x0f, 0x64, 0x27, 0x20, 0xa6, 0xd0, 0x36, 0x46,
	0x0c, 0xa1, 0x0e, 0x4d, 0x32, 0xf0, 0x24, 0xbc, 0x2e, 0x8a, 0x89, 0x0a, 0x65, 0xbb, 0xfb, 0x9d,
	0xcf, 0x67, 0x19, 0x20, 0xdf, 0x96, 0xeb, 0x79, 0xb9, 0xd5, 0xb5, 0x26, 0x76, 0xab, 0xa7, 0xaf,
	0x60, 0x7b, 0xcb, 0xa2, 0x20, 0x67, 0xe0, 0xbc, 0xeb, 0xbc, 0x29, 0x94, 0x8b, 0x26, 0x68, 0xd6,
	0x17, 0x9d, 0x33, 0x5c, 0xd5, 0x6f, 0x3a, 0x77, 0x7b, 0x1d, 0x37, 0x8e, 0x9c, 0xc3, 0xb0, 0x52,
	0x1f, 0x8d, 0xda, 0xac, 0x95, 0x6b, 0x4d, 0xd0, 0xcc, 0x12, 0x3b, 0x4f, 0x08, 0xd8, 0x2b, 0x9d,
	0x7f, 0xba, 0xf6, 0x04, 0xcd, 0x46, 0xc2, 0xe8, 0xe9, 0x0b, 0x0c, 0x85, 0xaa, 0x4a, 0xbd, 0xa9,
	0xd4, 0x5e, 0x17, 0xfd, 0xeb, 0x5e, 0x80, 0x53, 0xd5, 0xcb, 0xba, 0xa9, 0xcc, 0xde, 0xf8, 0x6a,
	0x34, 0x37, 0x4f, 0x96, 0x86, 0x89, 0x2e, 0xdb, 0x2d, 0x58, 0xbf, 0x0b, 0x97, 0x5f, 0x08, 0x9c,
	0x9f, 0x63, 0xe4, 0x08, 0x06, 0x32, 0xf5, 0x3c, 0x2e, 0x25, 0x3e, 0x20, 0xc7, 0x70, 0x28, 0xd3,
	0x9b, 0xd0, 0x4f, 0x12, 0xce, 0x30, 0x6a, 0xb3, 0x5b, 0xea, 0x07, 0xa9, 0xe0, 0xb8, 0x47, 0x08,
	0x8c, 0xd3, 0xe8, 0x3e, 0x8a, 0x9f, 0xa2, 0x2c, 0x8c, 0x59, 0x1a, 0x70, 0x6c, 0xed, 0x31, 0x9e,
	0x2c, 0x62, 0x86, 0x6d, 0x72, 0x0a, 0x27, 0x7e, 0xf4, 0x48, 0x03, 0x9f, 0x65, 0x21, 0x97, 0x92,
	0xde, 0x71, 0xdc, 0xff, 0x0b, 0x1f, 0xe8, 0x73, 0x10, 0x53, 0x86, 0x9d, 0xb6, 0xdd, 0x5e, 0xcf,
	0x59, 0x16, 0x52, 0x21, 0x17, 0x34, 0xc0, 0x83, 0x95, 0x63, 0x3e, 0xfc, 0xfa, 0x3b, 0x00, 0x00,
	0xff, 0xff, 0x82, 0x83, 0x79, 0xe4, 0x7e, 0x01, 0x00, 0x00,
}
