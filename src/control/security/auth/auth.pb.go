// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Authentication token includes a packed structure of the specified flavor
type Flavor int32

const (
	Flavor_AUTH_NONE Flavor = 0
	Flavor_AUTH_SYS  Flavor = 1
)

var Flavor_name = map[int32]string{
	0: "AUTH_NONE",
	1: "AUTH_SYS",
}
var Flavor_value = map[string]int32{
	"AUTH_NONE": 0,
	"AUTH_SYS":  1,
}

func (x Flavor) String() string {
	return proto.EnumName(Flavor_name, int32(x))
}
func (Flavor) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_auth_dfe1082ee37e915b, []int{0}
}

type Token struct {
	Flavor               Flavor   `protobuf:"varint,1,opt,name=flavor,proto3,enum=auth.Flavor" json:"flavor,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_dfe1082ee37e915b, []int{0}
}
func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (dst *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(dst, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetFlavor() Flavor {
	if m != nil {
		return m.Flavor
	}
	return Flavor_AUTH_NONE
}

func (m *Token) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Token structure for AUTH_SYS flavor
type Sys struct {
	Stamp                uint64   `protobuf:"varint,1,opt,name=stamp,proto3" json:"stamp,omitempty"`
	Machinename          string   `protobuf:"bytes,2,opt,name=machinename,proto3" json:"machinename,omitempty"`
	Uid                  uint32   `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid                  uint32   `protobuf:"varint,4,opt,name=gid,proto3" json:"gid,omitempty"`
	Gids                 []uint32 `protobuf:"varint,5,rep,packed,name=gids,proto3" json:"gids,omitempty"`
	Secctx               string   `protobuf:"bytes,6,opt,name=secctx,proto3" json:"secctx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sys) Reset()         { *m = Sys{} }
func (m *Sys) String() string { return proto.CompactTextString(m) }
func (*Sys) ProtoMessage()    {}
func (*Sys) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_dfe1082ee37e915b, []int{1}
}
func (m *Sys) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sys.Unmarshal(m, b)
}
func (m *Sys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sys.Marshal(b, m, deterministic)
}
func (dst *Sys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sys.Merge(dst, src)
}
func (m *Sys) XXX_Size() int {
	return xxx_messageInfo_Sys.Size(m)
}
func (m *Sys) XXX_DiscardUnknown() {
	xxx_messageInfo_Sys.DiscardUnknown(m)
}

var xxx_messageInfo_Sys proto.InternalMessageInfo

func (m *Sys) GetStamp() uint64 {
	if m != nil {
		return m.Stamp
	}
	return 0
}

func (m *Sys) GetMachinename() string {
	if m != nil {
		return m.Machinename
	}
	return ""
}

func (m *Sys) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *Sys) GetGid() uint32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *Sys) GetGids() []uint32 {
	if m != nil {
		return m.Gids
	}
	return nil
}

func (m *Sys) GetSecctx() string {
	if m != nil {
		return m.Secctx
	}
	return ""
}

type SysVerifier struct {
	Signature            []byte   `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SysVerifier) Reset()         { *m = SysVerifier{} }
func (m *SysVerifier) String() string { return proto.CompactTextString(m) }
func (*SysVerifier) ProtoMessage()    {}
func (*SysVerifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_dfe1082ee37e915b, []int{2}
}
func (m *SysVerifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SysVerifier.Unmarshal(m, b)
}
func (m *SysVerifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SysVerifier.Marshal(b, m, deterministic)
}
func (dst *SysVerifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SysVerifier.Merge(dst, src)
}
func (m *SysVerifier) XXX_Size() int {
	return xxx_messageInfo_SysVerifier.Size(m)
}
func (m *SysVerifier) XXX_DiscardUnknown() {
	xxx_messageInfo_SysVerifier.DiscardUnknown(m)
}

var xxx_messageInfo_SysVerifier proto.InternalMessageInfo

func (m *SysVerifier) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// SecurityCredential includes the auth token and a verifier that can be used by
// the server to verify the integrity of the token.
// Token and verifier are expected to have the same flavor type.
type Credential struct {
	Token                *Token   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Verifier             *Token   `protobuf:"bytes,2,opt,name=verifier,proto3" json:"verifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Credential) Reset()         { *m = Credential{} }
func (m *Credential) String() string { return proto.CompactTextString(m) }
func (*Credential) ProtoMessage()    {}
func (*Credential) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_dfe1082ee37e915b, []int{3}
}
func (m *Credential) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Credential.Unmarshal(m, b)
}
func (m *Credential) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Credential.Marshal(b, m, deterministic)
}
func (dst *Credential) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Credential.Merge(dst, src)
}
func (m *Credential) XXX_Size() int {
	return xxx_messageInfo_Credential.Size(m)
}
func (m *Credential) XXX_DiscardUnknown() {
	xxx_messageInfo_Credential.DiscardUnknown(m)
}

var xxx_messageInfo_Credential proto.InternalMessageInfo

func (m *Credential) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *Credential) GetVerifier() *Token {
	if m != nil {
		return m.Verifier
	}
	return nil
}

func init() {
	proto.RegisterType((*Token)(nil), "auth.Token")
	proto.RegisterType((*Sys)(nil), "auth.Sys")
	proto.RegisterType((*SysVerifier)(nil), "auth.SysVerifier")
	proto.RegisterType((*Credential)(nil), "auth.Credential")
	proto.RegisterEnum("auth.Flavor", Flavor_name, Flavor_value)
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor_auth_dfe1082ee37e915b) }

var fileDescriptor_auth_dfe1082ee37e915b = []byte{
	// 295 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x51, 0x4d, 0x4b, 0xc3, 0x30,
	0x18, 0xb6, 0xf6, 0x83, 0xed, 0x6d, 0x27, 0xe3, 0x45, 0x24, 0x07, 0x0f, 0xb5, 0x28, 0x16, 0x85,
	0x1d, 0xe6, 0x2f, 0x18, 0xa2, 0x78, 0x9a, 0x90, 0x4e, 0xd1, 0x93, 0xc4, 0x25, 0xeb, 0x82, 0x5b,
	0x3b, 0x92, 0x6c, 0xb8, 0x1f, 0xe1, 0x7f, 0x96, 0xbe, 0x2d, 0x2a, 0xde, 0x9e, 0xaf, 0x3e, 0x4d,
	0x9e, 0x00, 0x88, 0xad, 0x5b, 0x8e, 0x36, 0xa6, 0x76, 0x35, 0x06, 0x0d, 0xce, 0x26, 0x10, 0xce,
	0xea, 0x0f, 0x55, 0xe1, 0x39, 0x44, 0x8b, 0x95, 0xd8, 0xd5, 0x86, 0x79, 0xa9, 0x97, 0x1f, 0x8d,
	0x93, 0x11, 0x65, 0xef, 0x49, 0xe3, 0x9d, 0x87, 0x08, 0x81, 0x14, 0x4e, 0xb0, 0xc3, 0xd4, 0xcb,
	0x13, 0x4e, 0x38, 0xfb, 0xf2, 0xc0, 0x2f, 0xf6, 0x16, 0x8f, 0x21, 0xb4, 0x4e, 0xac, 0x37, 0x54,
	0x10, 0xf0, 0x96, 0x60, 0x0a, 0xf1, 0x5a, 0xcc, 0x97, 0xba, 0x52, 0x95, 0x58, 0x2b, 0xfa, 0xb0,
	0xcf, 0xff, 0x4a, 0x38, 0x04, 0x7f, 0xab, 0x25, 0xf3, 0x53, 0x2f, 0x1f, 0xf0, 0x06, 0x36, 0x4a,
	0xa9, 0x25, 0x0b, 0x5a, 0xa5, 0xd4, 0xb2, 0xf9, 0x6f, 0xa9, 0xa5, 0x65, 0x61, 0xea, 0xe7, 0x03,
	0x4e, 0x18, 0x4f, 0x20, 0xb2, 0x6a, 0x3e, 0x77, 0x9f, 0x2c, 0xa2, 0xd2, 0x8e, 0x65, 0xd7, 0x10,
	0x17, 0x7b, 0xfb, 0xac, 0x8c, 0x5e, 0x68, 0x65, 0xf0, 0x14, 0xfa, 0x56, 0x97, 0x95, 0x70, 0x5b,
	0xa3, 0xe8, 0x68, 0x09, 0xff, 0x15, 0xb2, 0x17, 0x80, 0x5b, 0xa3, 0xa4, 0xaa, 0x9c, 0x16, 0x2b,
	0x3c, 0x83, 0xd0, 0x35, 0x6b, 0x50, 0x2e, 0x1e, 0xc7, 0xed, 0x06, 0x34, 0x10, 0x6f, 0x1d, 0xbc,
	0x84, 0xde, 0xae, 0xab, 0xa6, 0xcb, 0xfc, 0x4b, 0xfd, 0x98, 0x57, 0x17, 0x10, 0xb5, 0xe3, 0xe1,
	0x00, 0xfa, 0x93, 0xa7, 0xd9, 0xc3, 0xdb, 0xf4, 0x71, 0x7a, 0x37, 0x3c, 0xc0, 0x04, 0x7a, 0x44,
	0x8b, 0xd7, 0x62, 0xe8, 0xbd, 0x47, 0xf4, 0x1a, 0x37, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd8,
	0x39, 0x88, 0xb8, 0x9b, 0x01, 0x00, 0x00,
}
