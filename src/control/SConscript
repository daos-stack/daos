#!/bin/env python
"""Build DAOS Control Plane"""
#pylint: disable=no-member
#pylint: disable=invalid-sequence-index
from SCons.Script import Literal
import os
import daos_build

def scons():
    """Execute build"""
    Import('env', 'prereqs')

    env.AppendUnique(LIBPATH=[Dir('.')])

    denv = env.Clone()
    prereqs.require(denv, 'spdk')

    gopath = "%s/build/control" % Dir('#').abspath
    gosrc = "%s/src/control" % Dir('#').abspath

    if os.path.isdir(gopath) is False:
        os.makedirs(gopath)
    if os.path.isdir("%s/src" % gopath) is False:
        os.symlink(gosrc, "%s/src" % gopath)

    denv.Append(GOPATH=[gopath])
    denv.AppendENVPath('GOPATH', denv['GOPATH'])
    denv['ENV']['GOBIN'] = "%s/bin" % gopath

    agentbin = "%s/bin/agent" % gopath
    agentsrc = "%s/agent/daos_agent.go" % gosrc
    denv.Command(agentbin, agentsrc, "go install agent")
    denv.InstallAs("$PREFIX/bin/daos_agent", agentbin)

    gonvmepath = "%s/go-spdk/nvme" % gosrc

    # CGO prerequisite libs for nvme
    denv.AppendUnique(CPPPATH=['%s/include' % gonvmepath])
    nvmecontrol = daos_build.library(
        denv, "nvme_control",
        '%s/src/nvme_control.c' % gonvmepath,
        LIBS=['spdk'])
    nc_installed = denv.Install('$PREFIX/lib', nvmecontrol)

    # CGO shell env vars.
    denv.AppendENVPath(
        "CGO_LDFLAGS",
        denv.subst("-L$SPDK_PREFIX/lib -L$PREFIX/lib $_RPATH"))
    denv.AppendENVPath(
        "CGO_CFLAGS",
        denv.subst("-I$SPDK_PREFIX/include"))

    # install management server db
    modulemgmt = "%s/modules/mgmt" % gosrc
    mgmtinitdb = "mgmtinit_db.json"
    denv.InstallAs(
        os.path.join("$PREFIX/share/control", mgmtinitdb),
        os.path.join(modulemgmt, mgmtinitdb))

    serverbin = "%s/bin/server" % gopath
    serversrc = "%s/server/daos_server.go" % gosrc
    denv.Command(serverbin, [serversrc, nc_installed], "go install server")
    denv.InstallAs("$PREFIX/bin/daos_server", serverbin)

    shellbin = "%s/bin/shell" % gopath
    shellsrc = "%s/shell/DAOSShell.go" % gosrc
    denv.Command(shellbin, shellsrc, "go install shell")
    denv.InstallAs("$PREFIX/bin/DAOSShell", shellbin)

if __name__ == "SCons.Script":
    scons()
