"""Build tests"""
import daos_build

def scons():
    """Execute build"""
    Import('env', 'prereqs')

    if not prereqs.server_requested():
        return

    denv = env.Clone()

    libs = ['vos', 'daos_common_pmem', 'abt', 'gurt', 'uuid', 'bio']
    src = ['ddb_cmd_options.c',
           'ddb_commands.c',
           'ddb_main.c',
           'ddb_parse.c',
           'ddb_printer.c',
           'ddb_vos.c']

    ddblib = denv.StaticObject(src)
    Export('ddblib')

    # Add runtime paths for daos libraries
    denv.AppendUnique(RPATH_FULL=['$PREFIX/lib64/daos_srv'])
    denv.AppendUnique(RPATH_FULL=['$PREFIX/lib64'])

    denv.Append(CPPDEFINES={'DAOS_PMEM_BUILD': '1'})

    # Because ddb is so heavily dependent on VOS, allow it to have some internal
    # knowledge of it.
    denv.AppendUnique(CPPPATH=[Dir('../vos/').srcnode()])
    denv.AppendUnique(CPPPATH=[Dir('../vos/')])

    prereqs.require(denv, 'argobots', 'protobufc', 'pmdk')

    ddb = daos_build.program(denv, 'ddb', ['ddb_entry.c', ddblib], LIBS=libs)

    denv.Install('$PREFIX/bin/', ddb)

    # tests
    SConscript('tests/SConscript', exports=['denv'])


if __name__ == "SCons.Script":
    scons()
