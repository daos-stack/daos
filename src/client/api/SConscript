"""Build DAOS client"""
import daos_build

LIBDAOS_SRC = ['agent.c', 'array.c', 'container.c', 'event.c', 'init.c', 'job.c', 'kv.c', 'mgmt.c',
               'object.c', 'pool.c', 'rpc.c', 'task.c', 'tx.c']

def scons():
    """Execute build"""
    Import('env', 'base_env', 'API_VERSION', 'prereqs', 'common_lib')

    env.AppendUnique(LIBPATH=[Dir('.')])
    base_env.AppendUnique(LIBPATH=[Dir('.')])
    denv = env.Clone()
    prereqs.require(denv, 'protobufc')
    libdaos_tgts = denv.SharedObject(LIBDAOS_SRC)
    Import('dc_pool_tgts', 'dc_co_tgts', 'dc_obj_tgts', 'dc_placement_tgts')
    Import('dc_mgmt_tgts', 'dc_array_tgts', 'dc_kv_tgts', 'dc_security_tgts')
    libdaos_tgts += dc_pool_tgts + dc_co_tgts + dc_placement_tgts + dc_obj_tgts
    libdaos_tgts += dc_mgmt_tgts + dc_array_tgts + dc_kv_tgts + dc_security_tgts
    Export('libdaos_tgts')

    if prereqs.client_requested():
        libdaos= daos_build.library(env, 'daos', libdaos_tgts,
                                     SHLIBVERSION=API_VERSION,
                                     LIBS=['daos_common'])
        env.Requires(libdaos, common_lib)
        if hasattr(env, 'InstallVersionedLib'):
            env.InstallVersionedLib('$PREFIX/lib64/', libdaos,
                                    SHLIBVERSION=API_VERSION)
        else:
            env.Install('$PREFIX/lib64/', libdaos)
        check_libs = ['daos', 'gurt', 'uuid']
        compile_check = daos_build.test(denv, ["compile_check.c"], LIBS=check_libs)
        compile_check_cpp = daos_build.test(denv, ["compile_check_cpp.cpp"], LIBS=check_libs)
        denv.Requires(compile_check, libdaos)
        denv.Requires(compile_check_cpp, libdaos)


    if prereqs.test_requested():
        SConscript('tests/SConscript', exports='denv')

if __name__ == "SCons.Script":
    scons()
