"""Build pydaos client"""
import daos_build
import distutils.sysconfig

def build_shim_module(py_env, svars, lib_prefix, version):
    """Build PyDAOS shim module for the specified python version"""

    new_env = py_env.Clone()
    extra_flags = ""

    if version == "2.7":
        tgt_name = 'pydaos_shim_27'
        base_name = 'pydaos_shim_27'
        new_env.ParseConfig("pkg-config --cflags --libs python2")
    elif version == "3":
        tgt_name = 'pydaos_shim_3'
        base_name = 'pydaos_shim_3'
        extra_flags = " -D__USE_PYTHON3__==1"
        new_env.ParseConfig("pkg-config --cflags --libs python3")
    else:
        print("Unsupported python version %s" % version)
        return

    obj = new_env.SharedObject(tgt_name, 'pydaos_shim.c',
                               LIBS=['daos'],
                               CC=svars["CC"],
                               SHLINK=svars["LDSHARED"],
                               SHLINKFLAGS=[],
                               SHLIBPREFIX="",
                               SHLIBSUFFIX=svars["SO"],
                               CPPFLAGS=svars["BASECFLAGS"] + " " + \
                               svars["OPT"] + " " + extra_flags)
    base = daos_build.library(new_env, target=base_name, source=[obj],
                              LIBS=['daos'],
                              CC=svars["CC"],
                              SHLINK=svars["LDSHARED"],
                              SHLINKFLAGS=[],
                              SHLIBPREFIX="",
                              SHLIBSUFFIX=svars["SO"],
                              CPPFLAGS=svars["BASECFLAGS"] + " " + \
                              svars["OPT"] + " " + extra_flags)
    install_path = lib_prefix + "/python" + version + "/site-packages"
    new_env.Install(install_path, base)
    # For new wrappers, once available
    # new_env.Install(install_path, "pydaos.py")

def scons():
    """Execute build"""
    Import('env')

    svars = {}
    for item in ['CC', 'OPT', 'BASECFLAGS', 'LDSHARED', 'SO']:
        svars[item] = distutils.sysconfig.get_config_var(item)
        if svars[item] is None:
            svars[item] = ""

    py_env = env.Clone()

    build_shim_module(py_env, svars, '$PREFIX/lib/', "2.7")
    build_shim_module(py_env, svars, '$PREFIX/lib/', "3")

if __name__ == "SCons.Script":
    scons()
