// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DaosObjectAttribute.proto

package io.daos.obj.attr;

/**
 * Protobuf enum {@code objattr.DaosObjSchema}
 */
public enum DaosObjSchema
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   **&lt; Single stripe object 
   * </pre>
   *
   * <code>DAOS_OS_SINGLE = 0;</code>
   */
  DAOS_OS_SINGLE(0),
  /**
   * <pre>
   **&lt; Fix striped object 
   * </pre>
   *
   * <code>DAOS_OS_STRIPED = 1;</code>
   */
  DAOS_OS_STRIPED(1),
  /**
   * <pre>
   **&lt; Dynamically striped object 
   * </pre>
   *
   * <code>DAOS_OS_DYN_STRIPED = 2;</code>
   */
  DAOS_OS_DYN_STRIPED(2),
  /**
   * <pre>
   **&lt; Dynamically chunked object 
   * </pre>
   *
   * <code>DAOS_OS_DYN_CHUNKED = 3;</code>
   */
  DAOS_OS_DYN_CHUNKED(3),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   **&lt; Single stripe object 
   * </pre>
   *
   * <code>DAOS_OS_SINGLE = 0;</code>
   */
  public static final int DAOS_OS_SINGLE_VALUE = 0;
  /**
   * <pre>
   **&lt; Fix striped object 
   * </pre>
   *
   * <code>DAOS_OS_STRIPED = 1;</code>
   */
  public static final int DAOS_OS_STRIPED_VALUE = 1;
  /**
   * <pre>
   **&lt; Dynamically striped object 
   * </pre>
   *
   * <code>DAOS_OS_DYN_STRIPED = 2;</code>
   */
  public static final int DAOS_OS_DYN_STRIPED_VALUE = 2;
  /**
   * <pre>
   **&lt; Dynamically chunked object 
   * </pre>
   *
   * <code>DAOS_OS_DYN_CHUNKED = 3;</code>
   */
  public static final int DAOS_OS_DYN_CHUNKED_VALUE = 3;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static DaosObjSchema valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static DaosObjSchema forNumber(int value) {
    switch (value) {
      case 0: return DAOS_OS_SINGLE;
      case 1: return DAOS_OS_STRIPED;
      case 2: return DAOS_OS_DYN_STRIPED;
      case 3: return DAOS_OS_DYN_CHUNKED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<DaosObjSchema>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      DaosObjSchema> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<DaosObjSchema>() {
          public DaosObjSchema findValueByNumber(int number) {
            return DaosObjSchema.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.daos.obj.attr.DaosObjAttrClasses.getDescriptor().getEnumTypes().get(0);
  }

  private static final DaosObjSchema[] VALUES = values();

  public static DaosObjSchema valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private DaosObjSchema(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:objattr.DaosObjSchema)
}

