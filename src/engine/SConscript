"""Build DAOS I/O Engine"""
import daos_build

def scons():
    """Execute build"""
    Import('env', 'prereqs', 'libdaos_tgts')

    if not prereqs.server_requested():
        return

    denv = env.Clone()

    denv.Append(CPPDEFINES=['-DDAOS_PMEM_BUILD'])
    libraries = ['daos_common_pmem', 'gurt', 'cart', 'vos_srv']
    libraries += ['bio', 'dl', 'uuid', 'pthread', 'abt']
    libraries += ['hwloc', 'pmemobj', 'protobuf-c', 'isal']

    prereqs.require(denv, 'hwloc', 'argobots', 'protobufc', 'pmdk', 'isal')

    # the "-rdynamic" is to allow other dll to refer symbol defined in
    # daos_engine such as dss_tls_key etc.
    denv.AppendUnique(LINKFLAGS=['-rdynamic'])

    # Add runtime paths for daos libraries
    denv.AppendUnique(RPATH_FULL=['$PREFIX/lib64/daos_srv'])

    # Generate I/O Engine program
    engine = daos_build.program(denv, 'daos_engine',
                                ['drpc_client.c', 'drpc_ras.c',
                                 'drpc_handler.c', 'drpc_listener.c',
                                 'drpc_progress.c', 'init.c', 'module.c',
                                 'srv_cli.c', 'profile.c', 'rpc.c',
                                 'server_iv.c', 'srv.c', 'srv.pb-c.c', 'tls.c',
                                 'sched.c', 'ult.c', 'event.pb-c.c',
                                 'srv_metrics.c'] + libdaos_tgts,
                                LIBS=libraries)
    denv.Install('$PREFIX/bin', engine)

    if prereqs.test_requested():
        SConscript('tests/SConscript', exports='denv')

if __name__ == "SCons.Script":
    scons()
