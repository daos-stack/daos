/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: srv.proto */

#ifndef PROTOBUF_C_srv_2eproto__INCLUDED
#define PROTOBUF_C_srv_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Srv__NotifyReadyReq Srv__NotifyReadyReq;
typedef struct _Srv__BioErrorReq Srv__BioErrorReq;
typedef struct _Srv__GetPoolSvcReq Srv__GetPoolSvcReq;
typedef struct _Srv__GetPoolSvcResp Srv__GetPoolSvcResp;


/* --- enums --- */


/* --- messages --- */

struct  _Srv__NotifyReadyReq
{
  ProtobufCMessage base;
  /*
   * CaRT URI
   */
  char *uri;
  /*
   * Number of CaRT contexts
   */
  uint32_t nctxs;
  /*
   * Path to IO server's dRPC listener socket
   */
  char *drpclistenersock;
  /*
   * IO server instance index
   */
  uint32_t instanceidx;
  /*
   * number of VOS targets allocated in IO server
   */
  uint32_t ntgts;
};
#define SRV__NOTIFY_READY_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&srv__notify_ready_req__descriptor) \
    , (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, 0, 0 }


struct  _Srv__BioErrorReq
{
  ProtobufCMessage base;
  /*
   * unmap I/O error
   */
  protobuf_c_boolean unmaperr;
  /*
   * read I/O error
   */
  protobuf_c_boolean readerr;
  /*
   * write I/O error
   */
  protobuf_c_boolean writeerr;
  /*
   * VOS target ID
   */
  int32_t tgtid;
  /*
   * IO server instance index
   */
  uint32_t instanceidx;
  /*
   * Path to IO server's dRPC listener socket
   */
  char *drpclistenersock;
  /*
   * CaRT URI
   */
  char *uri;
};
#define SRV__BIO_ERROR_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&srv__bio_error_req__descriptor) \
    , 0, 0, 0, 0, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _Srv__GetPoolSvcReq
{
  ProtobufCMessage base;
  /*
   * Pool UUID
   */
  char *uuid;
};
#define SRV__GET_POOL_SVC_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&srv__get_pool_svc_req__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Srv__GetPoolSvcResp
{
  ProtobufCMessage base;
  /*
   * DAOS error code
   */
  int32_t status;
  /*
   * Pool service replica ranks
   */
  size_t n_svcreps;
  uint32_t *svcreps;
};
#define SRV__GET_POOL_SVC_RESP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&srv__get_pool_svc_resp__descriptor) \
    , 0, 0,NULL }


/* Srv__NotifyReadyReq methods */
void   srv__notify_ready_req__init
                     (Srv__NotifyReadyReq         *message);
size_t srv__notify_ready_req__get_packed_size
                     (const Srv__NotifyReadyReq   *message);
size_t srv__notify_ready_req__pack
                     (const Srv__NotifyReadyReq   *message,
                      uint8_t             *out);
size_t srv__notify_ready_req__pack_to_buffer
                     (const Srv__NotifyReadyReq   *message,
                      ProtobufCBuffer     *buffer);
Srv__NotifyReadyReq *
       srv__notify_ready_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   srv__notify_ready_req__free_unpacked
                     (Srv__NotifyReadyReq *message,
                      ProtobufCAllocator *allocator);
/* Srv__BioErrorReq methods */
void   srv__bio_error_req__init
                     (Srv__BioErrorReq         *message);
size_t srv__bio_error_req__get_packed_size
                     (const Srv__BioErrorReq   *message);
size_t srv__bio_error_req__pack
                     (const Srv__BioErrorReq   *message,
                      uint8_t             *out);
size_t srv__bio_error_req__pack_to_buffer
                     (const Srv__BioErrorReq   *message,
                      ProtobufCBuffer     *buffer);
Srv__BioErrorReq *
       srv__bio_error_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   srv__bio_error_req__free_unpacked
                     (Srv__BioErrorReq *message,
                      ProtobufCAllocator *allocator);
/* Srv__GetPoolSvcReq methods */
void   srv__get_pool_svc_req__init
                     (Srv__GetPoolSvcReq         *message);
size_t srv__get_pool_svc_req__get_packed_size
                     (const Srv__GetPoolSvcReq   *message);
size_t srv__get_pool_svc_req__pack
                     (const Srv__GetPoolSvcReq   *message,
                      uint8_t             *out);
size_t srv__get_pool_svc_req__pack_to_buffer
                     (const Srv__GetPoolSvcReq   *message,
                      ProtobufCBuffer     *buffer);
Srv__GetPoolSvcReq *
       srv__get_pool_svc_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   srv__get_pool_svc_req__free_unpacked
                     (Srv__GetPoolSvcReq *message,
                      ProtobufCAllocator *allocator);
/* Srv__GetPoolSvcResp methods */
void   srv__get_pool_svc_resp__init
                     (Srv__GetPoolSvcResp         *message);
size_t srv__get_pool_svc_resp__get_packed_size
                     (const Srv__GetPoolSvcResp   *message);
size_t srv__get_pool_svc_resp__pack
                     (const Srv__GetPoolSvcResp   *message,
                      uint8_t             *out);
size_t srv__get_pool_svc_resp__pack_to_buffer
                     (const Srv__GetPoolSvcResp   *message,
                      ProtobufCBuffer     *buffer);
Srv__GetPoolSvcResp *
       srv__get_pool_svc_resp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   srv__get_pool_svc_resp__free_unpacked
                     (Srv__GetPoolSvcResp *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Srv__NotifyReadyReq_Closure)
                 (const Srv__NotifyReadyReq *message,
                  void *closure_data);
typedef void (*Srv__BioErrorReq_Closure)
                 (const Srv__BioErrorReq *message,
                  void *closure_data);
typedef void (*Srv__GetPoolSvcReq_Closure)
                 (const Srv__GetPoolSvcReq *message,
                  void *closure_data);
typedef void (*Srv__GetPoolSvcResp_Closure)
                 (const Srv__GetPoolSvcResp *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor srv__notify_ready_req__descriptor;
extern const ProtobufCMessageDescriptor srv__bio_error_req__descriptor;
extern const ProtobufCMessageDescriptor srv__get_pool_svc_req__descriptor;
extern const ProtobufCMessageDescriptor srv__get_pool_svc_resp__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_srv_2eproto__INCLUDED */
