"""Build versioned object store"""
import os
import daos_build

FILES = ["evt_iter.c", "vos_common.c", "vos_iterator.c", "vos_obj.c",
         "vos_pool.c", "vos_aggregate.c", "vos_container.c", "vos_io.c",
         "vos_obj_cache.c", "vos_obj_index.c", "vos_tree.c", "evtree.c",
         "vos_dtx.c", "vos_dtx_cos.c", "vos_query.c", "vos_overhead.c",
         "vos_dtx_iter.c", "vos_gc.c"]

def build_vos(env, standalone):
    """build vos"""
    denv = env.Clone()

    if standalone:
        denv.Append(CPPDEFINES={'VOS_STANDALONE' : '1'})
        denv.Append(OBJPREFIX="s_")
        install = 'lib'
        libname = 'vos'
    else:
        install = 'lib/daos_srv'
        libname = 'vos_srv'

    files = FILES
    if GetOption("preprocess"):
        #For profileing performance, it can sometimes be useful to preprocess
        #the files first.   This uses the new scons_local feature to do this
        #so profiling tools will point at preprocessed file lines.
        files = denv.Preprocess(FILES)

    vos = daos_build.library(denv, libname, files, LIBS=['vea'])
    denv.Install('$PREFIX/' + install, vos)

def scons():
    """Execute build"""
    Import('env', 'prereqs')

    env.AppendUnique(LIBPATH=[Dir('.')])

    denv = env.Clone()

    prereqs.require(denv, 'pmdk', 'argobots', 'protobufc', 'hwloc')

    # Compiler options
    denv.Append(CPPPATH=[Dir('.').srcnode()])

    build_vos(denv, False)
    build_vos(denv, True)

    SConscript('tests/SConscript', exports='denv')

if __name__ == "SCons.Script":
    scons()
