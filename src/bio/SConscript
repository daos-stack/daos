"""Build blob I/O"""
import os
import daos_build

def build_bio(env, standalone, control_tgts):
    """build bio"""
    denv = env.Clone()

    if standalone:
        denv.Append(CPPDEFINES={'BIO_STANDALONE' : '1'})
        denv.Append(OBJPREFIX="s_")
        name = 'bio'
    else:
        name = 'bio_srv'

    # SPDK related libs
    libs = ['spdk_env_dpdk', 'spdk_thread', 'spdk_bdev', 'spdk_copy']
    libs += ['rte_mempool', 'rte_mempool_ring', 'rte_bus_pci']
    libs += ['rte_pci', 'rte_ring', 'rte_mbuf', 'rte_eal', 'rte_kvargs']
    libs += ['spdk_bdev_aio', 'spdk_bdev_nvme', 'spdk_bdev_malloc']
    libs += ['spdk_conf', 'spdk_blob', 'spdk_nvme', 'spdk_util']
    libs += ['spdk_json', 'spdk_jsonrpc', 'spdk_rpc', 'spdk_trace']
    libs += ['spdk_sock', 'spdk_log', 'spdk_notify', 'spdk_blob_bdev']
    libs += ['spdk_vmd', 'spdk_event', 'spdk_event_bdev', 'spdk_event_copy']
    libs += ['spdk_event_vmd']

    # Other libs
    libs += ['numa', 'dl', 'smd']

    tgts = Glob('*.c') + control_tgts
    bio = daos_build.library(denv, name, tgts, install_off="../..", LIBS=libs)
    denv.Install('$PREFIX/lib64/daos_srv', bio)

def scons():
    """Execute build"""
    Import('env', 'prereqs', 'control_tgts')

    env.AppendUnique(LIBPATH=[Dir('.')])

    denv = env.Clone()
    denv.AppendUnique(LINKFLAGS=["-Wl,--no-as-needed"])
    denv.Append(CPPDEFINES=['-DDAOS_PMEM_BUILD'])
    prereqs.require(denv, 'pmdk', 'spdk', 'argobots', 'protobufc', 'hwloc')

    SConscript('smd/SConscript')
    denv.AppendUnique(LIBPATH=['smd'])
    denv.AppendUnique(OBJPREFIX='b_')

    build_bio(denv, False, control_tgts)
    build_bio(denv, True, control_tgts)

if __name__ == "SCons.Script":
    scons()
