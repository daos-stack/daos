"""Build security library"""


def scons():
    """Execute build"""
    Import('env', 'prereqs', 'libdaos_tgts')

    env.AppendUnique(LIBPATH=[Dir('.')])
    denv = env.Clone()

    denv.require('protobufc', 'argobots')

    sec_obj = denv.SharedObject('cli_security.c')
    auth_obj = denv.SharedObject('auth.pb-c.c')
    srv_acl_obj = denv.SharedObject('srv_acl.c')
    acl_obj = denv.SharedObject('acl.c')

    # dc_security: Security Client
    dc_security_tgts = [sec_obj, auth_obj, acl_obj]
    libdaos_tgts.extend(dc_security_tgts)

    # pylint: disable-next=unused-variable
    acl_tgts = [auth_obj, srv_acl_obj, acl_obj]

    if not prereqs.server_requested():
        return

    denv.AppendUnique(LIBS=['gurt'])
    ds_sec = denv.d_library('security', ['srv.c', srv_acl_obj, acl_obj], install_off="../..")
    denv.Install('$PREFIX/lib64/daos_srv', ds_sec)

    dc_sectest_tgts = [srv_acl_obj, acl_obj, sec_obj, auth_obj]
    Export('dc_sectest_tgts')

    if prereqs.test_requested():
        SConscript('tests/SConscript', exports=['denv', 'dc_security_tgts', 'acl_tgts'])


if __name__ == "SCons.Script":
    scons()
