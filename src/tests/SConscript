"""Build tests"""
import daos_build
import os

def scons():
    """Execute build"""
    Import('env', 'prereqs')

    libs = ['daos', 'daos_common', 'gurt', 'cart', 'uuid', 'cmocka',
            'daos_tests']

    denv = env.Clone()

    if not GetOption('help') and not GetOption('clean'):
        mpi = daos_build.configure_mpi(denv, libs)
        if mpi is None:
            print("\nSkipping compilation for tests that need MPI")
            print("Install and load mpich or openmpi\n")
            return

    # Add runtime paths for daos libraries
    denv.AppendUnique(RPATH_FULL=['$PREFIX/lib64/daos_srv'])

    denv.Append(CPPPATH=[Dir('suite').srcnode()])
    prereqs.require(denv, 'argobots', 'hwloc', 'protobufc')

    daos_build.program(denv, 'simple_array', 'simple_array.c', LIBS=libs)
    libs += ['vos', 'bio', 'pthread', 'abt']

    dts_common = denv.Object('dts_common.c')
    daos_perf = daos_build.program(denv, 'daos_perf',
                                   ['daos_perf.c', dts_common],
                                   LIBS=libs)
    denv.Install('$PREFIX/bin/', daos_perf)

    daos_racer = daos_build.program(denv, 'daos_racer',
                                    ['daos_racer.c', dts_common],
                                    LIBS=libs)
    denv.Install('$PREFIX/bin/', daos_racer)

    obj_ctl = daos_build.program(denv, 'obj_ctl', ['obj_ctl.c', dts_common],
                                 LIBS=libs)
    denv.Install('$PREFIX/bin/', obj_ctl)

    # tests
    SConscript('suite/SConscript', exports=['denv'])

    # Build drpc_test
    SConscript('drpc/SConscript')

    # Build security_test
    SConscript('security/SConscript')

    # ftest
    SConscript('ftest/SConscript')

if __name__ == "SCons.Script":
    scons()
