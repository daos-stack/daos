/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: drpc_test.proto */

#ifndef PROTOBUF_C_drpc_5ftest_2eproto__INCLUDED
#define PROTOBUF_C_drpc_5ftest_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Hello__Hello Hello__Hello;
typedef struct _Hello__HelloResponse Hello__HelloResponse;


/* --- enums --- */

typedef enum _Hello__Module {
  HELLO__MODULE__HELLO = 0
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(HELLO__MODULE)
} Hello__Module;
typedef enum _Hello__Function {
  HELLO__FUNCTION__GREETING = 0
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(HELLO__FUNCTION)
} Hello__Function;

/* --- messages --- */

struct  _Hello__Hello
{
  ProtobufCMessage base;
  char *name;
};
#define HELLO__HELLO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hello__hello__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Hello__HelloResponse
{
  ProtobufCMessage base;
  char *greeting;
};
#define HELLO__HELLO_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hello__hello_response__descriptor) \
    , (char *)protobuf_c_empty_string }


/* Hello__Hello methods */
void   hello__hello__init
                     (Hello__Hello         *message);
size_t hello__hello__get_packed_size
                     (const Hello__Hello   *message);
size_t hello__hello__pack
                     (const Hello__Hello   *message,
                      uint8_t             *out);
size_t hello__hello__pack_to_buffer
                     (const Hello__Hello   *message,
                      ProtobufCBuffer     *buffer);
Hello__Hello *
       hello__hello__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hello__hello__free_unpacked
                     (Hello__Hello *message,
                      ProtobufCAllocator *allocator);
/* Hello__HelloResponse methods */
void   hello__hello_response__init
                     (Hello__HelloResponse         *message);
size_t hello__hello_response__get_packed_size
                     (const Hello__HelloResponse   *message);
size_t hello__hello_response__pack
                     (const Hello__HelloResponse   *message,
                      uint8_t             *out);
size_t hello__hello_response__pack_to_buffer
                     (const Hello__HelloResponse   *message,
                      ProtobufCBuffer     *buffer);
Hello__HelloResponse *
       hello__hello_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hello__hello_response__free_unpacked
                     (Hello__HelloResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Hello__Hello_Closure)
                 (const Hello__Hello *message,
                  void *closure_data);
typedef void (*Hello__HelloResponse_Closure)
                 (const Hello__HelloResponse *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    hello__module__descriptor;
extern const ProtobufCEnumDescriptor    hello__function__descriptor;
extern const ProtobufCMessageDescriptor hello__hello__descriptor;
extern const ProtobufCMessageDescriptor hello__hello_response__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_drpc_5ftest_2eproto__INCLUDED */
