hosts:
  test_servers: 3
  test_clients: 1
timeout: 700
server_config:
  name: daos_server
  engines_per_host: 2
  engines:
    0:
      pinned_numa_node: 0
      nr_xs_helpers: 1
      fabric_iface: ib0
      fabric_iface_port: 31317
      log_file: daos_server0.log
      storage: auto
    1:
      pinned_numa_node: 1
      nr_xs_helpers: 1
      fabric_iface: ib1
      fabric_iface_port: 31417
      log_file: daos_server1.log
      storage: auto
dmg:
  dmg_sub_command: storage
  storage:
    storage_sub_command: scan
pool_1:
  scm_size: 256MiB
  nvme_size: 16GiB
pool_2:
  scm_size: 10GiB
  nvme_size: 50GiB
pool_3:
  size: 90%
container_1:
  properties: cksum:crc16,cksum_size:16384,srv_cksum:on
  control_method: daos
container_2:
  type: POSIX
  properties: cksum:crc16,cksum_size:16384,srv_cksum:on
  control_method: daos
  oclass: RP_2GX
container_3:
  type: POSIX
  properties: cksum:crc16,cksum_size:16384,srv_cksum:on
  control_method: daos
  oclass: EC_2P2GX

pool:
  size: 40%
container:
  type: POSIX
  properties: cksum:crc16,cksum_size:16384,srv_cksum:on
  control_method: daos

# We only need to set the user and group, so use "root", which should exist on most systems
container_set_owner:
  user: root
  group: root

largefilecount:
  api:
    - MPIIO
    - POSIX
    - HDF5
    - HDF5-VOL
    - DFS
  object_class:
    ior_oclass:          # Run once with SX and then with EC_16P2GX
      - SX
      - EC_2P1GX
    mdtest_oclass:       # Run once with S1 and then with EC_16P2G1
      - S1
      - EC_2P1G1
ior:
  client_processes:
    ppn: 30
  dfs_destroy: False
  flags: "-v -D 300 -W -w -k"
  test_file: daos:testFile
  repetitions: 1
  signature: 123
  transfer_size: '1Mib'
  block_size: '1Mib'
dfuse:
  disable_caching: True
  enable_local_flock: true

mdtest:
  client_processes:
    ppn: 30
  num_of_files_dirs: 100      # creating total of 1M files
  test_dir: "/"
  iteration: 1
  dfs_destroy: False
  manager: "MPICH"
  flags: "-F -C"
  write_bytes: 4096
  read_bytes: 4096
  depth: 0
dcp:
  bufsize: "64MB"
  chunksize: "128MB"
  client_processes:
    np: 16
hdf5_vol:
  plugin_path: /usr/lib64/mpich/lib

io_sys_admin:
  steps_to_run:
    pool_create_ownership: True
    storage_system_query: True
    io: True
    snapshot: True
    datamover: True
