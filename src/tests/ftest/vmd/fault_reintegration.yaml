hosts:
  test_servers: 2
  test_clients: 1
# If we define the server under test_servers, launch.py will convert it to the
# actual server name passed into --test_servers. If above test_servers is hosts,
# it'll be used as one of the servers at test startup time, so use something
# other than hosts.
timeout: 1000
setup:
  start_servers_once: false
#provider: ofi+tcp;ofi_rxm
server_config:
  name: daos_server
  engines_per_host: 2
  engines:
    0:
      pinned_numa_node: 0
      nr_xs_helpers: 1
      fabric_iface: ib0
      fabric_iface_port: 31317
      log_file: daos_server0.log
      env_vars:
      - DD_MASK=all
      - D_LOG_MASK=DEBUG
      storage:
        0:
          class: dcpm
          scm_list: ["/dev/pmem0"]
          scm_mount: /mnt/daos0
        1:
          class: nvme
          bdev_list: ["aaaa:aa:aa.a"]
          bdev_class: nvme
    1:
      pinned_numa_node: 1
      nr_xs_helpers: 1
      fabric_iface: ib1
      fabric_iface_port: 31417
      log_file: daos_server1.log
      storage:
        0:
          class: dcpm
          scm_list: ["/dev/pmem1"]
          scm_mount: /mnt/daos1
        1:
          class: nvme
          bdev_list: ["bbbb:bb:bb.b"]
          bdev_class: nvm
pool:
  size: 90%
  svcn: 3
  control_method: dmg
  rebuild_timeout: 120
  pool_query_timeout: 30
container:
  type: POSIX
  control_method: daos
  properties: cksum:crc16,cksum_size:16384,srv_cksum:on,rd_fac:2
  file_oclass: RP_3G1
  dir_oclass: RP_3G1
ior:
  client_processes:
    np: 48
  test_file: /testFile
  repetitions: 10
  dfs_destroy: false
  iorflags:
    write_flags: "-w -F -k -G 1"
    read_flags: "-F -r -R -k -G 1"
    api: DFS
    dfs_oclass: RP_3G1
    dfs_dir_oclass: RP_3G1
    ior_test_sequence:
      #   - [scm_size, nvme_size, transfersize, blocksize]
      #    The values are set to be in the multiples of 10.
      - [50000000000, 300000000000, 4000, 5000000]          # [4K, 5M]
aggregation:
  test_with_aggregation: true
rebuild:
  test_with_rebuild: true
