hosts:
  test_servers: server-[1-2]
  test_clients: 1
extra_servers:
  test_servers: server-3
timeout: 1100
setup:
  start_servers_once: false
skip_add_log_msg: true
server_config:
  name: daos_server
  engines_per_host: 2
  servers:
    0:
      pinned_numa_node: 0
      nr_xs_helpers: 1
      fabric_iface: ib0
      fabric_iface_port: 31416
      log_file: daos_server0.log
      bdev_class: nvme
      bdev_list: ["0000:81:00.0"]
      scm_class: dcpm
      scm_list: ["/dev/pmem0"]
      scm_mount: /mnt/daos0
      log_mask: DEBUG,MEM=ERR
      env_vars:
        - DD_MASK=mgmt,md,rebuild
    1:
      pinned_numa_node: 1
      nr_xs_helpers: 1
      fabric_iface: ib1
      fabric_iface_port: 31516
      log_file: daos_server1.log
      bdev_class: nvme
      bdev_list: ["0000:da:00.0"]
      scm_class: dcpm
      scm_list: ["/dev/pmem1"]
      scm_mount: /mnt/daos1
      log_mask: DEBUG,MEM=ERR
      env_vars:
        - DD_MASK=mgmt,md,rebuild
pool:
  scm_size: 6000000000
  nvme_size: 54000000000
  svcn: 2
  control_method: dmg
container:
  type: POSIX
  control_method: daos
  oclass: RP_2G1
  properties: cksum:crc64,cksum_size:16384,srv_cksum:on,rf:1
ior:
  clientslots:
    slots: 48
  test_file: /testFile
  repetitions: 2
  dfs_destroy: false
  iorflags:
    write_flags: "-w -F -k -G 1"
    read_flags: "-F -r -R -k -G 1"
    api: DFS
    dfs_oclass: RP_2G1
    dfs_dir_oclass: RP_2G1
  ior_test_sequence:
  #   - [scmsize, nvmesize, transfersize, blocksize]
  #    The values are set to be in the multiples of 10.
  #    Values are appx GB.
    - [6000000000, 54000000000, 500000, 500000000]
mdtest:
  api: DFS
  client_processes:
    np: 2
  num_of_files_dirs: 100
  test_dir: "/"
  iteration: 1
  dfs_destroy: false
  dfs_oclass: RP_2G1
  dfs_dir_oclass: RP_2G1
  manager: "MPICH"
  flags: "-u"
  wr_size:
    32K:
      write_bytes: 32768
      read_bytes: 32768
  verbosity_value: 1
  depth: 0
test_obj_class:
  oclass:
    - RP_2G8
    - EC_2P1G1
loop_test:
  iterations: 3
aggregation:
  test_with_aggregation: true
rebuild:
  test_with_rebuild: true
checksum:
  test_with_checksum: false
snapshot:
  test_with_snapshot: true
test_ranks:
  rank_list: ["4", "5"]
