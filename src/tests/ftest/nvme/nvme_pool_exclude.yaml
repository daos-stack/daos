hosts:
  test_servers:
    - server-A
    - server-B
    - server-C
    - server-D
    - server-E
  test_clients:
    - client-F
    - client-G
    - client-H
# If we define the server under test_servers, launch.py will convert it to the
# actual server name passed into --test_servers. If above test_servers is hosts,
# it'll be used as one of the servers at test startup time, so use something
# other than hosts.
timeout: 1000
server_config:
    servers_per_host: 2
    name: daos_server
    servers:
      0:
        pinned_numa_node: 0
        nr_xs_helpers: 1
        fabric_iface: ib0
        fabric_iface_port: 31416
        log_file: daos_server0.log
        bdev_class: nvme
        bdev_list: ["0000:81:00.0"]
        scm_class: dcpm
        scm_list: ["/dev/pmem0"]
        scm_mount: /mnt/daos0
        log_mask: ERR
      1:
        pinned_numa_node: 1
        nr_xs_helpers: 1
        fabric_iface: ib1
        fabric_iface_port: 31516
        log_file: daos_server1.log
        bdev_class: nvme
        bdev_list: ["0000:da:00.0"]
        scm_class: dcpm
        scm_list: ["/dev/pmem1"]
        scm_mount: /mnt/daos1
        log_mask: ERR
pool:
    mode: 146
    name: daos_server
    scm_size: 100000000000
    nvme_size: 700000000000
    svcn: 4
    control_method: dmg
container:
    type: POSIX
    control_method: daos
    oclass: RP_2G1
    properties: cksum:crc64,cksum_size:16384,srv_cksum:on
ior:
    clientslots:
      slots: 48
    test_file: /testFile
    repetitions: 1
    dfs_destroy: False
    iorflags:
      write_flags: "-w -F -k -G 1"
      read_flags: "-r -R -k -G 1"
      ior_api:
        - DFS
      obj_class:
        - "RP_2G1"
    ior_test_sequence:
    #   - [transfersize, blocksize]
    #    The values are set to be in the multiples of 10.
    #    Values are appx GB.
        - [4000, 50000000]          #[4K, 51M]
        - [1000000, 500000000]      #[1M, 512M]
        - [1000000000, 8000000000]  #[1G, 8G]
