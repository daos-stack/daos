hosts:
  test_servers: server-[1-2]
  test_clients: 2
# If we define the server under test_servers, launch.py will convert it to the
# actual server name passed into --test_servers. If above test_servers is hosts,
# it'll be used as one of the servers at test startup time, so use something
# other than hosts.
extra_servers:
  test_servers: server-[3-5]
timeout: 1000
setup:
  start_servers_once: False
server_config:
    engines_per_host: 2
    name: daos_server
    servers:
      0:
        pinned_numa_node: 0
        nr_xs_helpers: 1
        fabric_iface: ib0
        fabric_iface_port: 31416
        log_file: daos_server0.log
        bdev_class: nvme
        bdev_list: ["0000:81:00.0"]
        scm_class: dcpm
        scm_list: ["/dev/pmem0"]
        scm_mount: /mnt/daos0
      1:
        pinned_numa_node: 1
        nr_xs_helpers: 1
        fabric_iface: ib1
        fabric_iface_port: 31516
        log_file: daos_server1.log
        bdev_class: nvme
        bdev_list: ["0000:da:00.0"]
        scm_class: dcpm
        scm_list: ["/dev/pmem1"]
        scm_mount: /mnt/daos1
pool:
  mode: 146
  name: daos_server
  scm_size: 5000000000
  nvme_size: 30000000000
  svcn: 4
  control_method: dmg
  rebuild_timeout: 120
  pool_query_timeout: 30
container:
    type: POSIX
    control_method: daos
    properties: cksum:crc16,cksum_size:16384,srv_cksum:on,rf:1
    oclass: RP_2G8
ior:
  client_processes:
    np: 48
  test_file: /testFile
  repetitions: 10
  dfs_destroy: False
  iorflags:
    write_flags: "-w -F -k -G 1"
    read_flags: "-F -r -R -k -G 1"
    api: DFS
    dfs_oclass: RP_2G8
    dfs_dir_oclass: RP_2G8
    ior_test_sequence:
    #   - [scm_size, nvme_size, transfersize, blocksize]
    #    The values are set to be in the multiples of 10.
    #    Values are appx GB.
        - [5000000000, 30000000000, 4000, 50000000]          #[4K, 51M]
        - [5000000000, 30000000000, 1000000, 500000000]      #[1M, 512M]
        - [5000000000, 30000000000, 1000000000, 8000000000]  #[1G, 8G]
test_obj_class:
  oclass:
    - RP_3G6
    - RP_4G1
    - S1
loop_test:
  iterations: 3
aggregation:
  test_with_aggregation: True
rebuild:
  test_with_rebuild: True
checksum:
  test_with_checksum: False
