#/*
## * (C) Copyright 2018-2019 Intel Corporation.
## *
## * Licensed under the Apache License, Version 2.0 (the "License");
## * you may not use this file except in compliance with the License.
## * You may obtain a copy of the License at
## *
## *    http://www.apache.org/licenses/LICENSE-2.0
## *
## * Unless required by applicable law or agreed to in writing, software
## * distributed under the License is distributed on an "AS IS" BASIS,
## * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## * See the License for the specific language governing permissions and
## * limitations under the License.
## *
## * GOVERNMENT LICENSE RIGHTS-OPEN SOURCE SOFTWARE
## * The Government's rights to use, modify, reproduce, release, perform, display,
## * or disclose this software are subject to the terms of the Apache License as
## * provided in Contract No. B609815.
## * Any reproduction of computer software, computer software documentation, or
## * portions thereof marked with this legend must also reproduce the markings.
## */
##/**
## * An example daos EPOCH IO test conf file.
## */
#
## io conf file format:
## 1) some setting:
## test_lvl xxx (daos or vos, default is daos)
## dkey xxx
## akey xxx
## iod_size xxx (default is 1)
## obj_class xxx(ec or replica, default is replica)
##
## 2) update
## 2.1) update array and take snapshot
## update --tx x --snap --recx "[idx_start1, idx_end1] [idx_start2, idx_end2] ..."
## The max number of recxs is 5 (IOREQ_IOD_NR).
## 2.2) update single type record and take snapshot
## update --tx x --snap --single
##
## If no --epoch specified, then use default epoch 1.
## Other two options: --dkey xxx --akey xxx. If not specified then use the last
## dkey/akey set at above 1).
## for the option name:
## --single      == -s
## --recx        == -r
## --dkey        == -d
## --akey        == -a
##
## 3) fetch and verify based on snapshot teaken after update.
## same parameter usage as above 2)
##
## 4) discard
##
## 5) punch
##
#

test_lvl daos
dkey dkey_2
akey akey_2
iod_size 3

update --tx 1 -r "[0, 1000]"
update --tx 2 -r "[2, 500] [510, 990]"
update --tx 3 -r "[4, 40] [60, 80] [200, 490] [550, 800] [900, 1100]"
update --tx 4 -r "[20, 70] [78, 333] [377, 488] [600, 2000]"
update --tx 9 -r "[0, 2000]"
update --tx 100 --recx "[4, 40] [60, 80] [200, 490] [550, 800] [900, 1100]"
update --tx 200 --recx "[10, 71] [78, 344] [377, 444] [610, 1000]"
update --tx 4 -d dkey_another -a akey_another -r "[20, 70] [78, 333] [377, 488] [600, 2000]"
update --tx 100 -d dkey_another -a akey_another -r "[0, 3000]"

fetch --tx 1 -r "[0, 1000]"
fetch --tx 2 -r "[0, 50] [300, 1000]"
fetch --tx 3 -r "[1, 20] [30, 80] [100, 240] [250, 400] [500, 1100]"
fetch --tx 4 -r "[20, 30] [48, 333] [377, 388] [400, 2000]"
fetch --tx 4 -d dkey_another -a akey_another -r "[0, 2000]"
fetch --tx 110 -d dkey_another -a akey_another -r "[0, 3000]"
fetch --tx 10 -r "[0, 2000]"
fetch --tx 150 -r "[0, 2000]"
fetch --tx 250 -r "[0, 2000]"
pool --query
